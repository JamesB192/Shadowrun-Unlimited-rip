diff --git a/SR-Unlimited/data/convos/39998e333363315801000fae.convo.txt b/SR-Unlimited/data/convos/39998e333363315801000fae.convo.txt
index e650a1d..37d97eb 100644
--- a/SR-Unlimited/data/convos/39998e333363315801000fae.convo.txt
+++ b/SR-Unlimited/data/convos/39998e333363315801000fae.convo.txt
@@ -87,7 +87,7 @@ nodes {
     id: "3999933e3363315801000fce"
   }
   index: 7
-  text: "I have no idea. But maybe if you did a little legwork, you could come up with a few ideas... Take your time. Anything worth doing is worth doing right."
+  text: "I have no idea. But maybe if you did a little legwork, you could come up with a few ideas... Take your time. Anything worth doing is worth doing right. Well one lead comes to mind. The Yakuza work with gun runners a lot."
   branches {
     responseText: "Thanks for the advice Vigor. I guess I\'m off to work."
     actions {
@@ -514,7 +514,7 @@ nodes {
     id: "52d9e82c336331d02e0029ba"
   }
   index: 19
-  text: "{{GM}}Vigor looks slightly annoyed{{/GM}}\n\nDo some legwork, and figure out how to get to Chet. Legwork generally means making some calls, running around asking questions. Do what you have to do to get some intel."
+  text: "{{GM}}Vigor looks slightly annoyed{{/GM}}\n\nDo some legwork, and figure out how to get to Chet. Legwork generally means making some calls, running around asking questions. Do what you have to do to get some intel. The Yakuza deal with gun runners a lot, try there."
   branches {
     responseText: "Right."
     actions {
@@ -574,7 +574,7 @@ nodes {
     id: "52d9e8bd336331d02e0029c9"
   }
   index: 21
-  text: "{{GM}}Vigor looks slightly annoyed{{/GM}}\n\nFirst off, you should finish the job you\'re doing. You can\'t take on multiple contracts at a time. Then do some legwork, and figure out how to get to Chet. Legwork generally means making some calls, running around asking questions. Do what you have to do to get some intel."
+  text: "{{GM}}Vigor looks slightly annoyed{{/GM}}\n\nFirst off, you should finish the job you\'re doing. You can\'t take on multiple contracts at a time. Then do some legwork, and figure out how to get to Chet. Legwork generally means making some calls, running around asking questions. Do what you have to do to get some intel. The Yakuza deal with gun runners a lot,try there once you\'re not on a job."
   branches {
     responseText: "Right."
     nextNodeIndex: -1
@@ -586,81 +586,43 @@ nodes {
     id: "529957a5336331c01b006b68"
   }
   index: 22
-  text: "{{GM}}The light on your commlink is blinking indicating an unheard message{{/GM}}\n\nHey $(l.name), seems like your contract with Mr. Boone has come to an end, and I may have some clients in need of someone with your skill set. Give me call if you\'re looking for work, you can get me on this number."
+  text: "He\'s showing more teeth than usual in what might be a smile"
   branches {
-    responseText: ""
-    actions {
-      ops {
-        functionName: "Set Variable (bool)"
-        args {
-          call_value {
-            functionName: "Get Story Variable (bool)"
-            args {
-              string_value: "51f15c62336331d02c00440e"
-            }
-            args {
-              string_value: "Vigors_Number"
-            }
-          }
-        }
-        args {
-          call_value {
-            functionName: "Get Preset Value (int)"
-            args {
-              string_value: "bool"
-            }
-            args {
-              int_value: 1
-            }
-          }
-        }
-      }
-    }
-    nextNodeIndex: -1
-  }
-  nodeType: ConversationNodeType_Simple
-}
-nodes {
-  idRef {
-    id: "529957a5336331c01b006b68"
-  }
-  index: 23
-  text: "$(l.name), I see you got my message. So are you interested in doing some work. Be warned, I specialize in jobs that involve getting your hands dirty."
-  branches {
-    responseText: "I don\'t mind."
-    nextNodeIndex: 24
+    responseText: "So why the smile?"
+    nextNodeIndex: 23
   }
   branches {
-    responseText: "I like getting my hands dirty."
-    nextNodeIndex: 32
+    responseText: "You seem happy so spill?"
+    nextNodeIndex: 23
+    auxiliaryLink: true
   }
   branches {
-    responseText: "It\'s not really my thing."
-    nextNodeIndex: 33
+    responseText: "When a fixer is happy someone is getting screwed. So who is the unlucky drek head?"
+    nextNodeIndex: 23
+    auxiliaryLink: true
   }
-  nodeType: ConversationNodeType_Simple
+  nodeType: ConversationNodeType_GM_Voice
 }
 nodes {
   idRef {
-    id: "54602dba363735b40f00917c"
+    id: "5cf20016396639780c006dc1"
   }
-  index: 24
-  text: "I don\'t mind getting my hands dirty, as long as there is a paycheck in it for me."
+  index: 23
+  text: "{{GM}}Vigor shows even more teeth.{{/GM}}\n\nI have hot tip about a job. Apparently some big shot at Mitsuhama has a sculpture someone else wants. They\'re offering \302\245$(story.Pay) to a runner who can get it for them. "
   branches {
-    responseText: ""
-    nextNodeIndex: 25
+    responseText: "That\'s a nice payday."
+    nextNodeIndex: 24
   }
   nodeType: ConversationNodeType_Simple
-  sourceWithTagInScene: "isPlayer"
 }
 nodes {
   idRef {
-    id: "54602e60363735b40f009183"
+    id: "5cf30967396639640e0042a4"
   }
-  index: 25
-  text: "Good, then we will get along just fine. Are you looking for a job right now?"
+  index: 24
+  text: "You up for the job? Once you take it I won\'t let you back out. The contacts needed for a job like this likely do not come cheep."
   branches {
-    responseText: "Yeah."
+    responseText: "Yes"
     conditions {
       ops {
         functionName: "Comparison (bool)"
@@ -699,11 +661,11 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 26
+    nextNodeIndex: 25
     hideIfUnavailable: true
   }
   branches {
-    responseText: "Not right now."
+    responseText: "I\'ve some time to kill so why not?"
     conditions {
       ops {
         functionName: "Comparison (bool)"
@@ -742,22 +704,41 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 28
+    nextNodeIndex: 25
+    hideIfUnavailable: true
+    auxiliaryLink: true
+  }
+  branches {
+    responseText: "That\'s sounds good and all but why are you happy?"
+    nextNodeIndex: 26
+    hideIfUnavailable: true
+    onlyOnce: true
+    idRef {
+      id: "5cf2042a396639780c006fe9"
+    }
+  }
+  branches {
+    responseText: "Sound too good to be true so it likely is."
+    nextNodeIndex: 27
     hideIfUnavailable: true
+    onlyOnce: true
+    idRef {
+      id: "5cf2042f396639780c006fea"
+    }
   }
   branches {
-    responseText: "Actually..."
+    responseText: "Yeah, but why me?"
     conditions {
       ops {
-        functionName: "Comparison (bool)"
+        functionName: "Comparison (int)"
         args {
           call_value {
-            functionName: "Get Story Variable (bool)"
+            functionName: "Get Story Variable (int)"
             args {
               string_value: "51f15c62336331d02c00440e"
             }
             args {
-              string_value: "Employed"
+              string_value: "Conversation_Step"
             }
           }
         }
@@ -765,119 +746,62 @@ nodes {
           call_value {
             functionName: "Get Preset Value (int)"
             args {
-              string_value: "IsOrIsNot"
+              string_value: "Comparison Ops"
             }
             args {
-              int_value: 1
+              int_value: 0
             }
           }
         }
         args {
-          call_value {
-            functionName: "Get Preset Value (int)"
-            args {
-              string_value: "bool"
-            }
-            args {
-              int_value: 1
-            }
-          }
+          int_value: 1
         }
       }
     }
-    nextNodeIndex: 30
-    hideIfUnavailable: true
-  }
-  nodeType: ConversationNodeType_Simple
-}
-nodes {
-  idRef {
-    id: "54602f24363735b40f009188"
-  }
-  index: 26
-  text: "Yeah, I\'m in between runs at the moment."
-  branches {
-    responseText: ""
-    nextNodeIndex: 27
-  }
-  nodeType: ConversationNodeType_Simple
-  sourceWithTagInScene: "isPlayer"
-}
-nodes {
-  idRef {
-    id: "54602fd8363735b40f009196"
-  }
-  index: 27
-  text: "Alright, let me just check..."
-  branches {
-    responseText: ""
     actions {
       ops {
-        functionName: "Set Variable (string)"
+        functionName: "Set Variable (int)"
         args {
           call_value {
-            functionName: "Get Story Variable (string)"
+            functionName: "Get Story Variable (int)"
             args {
               string_value: "51f15c62336331d02c00440e"
             }
             args {
-              string_value: "Current_Fixer"
+              string_value: "Conversation_Step"
             }
           }
         }
         args {
-          string_value: "Vigor"
+          int_value: 0
         }
       }
+    }
+    nextNodeIndex: 28
+    hideIfUnavailable: true
+    onlyOnce: true
+    idRef {
+      id: "5cf31a96396639640e004953"
+    }
+  }
+  branches {
+    responseText: "I have something to do first."
+    actions {
       ops {
-        functionName: "Start Conversation Between Actors"
-        args {
-          call_value {
-            functionName: "Get Map Item (Conversation)"
-            args {
-              string_value: "5442d3f6363735e00e003fcf"
-            }
-          }
-        }
-        args {
-          call_value {
-            functionName: "Get Map Item (Player)"
-            args {
-              int_value: 0
-            }
-          }
-        }
+        functionName: "Set Variable (int)"
         args {
           call_value {
-            functionName: "Nearest Tagged Actor to Actor"
+            functionName: "Get Story Variable (int)"
             args {
-              call_value {
-                functionName: "Get Map Item (SenseTagList)"
-                args {
-                  string_value: "Vigor"
-                }
-              }
+              string_value: "51f15c62336331d02c00440e"
             }
             args {
-              call_value {
-                functionName: "Get Map Item (Player)"
-                args {
-                  int_value: 0
-                }
-              }
+              string_value: "Pay"
             }
           }
         }
         args {
-          call_value {
-            functionName: "Get Preset Value (int)"
-            args {
-              string_value: "WithOrWithout"
-            }
-            args {
-              int_value: 1
-            }
-          }
+          int_value: 0
         }
       }
     }
@@ -1206,89 +1130,87 @@ nodes {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "srtest-rate"
+            string_value: "StoryStep"
           }
         }
       }
       args {
         call_value {
-          functionName: "Random (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            call_value {
-              functionName: "Get Story Variable (int)"
-              args {
-                string_value: "51f15c62336331d02c00440e"
-              }
-              args {
-                string_value: "srtest-rateLow"
-              }
-            }
+            string_value: "Comparison Ops"
           }
           args {
-            call_value {
-              functionName: "Get Story Variable (int)"
-              args {
-                string_value: "51f15c62336331d02c00440e"
-              }
-              args {
-                string_value: "srtest-rateHigh"
-              }
-            }
+            int_value: 0
           }
         }
       }
+      args {
+        int_value: 19
+      }
     }
     ops {
-      functionName: "Add To Variable (int)"
+      functionName: "Comparison (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Variable (bool)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "In_Person"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
           }
           args {
-            string_value: "srtest-rate"
+            int_value: 1
           }
         }
       }
       args {
         call_value {
-          functionName: "Random (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            call_value {
-              functionName: "Get Story Variable (int)"
-              args {
-                string_value: "51f15c62336331d02c00440e"
-              }
-              args {
-                string_value: "srtest-rateLow"
-              }
-            }
+            string_value: "bool"
           }
           args {
-            call_value {
-              functionName: "Get Story Variable (int)"
-              args {
-                string_value: "51f15c62336331d02c00440e"
-              }
-              args {
-                string_value: "srtest-rateHigh"
-              }
-            }
+            int_value: 1
           }
         }
       }
     }
+  }
+  actions {
     ops {
       functionName: "Set Variable (int)"
       args {
         call_value {
           functionName: "Get Story Variable (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "537249303032660016001cfa"
+          }
+          args {
+            string_value: "Pay"
+          }
+        }
+      }
+      args {
+        int_value: 10000
+      }
+    }
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "537249303032660016001cfa"
           }
           args {
-            string_value: "General_Use3"
+            string_value: "Pay"
           }
         }
       }
@@ -1297,39 +1219,12 @@ nodes {
           functionName: "Arithmetic (int)"
           args {
             call_value {
-              functionName: "Arithmetic (int)"
+              functionName: "Get Story Variable (int)"
               args {
-                call_value {
-                  functionName: "Get Story Variable (int)"
-                  args {
-                    string_value: "51f15c62336331d02c00440e"
-                  }
-                  args {
-                    string_value: "srtest-invested"
-                  }
-                }
+                string_value: "51f15c62336331d02c00440e"
               }
               args {
-                call_value {
-                  functionName: "Get Preset Value (int)"
-                  args {
-                    string_value: "Arithmetic Ops"
-                  }
-                  args {
-                    int_value: 2
-                  }
-                }
-              }
-              args {
-                call_value {
-                  functionName: "Get Story Variable (int)"
-                  args {
-                    string_value: "51f15c62336331d02c00440e"
-                  }
-                  args {
-                    string_value: "srtest-rate"
-                  }
-                }
+                string_value: "Pay"
               }
             }
           }
@@ -1340,18 +1235,64 @@ nodes {
                 string_value: "Arithmetic Ops"
               }
               args {
-                int_value: 3
+                int_value: 0
               }
             }
           }
           args {
             call_value {
-              functionName: "Get Story Variable (int)"
+              functionName: "Arithmetic (int)"
               args {
-                string_value: "51f15c62336331d02c00440e"
+                call_value {
+                  functionName: "Arithmetic (int)"
+                  args {
+                    call_value {
+                      functionName: "Get Story Variable (int)"
+                      args {
+                        string_value: "51f15c62336331d02c00440e"
+                      }
+                      args {
+                        string_value: "Pay"
+                      }
+                    }
+                  }
+                  args {
+                    call_value {
+                      functionName: "Get Preset Value (int)"
+                      args {
+                        string_value: "Arithmetic Ops"
+                      }
+                      args {
+                        int_value: 3
+                      }
+                    }
+                  }
+                  args {
+                    int_value: 10
+                  }
+                }
+              }
+              args {
+                call_value {
+                  functionName: "Get Preset Value (int)"
+                  args {
+                    string_value: "Arithmetic Ops"
+                  }
+                  args {
+                    int_value: 2
+                  }
+                }
               }
               args {
-                string_value: "srtest-investmentDenominator"
+                call_value {
+                  functionName: "Get Story Variable (int)"
+                  args {
+                    string_value: "51f15c62336331d02c00440e"
+                  }
+                  args {
+                    string_value: "Custom_Skill-Negotiation"
+                  }
+                }
               }
             }
           }
@@ -1359,7 +1300,8 @@ nodes {
       }
     }
   }
-  comment: "investment node"
+  nextNodeIndex: 22
+  hideIfUnavailable: true
 }
 roots {
   responseText: ""
@@ -1384,31 +1326,24 @@ roots {
             string_value: "Comparison Ops"
           }
           args {
-            int_value: 4
+            int_value: 3
           }
         }
       }
       args {
-        int_value: 10
+        int_value: 18
       }
     }
-  }
-  nextNodeIndex: 0
-  hideIfUnavailable: true
-}
-roots {
-  responseText: ""
-  conditions {
     ops {
-      functionName: "Comparison (int)"
+      functionName: "Comparison (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Story Variable (bool)"
           args {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "StoryStep"
+            string_value: "Vigor_CallBack2"
           }
         }
       }
@@ -1416,88 +1351,63 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "Comparison Ops"
+            string_value: "IsOrIsNot"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
-      args {
-        int_value: 10
-      }
-    }
-  }
-  nextNodeIndex: 1
-  hideIfUnavailable: true
-}
-roots {
-  responseText: ""
-  conditions {
-    ops {
-      functionName: "Comparison (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "bool"
           }
           args {
-            string_value: "StoryStep"
+            int_value: 0
           }
         }
       }
+    }
+    ops {
+      functionName: "Comparison (bool)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (bool)"
           args {
-            string_value: "Comparison Ops"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            int_value: 0
+            string_value: "Vigor_CallBack"
           }
         }
       }
-      args {
-        int_value: 15
-      }
-    }
-  }
-  actions {
-    ops {
-      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "IsOrIsNot"
           }
           args {
-            string_value: "StoryStep"
+            int_value: 1
           }
         }
       }
-      args {
-        int_value: 16
-      }
-    }
-    ops {
-      functionName: "Add To Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "bool"
           }
           args {
-            string_value: "TrainingDuration"
+            int_value: 1
           }
         }
       }
-      args {
-        int_value: 1
-      }
     }
+  }
+  actions {
     ops {
       functionName: "Set Variable (bool)"
       args {
@@ -1507,7 +1417,7 @@ roots {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "Run_Factor_1"
+            string_value: "Vigor_CallBack2"
           }
         }
       }
@@ -1518,7 +1428,7 @@ roots {
             string_value: "bool"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
@@ -1532,7 +1442,7 @@ roots {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "Run_Factor_2"
+            string_value: "Vigors_Number"
           }
         }
       }
@@ -1543,13 +1453,20 @@ roots {
             string_value: "bool"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
     }
+  }
+  nextNodeIndex: 31
+  hideIfUnavailable: true
+}
+roots {
+  responseText: ""
+  conditions {
     ops {
-      functionName: "Set Variable (bool)"
+      functionName: "Comparison (bool)"
       args {
         call_value {
           functionName: "Get Story Variable (bool)"
@@ -1557,7 +1474,18 @@ roots {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "Run_Factor_3"
+            string_value: "Vigor_CallBack2"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
           }
         }
       }
@@ -1568,18 +1496,18 @@ roots {
             string_value: "bool"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
     }
     ops {
-      functionName: "Set Variable (bool)"
+      functionName: "Comparison (bool)"
       args {
         call_value {
           functionName: "Get Story Variable (bool)"
           args {
-            string_value: "51f169b733633124330018bf"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
             string_value: "Employed"
@@ -1590,128 +1518,234 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "bool"
+            string_value: "IsOrIsNot"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
-    }
-    ops {
-      functionName: "Add To Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f169b733633124330018bf"
+            string_value: "bool"
           }
           args {
-            string_value: "Street_Cred"
+            int_value: 0
           }
         }
       }
-      args {
-        int_value: 5
-      }
     }
     ops {
-      functionName: "Add To Variable (int)"
+      functionName: "AND"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Comparison (int)"
           args {
-            string_value: "51f169b733633124330018bf"
+            call_value {
+              functionName: "Get Story Variable (int)"
+              args {
+                string_value: "51f15c62336331d02c00440e"
+              }
+              args {
+                string_value: "Story_Mission"
+              }
+            }
           }
           args {
-            string_value: "Notoriety"
+            call_value {
+              functionName: "Get Preset Value (int)"
+              args {
+                string_value: "Comparison Ops"
+              }
+              args {
+                int_value: 1
+              }
+            }
+          }
+          args {
+            int_value: 10
           }
         }
       }
-      args {
-        int_value: 5
-      }
-    }
-    ops {
-      functionName: "Add Actor Karma"
       args {
         call_value {
-          functionName: "Specific Actor"
+          functionName: "AND"
           args {
             call_value {
-              functionName: "Get Map Item (Player)"
+              functionName: "AND"
               args {
-                int_value: 0
+                call_value {
+                  functionName: "Comparison (int)"
+                  args {
+                    call_value {
+                      functionName: "Get Story Variable (int)"
+                      args {
+                        string_value: "51f15c62336331d02c00440e"
+                      }
+                      args {
+                        string_value: "StoryStep"
+                      }
+                    }
+                  }
+                  args {
+                    call_value {
+                      functionName: "Get Preset Value (int)"
+                      args {
+                        string_value: "Comparison Ops"
+                      }
+                      args {
+                        int_value: 1
+                      }
+                    }
+                  }
+                  args {
+                    int_value: 23
+                  }
+                }
+              }
+              args {
+                call_value {
+                  functionName: "Comparison (int)"
+                  args {
+                    call_value {
+                      functionName: "Get Story Variable (int)"
+                      args {
+                        string_value: "51f15c62336331d02c00440e"
+                      }
+                      args {
+                        string_value: "StoryStep"
+                      }
+                    }
+                  }
+                  args {
+                    call_value {
+                      functionName: "Get Preset Value (int)"
+                      args {
+                        string_value: "Comparison Ops"
+                      }
+                      args {
+                        int_value: 1
+                      }
+                    }
+                  }
+                  args {
+                    int_value: 24
+                  }
+                }
               }
             }
           }
           args {
+            call_value {
+              functionName: "AND"
+              args {
+                call_value {
+                  functionName: "Get Preset Value (int)"
+                  args {
+                    string_value: "bool"
+                  }
+                  args {
+                    int_value: 1
+                  }
+                }
+              }
+              args {
+                call_value {
+                  functionName: "Get Preset Value (int)"
+                  args {
+                    string_value: "bool"
+                  }
+                  args {
+                    int_value: 1
+                  }
+                }
+              }
+            }
           }
         }
       }
-      args {
-        int_value: 5
-      }
     }
     ops {
-      functionName: "Set Variable (int)"
+      functionName: "AND"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Comparison (int)"
           args {
-            string_value: "51f169b733633124330018bf"
+            call_value {
+              functionName: "Get Story Variable (int)"
+              args {
+                string_value: "51f15c62336331d02c00440e"
+              }
+              args {
+                string_value: "StoryStep"
+              }
+            }
           }
           args {
-            string_value: "Run_Identifier"
-          }
-        }
-      }
-      args {
-        int_value: 0
-      }
-    }
-    ops {
-      functionName: "Set Variable (bool)"
-      args {
-        call_value {
-          functionName: "Get Story Variable (bool)"
-          args {
-            string_value: "51f15c62336331d02c00440e"
+            call_value {
+              functionName: "Get Preset Value (int)"
+              args {
+                string_value: "Comparison Ops"
+              }
+              args {
+                int_value: 1
+              }
+            }
           }
           args {
-            string_value: "No_Associated_System"
+            int_value: 26
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Comparison (int)"
           args {
-            string_value: "bool"
+            call_value {
+              functionName: "Get Story Variable (int)"
+              args {
+                string_value: "51f15c62336331d02c00440e"
+              }
+              args {
+                string_value: "Victor_Out"
+              }
+            }
           }
           args {
-            int_value: 0
+            call_value {
+              functionName: "Get Preset Value (int)"
+              args {
+                string_value: "Comparison Ops"
+              }
+              args {
+                int_value: 1
+              }
+            }
+          }
+          args {
+            int_value: 1
           }
         }
       }
     }
   }
-  nextNodeIndex: 8
-  hideIfUnavailable: true
+  nextNodeIndex: 42
 }
 roots {
   responseText: ""
   conditions {
     ops {
-      functionName: "Comparison (int)"
+      functionName: "Comparison (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Story Variable (bool)"
           args {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "StoryStep"
+            string_value: "Vigor_CallBack2"
           }
         }
       }
@@ -1719,15 +1753,23 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "Comparison Ops"
+            string_value: "IsOrIsNot"
           }
           args {
-            int_value: 2
+            int_value: 1
           }
         }
       }
       args {
-        int_value: 15
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 1
+          }
+        }
       }
     }
     ops {
@@ -1739,7 +1781,7 @@ roots {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "Vigor_CallBack"
+            string_value: "Employed"
           }
         }
       }
@@ -1767,50 +1809,138 @@ roots {
       }
     }
     ops {
-      functionName: "Comparison (int)"
+      functionName: "OR"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Comparison (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            call_value {
+              functionName: "Get Story Variable (int)"
+              args {
+                string_value: "51f15c62336331d02c00440e"
+              }
+              args {
+                string_value: "StoryStep"
+              }
+            }
           }
           args {
-            string_value: "StoryStep"
+            call_value {
+              functionName: "Get Preset Value (int)"
+              args {
+                string_value: "Comparison Ops"
+              }
+              args {
+                int_value: 0
+              }
+            }
+          }
+          args {
+            int_value: 19
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "OR"
           args {
-            string_value: "Comparison Ops"
+            call_value {
+              functionName: "Comparison (int)"
+              args {
+                call_value {
+                  functionName: "Nothing Selected"
+                }
+              }
+              args {
+                call_value {
+                  functionName: "Get Preset Value (int)"
+                  args {
+                    string_value: "Comparison Ops"
+                  }
+                  args {
+                    int_value: 0
+                  }
+                }
+              }
+              args {
+                int_value: 23
+              }
+            }
           }
           args {
-            int_value: 4
+            call_value {
+              functionName: "OR"
+              args {
+                call_value {
+                  functionName: "Comparison (int)"
+                  args {
+                    call_value {
+                      functionName: "Nothing Selected"
+                    }
+                  }
+                  args {
+                    call_value {
+                      functionName: "Get Preset Value (int)"
+                      args {
+                        string_value: "Comparison Ops"
+                      }
+                      args {
+                        int_value: 0
+                      }
+                    }
+                  }
+                  args {
+                    int_value: 24
+                  }
+                }
+              }
+              args {
+                call_value {
+                  functionName: "Comparison (int)"
+                  args {
+                    call_value {
+                      functionName: "Nothing Selected"
+                    }
+                  }
+                  args {
+                    call_value {
+                      functionName: "Get Preset Value (int)"
+                      args {
+                        string_value: "Comparison Ops"
+                      }
+                      args {
+                        int_value: 0
+                      }
+                    }
+                  }
+                  args {
+                    int_value: 26
+                  }
+                }
+              }
+            }
           }
         }
       }
-      args {
-        int_value: 18
-      }
     }
-  }
-  nextNodeIndex: 17
-  hideIfUnavailable: true
-}
-roots {
-  responseText: ""
-  conditions {
     ops {
-      functionName: "Comparison (int)"
+      functionName: "Comparison (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Variable (bool)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "In_Person"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
           }
           args {
-            string_value: "StoryStep"
+            int_value: 1
           }
         }
       }
@@ -1818,27 +1948,31 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "Comparison Ops"
+            string_value: "bool"
           }
           args {
             int_value: 0
           }
         }
       }
-      args {
-        int_value: 11
-      }
     }
+  }
+  nextNodeIndex: 44
+  hideIfUnavailable: true
+}
+roots {
+  responseText: "Job\'s done."
+  conditions {
     ops {
       functionName: "Comparison (bool)"
       args {
         call_value {
           functionName: "Get Story Variable (bool)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            string_value: "Employed"
+            string_value: "RunSuccess"
           }
         }
       }
@@ -1860,28 +1994,20 @@ roots {
             string_value: "bool"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
     }
-  }
-  nextNodeIndex: 18
-  hideIfUnavailable: true
-}
-roots {
-  responseText: ""
-  conditions {
     ops {
-      functionName: "Comparison (int)"
+      functionName: "Comparison (string)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Story Variable (string)"
           args {
-            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "StoryStep"
+            string_value: "Current_Fixer"
           }
         }
       }
@@ -1889,38 +2015,41 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "Comparison Ops"
+            string_value: "IsOrIsNot"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
       args {
-        int_value: 11
+        string_value: "Vigor"
       }
     }
+  }
+  actions {
     ops {
-      functionName: "Comparison (bool)"
+      functionName: "Remove Item from Actor"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
-          args {
-            string_value: "51f15c62336331d02c00440e"
-          }
+          functionName: "Get Map Item (Item)"
           args {
-            string_value: "Employed"
+            string_value: "Keycard"
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Specific Actor"
           args {
-            string_value: "IsOrIsNot"
+            call_value {
+              functionName: "Get Map Item (Player)"
+              args {
+                int_value: 0
+              }
+            }
           }
           args {
-            int_value: 1
           }
         }
       }
@@ -1928,7 +2057,7 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "bool"
+            string_value: "WithOrWithout"
           }
           args {
             int_value: 1
@@ -1936,23 +2065,28 @@ roots {
         }
       }
     }
-  }
-  nextNodeIndex: 20
-  hideIfUnavailable: true
-}
-roots {
-  responseText: ""
-  conditions {
     ops {
-      functionName: "Comparison (int)"
+      functionName: "Remove Item from Actor"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Map Item (Item)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "Matrix_Data"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Specific Actor"
+          args {
+            call_value {
+              functionName: "Get Map Item (Player)"
+              args {
+                int_value: 0
+              }
+            }
           }
           args {
-            string_value: "StoryStep"
           }
         }
       }
@@ -1960,97 +2094,81 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "Comparison Ops"
+            string_value: "WithOrWithout"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
-      args {
-        int_value: 18
-      }
     }
     ops {
-      functionName: "Comparison (bool)"
+      functionName: "Clear All Waypoints"
+    }
+    ops {
+      functionName: "Send Event"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
-          args {
-            string_value: "51f15c62336331d02c00440e"
-          }
+          functionName: "Get Map Item (Event)"
           args {
-            string_value: "Vigor_CallBack"
+            string_value: "Job\'s Over"
           }
         }
       }
+    }
+    ops {
+      functionName: "Add Nuyen"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            int_value: 1
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "bool"
-          }
-          args {
-            int_value: 0
+            string_value: "Pay"
           }
         }
       }
     }
-  }
-  actions {
     ops {
-      functionName: "Set Variable (bool)"
+      functionName: "Add Actor Karma"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Specific Actor"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            call_value {
+              functionName: "Get Map Item (Player)"
+              args {
+                int_value: 0
+              }
+            }
           }
           args {
-            string_value: "Vigor_CallBack"
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "bool"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            int_value: 1
+            string_value: "RunDifficulty"
           }
         }
       }
     }
-  }
-  nextNodeIndex: 22
-  hideIfUnavailable: true
-}
-roots {
-  responseText: ""
-  conditions {
     ops {
-      functionName: "Comparison (int)"
+      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Story Variable (bool)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            string_value: "StoryStep"
+            string_value: "Employed"
           }
         }
       }
@@ -2058,27 +2176,24 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "Comparison Ops"
+            string_value: "bool"
           }
           args {
-            int_value: 3
+            int_value: 0
           }
         }
       }
-      args {
-        int_value: 18
-      }
     }
     ops {
-      functionName: "Comparison (bool)"
+      functionName: "Set Variable (bool)"
       args {
         call_value {
           functionName: "Get Story Variable (bool)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            string_value: "Vigor_CallBack2"
+            string_value: "RunSuccess"
           }
         }
       }
@@ -2086,133 +2201,130 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "bool"
           }
           args {
-            int_value: 1
+            int_value: 0
           }
         }
       }
+    }
+    ops {
+      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "bool"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            int_value: 0
+            string_value: "Randomness"
           }
         }
       }
-    }
-    ops {
-      functionName: "Comparison (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Random (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            int_value: 1
           }
           args {
-            string_value: "Vigor_CallBack"
+            int_value: 1
           }
         }
       }
+    }
+    ops {
+      functionName: "Add To Variable (int)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            int_value: 1
+            string_value: "Street_Cred"
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "bool"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            int_value: 1
+            string_value: "RunDifficulty"
           }
         }
       }
     }
-  }
-  actions {
     ops {
-      functionName: "Set Variable (bool)"
+      functionName: "Add To Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            string_value: "Vigor_CallBack2"
+            string_value: "Notoriety"
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "bool"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            int_value: 1
+            string_value: "RunDifficulty"
           }
         }
       }
     }
-  }
-  nextNodeIndex: 23
-  hideIfUnavailable: true
-}
-roots {
-  responseText: ""
-  conditions {
     ops {
-      functionName: "Comparison (bool)"
+      functionName: "Remove Nuyen"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            string_value: "Vigor_CallBack2"
+            string_value: "Upkeep"
           }
         }
       }
+    }
+    ops {
+      functionName: "Add To Variable (int)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            int_value: 1
+            string_value: "Heat"
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "bool"
+            string_value: "51f169b733633124330018bf"
           }
           args {
-            int_value: 1
+            string_value: "RunDifficulty"
           }
         }
       }
     }
     ops {
-      functionName: "Comparison (bool)"
+      functionName: "Set Variable (bool)"
       args {
         call_value {
           functionName: "Get Story Variable (bool)"
@@ -2220,7 +2332,7 @@ roots {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "Employed"
+            string_value: "Run_Payment"
           }
         }
       }
@@ -2228,118 +2340,126 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "bool"
           }
           args {
             int_value: 1
           }
         }
       }
+    }
+    ops {
+      functionName: "Set Variable (string)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (string)"
           args {
-            string_value: "bool"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            int_value: 0
+            string_value: "Information"
           }
         }
       }
+      args {
+        string_value: "I should find some more work."
+      }
     }
-  }
-  nextNodeIndex: 34
-}
-roots {
-  responseText: "Job\'s done."
-  conditions {
     ops {
-      functionName: "Comparison (bool)"
+      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "51f169b733633124330018bf"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "RunSuccess"
+            string_value: "RemoteDoorDisable"
           }
         }
       }
+      args {
+        int_value: 0
+      }
+    }
+    ops {
+      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            int_value: 1
+            string_value: "RemoteCameraDisable"
           }
         }
       }
+      args {
+        int_value: 0
+      }
+    }
+    ops {
+      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "bool"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            int_value: 1
+            string_value: "Employee_SkeletonCrew"
           }
         }
       }
+      args {
+        int_value: 0
+      }
     }
     ops {
-      functionName: "Comparison (string)"
+      functionName: "Set Screen Label"
+      args {
+        string_value: "Journal"
+      }
       args {
         call_value {
           functionName: "Get Story Variable (string)"
           args {
+            string_value: "text"
           }
           args {
-            string_value: "Current_Fixer"
+            string_value: "Information"
           }
         }
       }
+    }
+    ops {
+      functionName: "Add To Variable (int)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            int_value: 1
+            string_value: "TrainingDuration"
           }
         }
       }
       args {
-        string_value: "Vigor"
+        int_value: 1
       }
     }
-  }
-  actions {
     ops {
-      functionName: "Remove Item from Actor"
-      args {
-        call_value {
-          functionName: "Get Map Item (Item)"
-          args {
-            string_value: "Keycard"
-          }
-        }
-      }
+      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Specific Actor"
+          functionName: "Get Story Variable (bool)"
           args {
-            call_value {
-              functionName: "Get Map Item (Player)"
-              args {
-                int_value: 0
-              }
-            }
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
+            string_value: "Run_Factor_1"
           }
         }
       }
@@ -2347,36 +2467,49 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "WithOrWithout"
+            string_value: "bool"
           }
           args {
-            int_value: 1
+            int_value: 0
           }
         }
       }
     }
     ops {
-      functionName: "Remove Item from Actor"
+      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Get Map Item (Item)"
+          functionName: "Get Story Variable (bool)"
           args {
-            string_value: "Matrix_Data"
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Run_Factor_2"
           }
         }
       }
       args {
         call_value {
-          functionName: "Specific Actor"
+          functionName: "Get Preset Value (int)"
           args {
-            call_value {
-              functionName: "Get Map Item (Player)"
-              args {
-                int_value: 0
-              }
-            }
+            string_value: "bool"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Set Variable (bool)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (bool)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
+            string_value: "Run_Factor_3"
           }
         }
       }
@@ -2384,70 +2517,72 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "WithOrWithout"
+            string_value: "bool"
           }
           args {
-            int_value: 1
+            int_value: 0
           }
         }
       }
     }
     ops {
-      functionName: "Clear All Waypoints"
-    }
-    ops {
-      functionName: "Send Event"
+      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Get Map Item (Event)"
+          functionName: "Get Story Variable (bool)"
           args {
-            string_value: "Job\'s Over"
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "LightSwitch"
           }
         }
       }
-    }
-    ops {
-      functionName: "Add Nuyen"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f169b733633124330018bf"
+            string_value: "bool"
           }
           args {
-            string_value: "Pay"
+            int_value: 0
           }
         }
       }
     }
     ops {
-      functionName: "Add Actor Karma"
+      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Specific Actor"
+          functionName: "Get Story Variable (int)"
           args {
-            call_value {
-              functionName: "Get Map Item (Player)"
-              args {
-                int_value: 0
-              }
-            }
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
+            string_value: "Story_Mission"
           }
         }
       }
+      args {
+        int_value: 0
+      }
+    }
+    ops {
+      functionName: "Set Variable (string)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Story Variable (string)"
           args {
-            string_value: "51f169b733633124330018bf"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "RunDifficulty"
+            string_value: "Run_Description"
           }
         }
       }
+      args {
+        string_value: "Nothing"
+      }
     }
     ops {
       functionName: "Set Variable (bool)"
@@ -2455,10 +2590,10 @@ roots {
         call_value {
           functionName: "Get Story Variable (bool)"
           args {
-            string_value: "51f169b733633124330018bf"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "Employed"
+            string_value: "MatrixRunComplete"
           }
         }
       }
@@ -2469,160 +2604,181 @@ roots {
             string_value: "bool"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
     }
     ops {
-      functionName: "Set Variable (bool)"
+      functionName: "Set Variable (string)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Story Variable (string)"
           args {
-            string_value: "51f169b733633124330018bf"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "RunSuccess"
+            string_value: "Current_Run-Location"
           }
         }
       }
+      args {
+        string_value: "Nil"
+      }
+    }
+    ops {
+      functionName: "Set Variable (string)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (string)"
           args {
-            string_value: "bool"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            int_value: 0
+            string_value: "Current_Run-Objective"
           }
         }
       }
+      args {
+        string_value: "Nil"
+      }
     }
     ops {
-      functionName: "Set Variable (int)"
+      functionName: "Kill Actor Followers"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "All Actors With Tag"
           args {
-            string_value: "51f169b733633124330018bf"
+            call_value {
+              functionName: "Get Map Item (SenseTagList)"
+              args {
+                string_value: "Clockwork"
+              }
+            }
           }
           args {
-            string_value: "Randomness"
+            call_value {
+              functionName: "Get Preset Value (int)"
+              args {
+                string_value: "AllOrAny"
+              }
+              args {
+                int_value: 0
+              }
+            }
           }
         }
       }
       args {
         call_value {
-          functionName: "Random (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            int_value: 1
+            string_value: "DeathMethod"
           }
           args {
-            int_value: 1
+            int_value: 3
           }
         }
       }
-    }
-    ops {
-      functionName: "Add To Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f169b733633124330018bf"
+            string_value: "WithOrWithout"
           }
           args {
-            string_value: "Street_Cred"
+            int_value: 1
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f169b733633124330018bf"
+            string_value: "WithOrWithout"
           }
           args {
-            string_value: "RunDifficulty"
+            int_value: 1
           }
         }
       }
     }
     ops {
-      functionName: "Add To Variable (int)"
+      functionName: "Kill Actor"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Specific Actor"
           args {
-            string_value: "51f169b733633124330018bf"
+            call_value {
+              functionName: "Get Map Item (Player)"
+              args {
+                int_value: 1
+              }
+            }
           }
           args {
-            string_value: "Notoriety"
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f169b733633124330018bf"
+            string_value: "DeathMethod"
           }
           args {
-            string_value: "RunDifficulty"
+            int_value: 3
           }
         }
       }
-    }
-    ops {
-      functionName: "Remove Nuyen"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f169b733633124330018bf"
+            string_value: "FacingDirection"
           }
           args {
-            string_value: "Upkeep"
+            int_value: 0
           }
         }
       }
-    }
-    ops {
-      functionName: "Add To Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "WithOrWithout"
           }
           args {
-            string_value: "Heat"
+            int_value: 0
           }
         }
       }
+    }
+    ops {
+      functionName: "Kill Actor"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Specific Actor"
           args {
-            string_value: "51f169b733633124330018bf"
+            call_value {
+              functionName: "Get Map Item (Player)"
+              args {
+                int_value: 2
+              }
+            }
           }
           args {
-            string_value: "RunDifficulty"
           }
         }
       }
-    }
-    ops {
-      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "DeathMethod"
           }
           args {
-            string_value: "Run_Payment"
+            int_value: 3
           }
         }
       }
@@ -2630,95 +2786,72 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "bool"
+            string_value: "FacingDirection"
           }
           args {
-            int_value: 1
+            int_value: 0
           }
         }
       }
-    }
-    ops {
-      functionName: "Set Variable (string)"
       args {
         call_value {
-          functionName: "Get Story Variable (string)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "WithOrWithout"
           }
           args {
-            string_value: "Information"
+            int_value: 0
           }
         }
       }
-      args {
-        string_value: "I should find some more work."
-      }
     }
     ops {
-      functionName: "Set Variable (int)"
+      functionName: "Kill Actor"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Specific Actor"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            call_value {
+              functionName: "Get Map Item (Player)"
+              args {
+                int_value: 3
+              }
+            }
           }
           args {
-            string_value: "RemoteDoorDisable"
           }
         }
       }
-      args {
-        int_value: 0
-      }
-    }
-    ops {
-      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "DeathMethod"
           }
           args {
-            string_value: "RemoteCameraDisable"
+            int_value: 3
           }
         }
       }
-      args {
-        int_value: 0
-      }
-    }
-    ops {
-      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "FacingDirection"
           }
           args {
-            string_value: "Employee_SkeletonCrew"
+            int_value: 0
           }
         }
       }
-      args {
-        int_value: 0
-      }
-    }
-    ops {
-      functionName: "Set Screen Label"
-      args {
-        string_value: "Journal"
-      }
       args {
         call_value {
-          functionName: "Get Story Variable (string)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "text"
+            string_value: "WithOrWithout"
           }
           args {
-            string_value: "Information"
+            int_value: 0
           }
         }
       }
@@ -2732,7 +2865,7 @@ roots {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "TrainingDuration"
+            string_value: "Runs_Vigor"
           }
         }
       }
@@ -2740,16 +2873,23 @@ roots {
         int_value: 1
       }
     }
+  }
+  nextNodeIndex: 46
+  hideIfUnavailable: true
+}
+roots {
+  responseText: "I need to bail on this run."
+  conditions {
     ops {
-      functionName: "Set Variable (bool)"
+      functionName: "Comparison (bool)"
       args {
         call_value {
           functionName: "Get Story Variable (bool)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "537249303032660016001cfa"
           }
           args {
-            string_value: "Run_Factor_1"
+            string_value: "Employed"
           }
         }
       }
@@ -2757,49 +2897,46 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "bool"
+            string_value: "IsOrIsNot"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
-    }
-    ops {
-      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "bool"
           }
           args {
-            string_value: "Run_Factor_2"
+            int_value: 1
           }
         }
       }
+    }
+    ops {
+      functionName: "Comparison (bool)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (bool)"
           args {
-            string_value: "bool"
+            string_value: "537249303032660016001cfa"
           }
           args {
-            int_value: 0
+            string_value: "RunSuccess"
           }
         }
       }
-    }
-    ops {
-      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "IsOrIsNot"
           }
           args {
-            string_value: "Run_Factor_3"
+            int_value: 1
           }
         }
       }
@@ -2816,15 +2953,14 @@ roots {
       }
     }
     ops {
-      functionName: "Set Variable (bool)"
+      functionName: "Comparison (string)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Story Variable (string)"
           args {
-            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "LightSwitch"
+            string_value: "Fixers_Name"
           }
         }
       }
@@ -2832,58 +2968,92 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "bool"
+            string_value: "IsOrIsNot"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
+      args {
+        string_value: "Vigor"
+      }
     }
     ops {
-      functionName: "Set Variable (int)"
+      functionName: "AND"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Comparison (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            call_value {
+              functionName: "Get Story Variable (int)"
+              args {
+                string_value: "51f15c62336331d02c00440e"
+              }
+              args {
+                string_value: "Story_Mission"
+              }
+            }
           }
           args {
-            string_value: "Story_Mission"
+            call_value {
+              functionName: "Get Preset Value (int)"
+              args {
+                string_value: "Comparison Ops"
+              }
+              args {
+                int_value: 1
+              }
+            }
+          }
+          args {
+            int_value: 10
           }
         }
       }
-      args {
-        int_value: 0
-      }
-    }
-    ops {
-      functionName: "Set Variable (string)"
       args {
         call_value {
-          functionName: "Get Story Variable (string)"
+          functionName: "Comparison (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            call_value {
+              functionName: "Get Story Variable (int)"
+              args {
+                string_value: "51f15c62336331d02c00440e"
+              }
+              args {
+                string_value: "StoryStep"
+              }
+            }
           }
           args {
-            string_value: "Run_Description"
+            call_value {
+              functionName: "Get Preset Value (int)"
+              args {
+                string_value: "Comparison Ops"
+              }
+              args {
+                int_value: 1
+              }
+            }
+          }
+          args {
+            int_value: 25
           }
         }
       }
-      args {
-        string_value: "Nothing"
-      }
     }
+  }
+  actions {
     ops {
       functionName: "Set Variable (bool)"
       args {
         call_value {
           functionName: "Get Story Variable (bool)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "537249303032660016001cfa"
           }
           args {
-            string_value: "MatrixRunComplete"
+            string_value: "Employed"
           }
         }
       }
@@ -2894,116 +3064,115 @@ roots {
             string_value: "bool"
           }
           args {
-            int_value: 1
+            int_value: 0
           }
         }
       }
     }
     ops {
-      functionName: "Set Variable (string)"
+      functionName: "Remove Item from Actor"
       args {
         call_value {
-          functionName: "Get Story Variable (string)"
-          args {
-            string_value: "51f15c62336331d02c00440e"
-          }
+          functionName: "Get Map Item (Item)"
           args {
-            string_value: "Current_Run-Location"
+            string_value: "Courier_Package1"
           }
         }
       }
-      args {
-        string_value: "Nil"
-      }
-    }
-    ops {
-      functionName: "Set Variable (string)"
       args {
         call_value {
-          functionName: "Get Story Variable (string)"
+          functionName: "Specific Actor"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            call_value {
+              functionName: "Triggering Actor"
+            }
           }
           args {
-            string_value: "Current_Run-Objective"
           }
         }
       }
       args {
-        string_value: "Nil"
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
       }
     }
     ops {
-      functionName: "Kill Actor Followers"
+      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "All Actors With Tag"
+          functionName: "Get Story Variable (int)"
           args {
-            call_value {
-              functionName: "Get Map Item (SenseTagList)"
-              args {
-                string_value: "Clockwork"
-              }
-            }
+            string_value: "537249303032660016001cfa"
           }
           args {
-            call_value {
-              functionName: "Get Preset Value (int)"
-              args {
-                string_value: "AllOrAny"
-              }
-              args {
-                int_value: 0
-              }
-            }
+            string_value: "Run_Identifier"
           }
         }
       }
+      args {
+        int_value: 0
+      }
+    }
+    ops {
+      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "DeathMethod"
+            string_value: "537249303032660016001cfa"
           }
           args {
-            int_value: 3
+            string_value: "Job_Check"
           }
         }
       }
+      args {
+        int_value: 0
+      }
+    }
+    ops {
+      functionName: "Set Variable (string)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (string)"
           args {
-            string_value: "WithOrWithout"
+            string_value: "537249303032660016001cfa"
           }
           args {
-            int_value: 1
+            string_value: "Information"
           }
         }
       }
+      args {
+        string_value: "Get a job."
+      }
+    }
+    ops {
+      functionName: "Clear All Waypoints"
+    }
+    ops {
+      functionName: "Remove Item from Actor"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "WithOrWithout"
-          }
+          functionName: "Get Map Item (Item)"
           args {
-            int_value: 1
+            string_value: "Beverage_Sample"
           }
         }
       }
-    }
-    ops {
-      functionName: "Kill Actor"
       args {
         call_value {
           functionName: "Specific Actor"
           args {
             call_value {
-              functionName: "Get Map Item (Player)"
-              args {
-                int_value: 1
-              }
+              functionName: "Triggering Actor"
             }
           }
           args {
@@ -3014,21 +3183,33 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "DeathMethod"
+            string_value: "WithOrWithout"
           }
           args {
-            int_value: 3
+            int_value: 1
           }
         }
       }
+    }
+    ops {
+      functionName: "Remove Item from Actor"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Map Item (Item)"
           args {
-            string_value: "FacingDirection"
+            string_value: "Documents"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Specific Actor"
+          args {
+            call_value {
+              functionName: "Triggering Actor"
+            }
           }
           args {
-            int_value: 0
           }
         }
       }
@@ -3039,36 +3220,30 @@ roots {
             string_value: "WithOrWithout"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
     }
     ops {
-      functionName: "Kill Actor"
+      functionName: "Remove Item from Actor"
       args {
         call_value {
-          functionName: "Specific Actor"
-          args {
-            call_value {
-              functionName: "Get Map Item (Player)"
-              args {
-                int_value: 2
-              }
-            }
-          }
+          functionName: "Get Map Item (Item)"
           args {
+            string_value: "Matrix_Data"
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Specific Actor"
           args {
-            string_value: "DeathMethod"
+            call_value {
+              functionName: "Triggering Actor"
+            }
           }
           args {
-            int_value: 3
           }
         }
       }
@@ -3076,36 +3251,30 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "FacingDirection"
+            string_value: "WithOrWithout"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
+    }
+    ops {
+      functionName: "Remove Item from Actor"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "WithOrWithout"
-          }
+          functionName: "Get Map Item (Item)"
           args {
-            int_value: 0
+            string_value: "Chem_Sample"
           }
         }
       }
-    }
-    ops {
-      functionName: "Kill Actor"
       args {
         call_value {
           functionName: "Specific Actor"
           args {
             call_value {
-              functionName: "Get Map Item (Player)"
-              args {
-                int_value: 3
-              }
+              functionName: "Triggering Actor"
             }
           }
           args {
@@ -3116,64 +3285,75 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "DeathMethod"
+            string_value: "WithOrWithout"
           }
           args {
-            int_value: 3
+            int_value: 1
           }
         }
       }
+    }
+    ops {
+      functionName: "Set Screen Label"
+      args {
+        string_value: "Journal"
+      }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (string)"
           args {
-            string_value: "FacingDirection"
+            string_value: "text"
           }
           args {
-            int_value: 0
+            string_value: "Information"
           }
         }
       }
+    }
+    ops {
+      functionName: "Add To Variable (int)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "WithOrWithout"
+            string_value: "537249303032660016001cfa"
           }
           args {
-            int_value: 0
+            string_value: "Street_Cred"
           }
         }
       }
+      args {
+        int_value: -1
+      }
     }
-  }
-  nextNodeIndex: 36
-  hideIfUnavailable: true
-}
-roots {
-  responseText: "I need to bail on this run."
-  conditions {
     ops {
-      functionName: "Comparison (bool)"
+      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Story Variable (int)"
           args {
             string_value: "537249303032660016001cfa"
           }
           args {
-            string_value: "Employed"
+            string_value: "Johnson_Meeting"
           }
         }
       }
+      args {
+        int_value: 0
+      }
+    }
+    ops {
+      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (bool)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "537249303032660016001cfa"
           }
           args {
-            int_value: 1
+            string_value: "Run_Factor_1"
           }
         }
       }
@@ -3184,13 +3364,13 @@ roots {
             string_value: "bool"
           }
           args {
-            int_value: 1
+            int_value: 0
           }
         }
       }
     }
     ops {
-      functionName: "Comparison (bool)"
+      functionName: "Set Variable (bool)"
       args {
         call_value {
           functionName: "Get Story Variable (bool)"
@@ -3198,18 +3378,7 @@ roots {
             string_value: "537249303032660016001cfa"
           }
           args {
-            string_value: "RunSuccess"
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "IsOrIsNot"
-          }
-          args {
-            int_value: 1
+            string_value: "Run_Factor_2"
           }
         }
       }
@@ -3226,14 +3395,15 @@ roots {
       }
     }
     ops {
-      functionName: "Comparison (string)"
+      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (string)"
+          functionName: "Get Story Variable (bool)"
           args {
+            string_value: "537249303032660016001cfa"
           }
           args {
-            string_value: "Fixers_Name"
+            string_value: "Run_Factor_3"
           }
         }
       }
@@ -3241,19 +3411,14 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "bool"
           }
           args {
-            int_value: 1
+            int_value: 0
           }
         }
       }
-      args {
-        string_value: "Vigor"
-      }
     }
-  }
-  actions {
     ops {
       functionName: "Set Variable (bool)"
       args {
@@ -3263,7 +3428,7 @@ roots {
             string_value: "537249303032660016001cfa"
           }
           args {
-            string_value: "Employed"
+            string_value: "LightSwitch"
           }
         }
       }
@@ -3285,7 +3450,7 @@ roots {
         call_value {
           functionName: "Get Map Item (Item)"
           args {
-            string_value: "Courier_Package1"
+            string_value: "Keycard"
           }
         }
       }
@@ -3294,7 +3459,10 @@ roots {
           functionName: "Specific Actor"
           args {
             call_value {
-              functionName: "Triggering Actor"
+              functionName: "Get Map Item (Player)"
+              args {
+                int_value: 0
+              }
             }
           }
           args {
@@ -3314,78 +3482,117 @@ roots {
       }
     }
     ops {
-      functionName: "Set Variable (int)"
+      functionName: "Set Variable (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Current_Run-Location"
+          }
+        }
+      }
+      args {
+        string_value: "Safehouse"
+      }
+    }
+  }
+  nextNodeIndex: -1
+  hideIfUnavailable: true
+}
+roots {
+  responseText: ""
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
       args {
         call_value {
           functionName: "Get Story Variable (int)"
           args {
-            string_value: "537249303032660016001cfa"
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 18
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (bool)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "Run_Identifier"
+            string_value: "Vigor_CallBack"
           }
         }
       }
-      args {
-        int_value: 0
-      }
-    }
-    ops {
-      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "537249303032660016001cfa"
+            string_value: "IsOrIsNot"
           }
           args {
-            string_value: "Job_Check"
+            int_value: 1
           }
         }
       }
-      args {
-        int_value: 0
-      }
-    }
-    ops {
-      functionName: "Set Variable (string)"
       args {
         call_value {
-          functionName: "Get Story Variable (string)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "537249303032660016001cfa"
+            string_value: "bool"
           }
           args {
-            string_value: "Information"
+            int_value: 0
           }
         }
       }
-      args {
-        string_value: "Get a job."
-      }
-    }
-    ops {
-      functionName: "Clear All Waypoints"
     }
+  }
+  nextNodeIndex: 47
+}
+roots {
+  responseText: ""
+  conditions {
     ops {
-      functionName: "Remove Item from Actor"
+      functionName: "Comparison (bool)"
       args {
         call_value {
-          functionName: "Get Map Item (Item)"
+          functionName: "Get Variable (bool)"
           args {
-            string_value: "Beverage_Sample"
+            string_value: "In_Person"
           }
         }
       }
       args {
         call_value {
-          functionName: "Specific Actor"
+          functionName: "Get Preset Value (int)"
           args {
-            call_value {
-              functionName: "Triggering Actor"
-            }
+            string_value: "IsOrIsNot"
           }
           args {
+            int_value: 1
           }
         }
       }
@@ -3393,7 +3600,7 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "WithOrWithout"
+            string_value: "bool"
           }
           args {
             int_value: 1
@@ -3402,15 +3609,7 @@ roots {
       }
     }
     ops {
-      functionName: "Remove Item from Actor"
-      args {
-        call_value {
-          functionName: "Get Map Item (Item)"
-          args {
-            string_value: "Documents"
-          }
-        }
-      }
+      functionName: "Evaluate If Actor Has Item"
       args {
         call_value {
           functionName: "Specific Actor"
@@ -3427,33 +3626,38 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "WithOrWithout"
+            string_value: "HasOrHasNot"
           }
           args {
             int_value: 1
           }
         }
       }
-    }
-    ops {
-      functionName: "Remove Item from Actor"
       args {
         call_value {
           functionName: "Get Map Item (Item)"
           args {
-            string_value: "Matrix_Data"
+            string_value: "Sculpture"
           }
         }
       }
+    }
+  }
+  nextNodeIndex: 48
+}
+roots {
+  responseText: ""
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
       args {
         call_value {
-          functionName: "Specific Actor"
+          functionName: "Get Story Variable (int)"
           args {
-            call_value {
-              functionName: "Triggering Actor"
-            }
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
+            string_value: "Story_Mission"
           }
         }
       }
@@ -3461,24 +3665,19 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "WithOrWithout"
+            string_value: "Comparison Ops"
           }
           args {
-            int_value: 1
+            int_value: 0
           }
         }
       }
-    }
-    ops {
-      functionName: "Remove Item from Actor"
       args {
-        call_value {
-          functionName: "Get Map Item (Item)"
-          args {
-            string_value: "Chem_Sample"
-          }
-        }
+        int_value: 10
       }
+    }
+    ops {
+      functionName: "Evaluate If Actor Has Item"
       args {
         call_value {
           functionName: "Specific Actor"
@@ -3495,75 +3694,63 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "WithOrWithout"
+            string_value: "HasOrHasNot"
           }
           args {
-            int_value: 1
+            int_value: 0
           }
         }
       }
-    }
-    ops {
-      functionName: "Set Screen Label"
-      args {
-        string_value: "Journal"
-      }
       args {
         call_value {
-          functionName: "Get Story Variable (string)"
-          args {
-            string_value: "text"
-          }
+          functionName: "Get Map Item (Item)"
           args {
-            string_value: "Information"
+            string_value: "Sculpture"
           }
         }
       }
     }
+  }
+  nextNodeIndex: 52
+}
+roots {
+  responseText: ""
+  conditions {
     ops {
-      functionName: "Add To Variable (int)"
+      functionName: "Comparison (int)"
       args {
         call_value {
           functionName: "Get Story Variable (int)"
           args {
-            string_value: "537249303032660016001cfa"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "Street_Cred"
+            string_value: "StoryStep"
           }
         }
       }
-      args {
-        int_value: -1
-      }
-    }
-    ops {
-      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "537249303032660016001cfa"
+            string_value: "Comparison Ops"
           }
           args {
-            string_value: "Johnson_Meeting"
+            int_value: 0
           }
         }
       }
       args {
-        int_value: 0
+        int_value: 23
       }
     }
     ops {
-      functionName: "Set Variable (bool)"
+      functionName: "Comparison (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
-          args {
-            string_value: "537249303032660016001cfa"
-          }
+          functionName: "Get Variable (bool)"
           args {
-            string_value: "Run_Factor_1"
+            string_value: "In_Person"
           }
         }
       }
@@ -3571,49 +3758,62 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "bool"
+            string_value: "IsOrIsNot"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
-    }
-    ops {
-      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "537249303032660016001cfa"
+            string_value: "bool"
           }
           args {
-            string_value: "Run_Factor_2"
+            int_value: 1
           }
         }
       }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "bool"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            int_value: 0
+            string_value: "StoryStep"
           }
         }
       }
+      args {
+        int_value: 24
+      }
     }
+  }
+  nextNodeIndex: 54
+  hideIfUnavailable: true
+  comment: "in_person, storystep 23"
+}
+roots {
+  responseText: ""
+  conditions {
     ops {
-      functionName: "Set Variable (bool)"
+      functionName: "Comparison (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "537249303032660016001cfa"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "Run_Factor_3"
+            string_value: "StoryStep"
           }
         }
       }
@@ -3621,24 +3821,35 @@ roots {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "bool"
+            string_value: "Comparison Ops"
           }
           args {
             int_value: 0
           }
         }
       }
+      args {
+        int_value: 24
+      }
     }
     ops {
-      functionName: "Set Variable (bool)"
+      functionName: "Comparison (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
+          functionName: "Get Variable (bool)"
           args {
-            string_value: "537249303032660016001cfa"
+            string_value: "In_Person"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
           }
           args {
-            string_value: "LightSwitch"
+            int_value: 1
           }
         }
       }
@@ -3649,41 +3860,75 @@ roots {
             string_value: "bool"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
     }
+  }
+  nextNodeIndex: 64
+  hideIfUnavailable: true
+  comment: "in person, storystep 24"
+}
+roots {
+  responseText: "I did the job. Now you get me out like you promised."
+  conditions {
     ops {
-      functionName: "Remove Item from Actor"
+      functionName: "AND"
       args {
         call_value {
-          functionName: "Get Map Item (Item)"
+          functionName: "Comparison (int)"
           args {
-            string_value: "Keycard"
+            call_value {
+              functionName: "Get Story Variable (int)"
+              args {
+                string_value: "51f15c62336331d02c00440e"
+              }
+              args {
+                string_value: "StoryStep"
+              }
+            }
           }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Specific Actor"
           args {
             call_value {
-              functionName: "Get Map Item (Player)"
+              functionName: "Get Preset Value (int)"
+              args {
+                string_value: "Comparison Ops"
+              }
               args {
                 int_value: 0
               }
             }
           }
           args {
+            int_value: 26
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Comparison (int)"
           args {
-            string_value: "WithOrWithout"
+            call_value {
+              functionName: "Get Story Variable (int)"
+              args {
+                string_value: "51f15c62336331d02c00440e"
+              }
+              args {
+                string_value: "Victor_Out"
+              }
+            }
+          }
+          args {
+            call_value {
+              functionName: "Get Preset Value (int)"
+              args {
+                string_value: "Comparison Ops"
+              }
+              args {
+                int_value: 0
+              }
+            }
           }
           args {
             int_value: 1
@@ -3691,24 +3936,26 @@ roots {
         }
       }
     }
+  }
+  actions {
     ops {
-      functionName: "Set Variable (string)"
+      functionName: "Set Variable (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (string)"
+          functionName: "Get Story Variable (int)"
           args {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "Current_Run-Location"
+            string_value: "Victor_Out"
           }
         }
       }
       args {
-        string_value: "Safehouse"
+        int_value: 0
       }
     }
   }
-  nextNodeIndex: -1
+  nextNodeIndex: 65
   hideIfUnavailable: true
 }
diff --git a/SR-Unlimited/data/convos/39998e333363315801000fae.convo.txt.rej b/SR-Unlimited/data/convos/39998e333363315801000fae.convo.txt.rej
new file mode 100644
index 0000000..26d4327
--- /dev/null
+++ b/SR-Unlimited/data/convos/39998e333363315801000fae.convo.txt.rej
@@ -0,0 +1,6326 @@
+***************
+*** 887,1204 ****
+  }
+  nodes {
+    idRef {
+-     id: "54602f48363735b40f00918a"
+-   }
+-   index: 28
+-   text: "Sorry Vigor, I have something else going on right now."
+-   branches {
+-     responseText: ""
+-     nextNodeIndex: 29
+-   }
+-   nodeType: ConversationNodeType_Simple
+-   sourceWithTagInScene: "isPlayer"
+- }
+- nodes {
+-   idRef {
+-     id: "54602f98363735b40f00918f"
+-   }
+-   index: 29
+-   text: "Alright chummer, call me when you need some creds."
+-   nodeType: ConversationNodeType_Simple
+- }
+- nodes {
+-   idRef {
+-     id: "54602f48363735b40f00918a"
+-   }
+-   index: 30
+-   text: "Actually I\'m currently contracted for a job for someone else. Maybe I\'ll give you a shout when I\'m done."
+-   branches {
+-     responseText: ""
+-     nextNodeIndex: 31
+-   }
+-   nodeType: ConversationNodeType_Simple
+-   sourceWithTagInScene: "isPlayer"
+- }
+- nodes {
+-   idRef {
+-     id: "54602f98363735b40f00918f"
+-   }
+-   index: 31
+-   text: "Alright chummer, call me when you\'re free and need some creds."
+-   nodeType: ConversationNodeType_Simple
+- }
+- nodes {
+-   idRef {
+-     id: "54602df7363735b40f00917e"
+-   }
+-   index: 32
+-   text: "I actually prefer doing things the hard way and spilling a little blood."
+-   branches {
+-     responseText: ""
+-     nextNodeIndex: 25
+-     auxiliaryLink: true
+-   }
+-   nodeType: ConversationNodeType_Simple
+-   sourceWithTagInScene: "isPlayer"
+- }
+- nodes {
+-   idRef {
+-     id: "54602e2d363735b40f009180"
+-   }
+-   index: 33
+-   text: "Violence is a necessity. I don\'t love it, but I can keep an open mind."
+-   branches {
+-     responseText: ""
+-     nextNodeIndex: 25
+-     auxiliaryLink: true
+-   }
+-   nodeType: ConversationNodeType_Simple
+-   sourceWithTagInScene: "isPlayer"
+- }
+- nodes {
+-   idRef {
+-     id: "546030b5363735b40f009228"
+-   }
+-   index: 34
+-   text: "Hey Vigor I\'m looking for some work."
+-   branches {
+-     responseText: ""
+-     nextNodeIndex: 35
+    }
+    nodeType: ConversationNodeType_Simple
+-   sourceWithTagInScene: "isPlayer"
+- }
+  nodes {
+    idRef {
+-     id: "546030e4363735b40f00922b"
+    }
+-   index: 35
+-   text: "$(l.name). I happen to have a contract available. Let me just bring it up..."
+-   branches {
+-     responseText: ""
+-     actions {
+-       ops {
+-         functionName: "Set Variable (string)"
+-         args {
+-           call_value {
+-             functionName: "Get Story Variable (string)"
+-             args {
+-               string_value: "51f15c62336331d02c00440e"
+-             }
+-             args {
+-               string_value: "Current_Fixer"
+-             }
+            }
+          }
+-         args {
+-           string_value: "Vigor"
+          }
+        }
+-       ops {
+-         functionName: "Start Conversation Between Actors"
+-         args {
+-           call_value {
+-             functionName: "Get Map Item (Conversation)"
+-             args {
+-               string_value: "5442d3f6363735e00e003fcf"
+-             }
+            }
+          }
+-         args {
+-           call_value {
+-             functionName: "Get Map Item (Player)"
+-             args {
+-               int_value: 0
+-             }
+            }
+          }
+-         args {
+-           call_value {
+-             functionName: "Nearest Tagged Actor to Actor"
+-             args {
+-               call_value {
+-                 functionName: "Get Map Item (SenseTagList)"
+-                 args {
+-                   string_value: "Vigor"
+-                 }
+-               }
+-             }
+-             args {
+-               call_value {
+-                 functionName: "Get Map Item (Player)"
+-                 args {
+-                   int_value: 0
+-                 }
+-               }
+-             }
+            }
+          }
+-         args {
+-           call_value {
+-             functionName: "Get Preset Value (int)"
+-             args {
+-               string_value: "WithOrWithout"
+-             }
+-             args {
+-               int_value: 1
+-             }
+            }
+          }
+        }
+      }
+-     nextNodeIndex: -1
+    }
+-   nodeType: ConversationNodeType_Simple
+  }
+- nodes {
+-   idRef {
+-     id: "5b42238a343032900a0080fe"
+-   }
+-   index: 36
+-   text: ""
+-   branches {
+-     responseText: ""
+-     conditions {
+-       ops {
+-         functionName: "Comparison (int)"
+-         args {
+-           int_value: 0
+          }
+-         args {
+-           call_value {
+-             functionName: "Get Preset Value (int)"
+-             args {
+-               string_value: "Comparison Ops"
+-             }
+-             args {
+-               int_value: 0
+-             }
+            }
+          }
+-         args {
+-           call_value {
+-             functionName: "Get Story Variable (int)"
+-             args {
+-               string_value: "51f15c62336331d02c00440e"
+-             }
+-             args {
+-               string_value: "General_Use3"
+-             }
+            }
+          }
+        }
+      }
+-     nextNodeIndex: -1
+    }
+-   branches {
+-     responseText: ""
+-     conditions {
+-       ops {
+-         functionName: "Comparison (int)"
+-         args {
+-           int_value: 0
+-         }
+-         args {
+-           call_value {
+-             functionName: "Get Preset Value (int)"
+-             args {
+-               string_value: "Comparison Ops"
+-             }
+-             args {
+-               int_value: 2
+-             }
+            }
+-         }
+-         args {
+-           call_value {
+-             functionName: "Get Story Variable (int)"
+-             args {
+-               string_value: "51f15c62336331d02c00440e"
+-             }
+-             args {
+-               string_value: "General_Use3"
+-             }
+            }
+          }
+        }
+-     }
+-     actions {
+-       ops {
+-         functionName: "Remove Nuyen"
+-         args {
+-           call_value {
+-             functionName: "Absolute Value (int)"
+-             args {
+-               call_value {
+-                 functionName: "Get Story Variable (int)"
+-                 args {
+-                   string_value: "51f15c62336331d02c00440e"
+-                 }
+-                 args {
+-                   string_value: "General_Use3"
+-                 }
+-               }
+-             }
+            }
+          }
+        }
+      }
+-     nextNodeIndex: -1
+-   }
+-   branches {
+-     responseText: ""
+-     conditions {
+-       ops {
+-         functionName: "Comparison (int)"
+-         args {
+-           int_value: 0
+-         }
+-         args {
+-           call_value {
+-             functionName: "Get Preset Value (int)"
+-             args {
+-               string_value: "Comparison Ops"
+-             }
+-             args {
+-               int_value: 0
+-             }
+            }
+          }
+-         args {
+-           call_value {
+-             functionName: "Get Story Variable (int)"
+-             args {
+-               string_value: "51f15c62336331d02c00440e"
+-             }
+-             args {
+-               string_value: "General_Use3"
+-             }
+            }
+          }
+        }
+-     }
+-     actions {
+-       ops {
+-         functionName: "Add Nuyen"
+-         args {
+-           call_value {
+-             functionName: "Get Story Variable (int)"
+-             args {
+-               string_value: "51f15c62336331d02c00440e"
+-             }
+-             args {
+-               string_value: "General_Use3"
+-             }
+            }
+          }
+        }
+      }
+-     nextNodeIndex: -1
+    }
+-   nodeType: ConversationNodeType_Simple
+-   actions {
+      ops {
+-       functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+--- 811,6815 ----
+  }
+  nodes {
+    idRef {
++     id: "5cf202eb396639780c006f10"
+    }
++   index: 25
++   text: "I\'ll give you the details. This for a private art collection. So while the client prefers it done quiet he won\'t lose sleep over it being loud. You\'ll need to find out where in the building the target is. Maybe a fixer who specializes in Decking might know someone with the inside scoop on corps. Plus I hear they\'re upgrading security."
+    nodeType: ConversationNodeType_Simple
++   actions {
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         int_value: 20
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Story_Mission"
++           }
++         }
++       }
++       args {
++         int_value: 10
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Employed"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Objective"
++           }
++         }
++       }
++       args {
++         string_value: "Retrieve"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_B"
++           }
++         }
++       }
++       args {
++         string_value: "Complete"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_C"
++           }
++         }
++       }
++       args {
++         string_value: "Complete"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_D"
++           }
++         }
++       }
++       args {
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_Location_B"
++           }
++         }
++       }
++       args {
++         string_value: "Northside"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_Location_C"
++           }
++         }
++       }
++       args {
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_Location_D"
++           }
++         }
++       }
++       args {
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Info_B"
++           }
++         }
++       }
++       args {
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Info_C"
++           }
++         }
++       }
++       args {
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Info_D"
++           }
++         }
++       }
++       args {
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Description"
++           }
++         }
++       }
++       args {
++         string_value: "I need to retrieve the item from the Mitsuhama HQ. Maybe a fixer who knows decking knows someone."
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Step"
++           }
++         }
++       }
++       args {
++         int_value: 1
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "537249303032660016001cfa"
++           }
++           args {
++             string_value: "RunDifficulty"
++           }
++         }
++       }
++       args {
++         int_value: 5
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "537249303032660016001cfa"
++           }
++           args {
++             string_value: "Run_Type"
++           }
++         }
++       }
++       args {
++         int_value: 2
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "TestDifficulty"
++           }
++         }
++       }
++       args {
++         int_value: 6
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "TestDifficulty_Matrix"
++           }
++         }
++       }
++       args {
++         int_value: 6
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Resistance"
++           }
++         }
++       }
++       args {
++         int_value: 3
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Security-TripWires"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current-Run-JobType"
++           }
++         }
++       }
++       args {
++         string_value: "High Security"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Information"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Description"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Location"
++           }
++         }
++       }
++       args {
++         string_value: "Mitsuhama HQ"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Location"
++           }
++         }
++       }
++       args {
++         string_value: "Mitsuhama HQ"
++       }
++     }
++     ops {
++       functionName: "Set Screen Label"
++       args {
++         string_value: "Journal"
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Information"
++           }
++         }
++       }
++     }
++   }
++ }
++ nodes {
++   idRef {
++     id: "5cf31487396639640e0045e1"
++   }
++   index: 26
++   text: "Not only are they offering a nice payday, but the \'runners fixer is given a nice cut."
++   branches {
++     responseText: "Nice"
++     actions {
++       ops {
++         functionName: "Set Variable (int)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "537249303032660016001cfa"
++             }
++             args {
++               string_value: "Pay"
++             }
++           }
++         }
++         args {
++           int_value: 0
++         }
++       }
++     }
++     nextNodeIndex: 24
++     hideIfUnavailable: true
++     auxiliaryLink: true
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5cf3155d396639640e004677"
++   }
++   index: 27
++   text: "{{GM}}The attempt at a smile disappear.{{/GM}}\n\nTrue. usually. I say he\'s legit, so questioning him is questioning me."
++   branches {
++     responseText: "Okay"
++     nextNodeIndex: 24
++     auxiliaryLink: true
++   }
++   nodeType: ConversationNodeType_Simple
++   actions {
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Conversation_Step"
++           }
++         }
++       }
++       args {
++         int_value: 1
++       }
++     }
++   }
++ }
++ nodes {
++   idRef {
++     id: "5cf31b14396639640e0049cd"
++   }
++   index: 28
++   text: "Simple they asked for you."
++   branches {
++     responseText: "They asked for me specifically? Who are they?"
++     nextNodeIndex: 29
++   }
++   branches {
++     responseText: "{{CC}}Etiquite:Shadowrunner{{/CC}}I won\'t ask who they are, as you won\'t answer, but can you say how they know me?"
++     nextNodeIndex: 30
++   }
++   branches {
++     responseText: "No more questions."
++     nextNodeIndex: 24
++     auxiliaryLink: true
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5cf33a50396639640e004be9"
++   }
++   index: 29
++   text: "You have a lot to learn about shadowrunnig. So let me give you some advice. Never ask that question."
++   branches {
++     responseText: "I\'ll remember that."
++     nextNodeIndex: 24
++     auxiliaryLink: true
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5cf33a5b396639640e004beb"
++   }
++   index: 30
++   text: "Don\'t know, didn\'t ask, but they seem to be familiar with you and your work."
++   branches {
++     responseText: "Okay"
++     nextNodeIndex: 24
++     auxiliaryLink: true
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "529957a5336331c01b006b68"
++   }
++   index: 31
++   text: "$(l.name), Good to see you. So are you interested in doing some work. Be warned, I specialize in jobs that involve getting your hands dirty."
++   branches {
++     responseText: "I don\'t mind."
++     nextNodeIndex: 32
++   }
++   branches {
++     responseText: "I like getting my hands dirty."
++     nextNodeIndex: 40
++   }
++   branches {
++     responseText: "It\'s not really my thing."
++     nextNodeIndex: 41
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "54602dba363735b40f00917c"
++   }
++   index: 32
++   text: "I don\'t mind getting my hands dirty, as long as there is a paycheck in it for me."
++   branches {
++     responseText: ""
++     nextNodeIndex: 33
++   }
++   nodeType: ConversationNodeType_Simple
++   sourceWithTagInScene: "isPlayer"
++ }
++ nodes {
++   idRef {
++     id: "54602e60363735b40f009183"
++   }
++   index: 33
++   text: "Good, then we will get along just fine. Are you looking for a job right now?"
++   branches {
++     responseText: "Yeah."
++     conditions {
++       ops {
++         functionName: "Comparison (bool)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (bool)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Employed"
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "IsOrIsNot"
++             }
++             args {
++               int_value: 1
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "bool"
++             }
++             args {
++               int_value: 0
++             }
++           }
++         }
++       }
++     }
++     nextNodeIndex: 34
++     hideIfUnavailable: true
++   }
++   branches {
++     responseText: "Not right now."
++     conditions {
++       ops {
++         functionName: "Comparison (bool)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (bool)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Employed"
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "IsOrIsNot"
++             }
++             args {
++               int_value: 1
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "bool"
++             }
++             args {
++               int_value: 0
++             }
++           }
++         }
++       }
++     }
++     nextNodeIndex: 36
++     hideIfUnavailable: true
++   }
++   branches {
++     responseText: "Actually..."
++     conditions {
++       ops {
++         functionName: "Comparison (bool)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (bool)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Employed"
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "IsOrIsNot"
++             }
++             args {
++               int_value: 1
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "bool"
++             }
++             args {
++               int_value: 1
++             }
++           }
++         }
++       }
++     }
++     nextNodeIndex: 38
++     hideIfUnavailable: true
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "54602f24363735b40f009188"
++   }
++   index: 34
++   text: "Yeah, I\'m in between runs at the moment."
++   branches {
++     responseText: ""
++     nextNodeIndex: 35
++   }
++   nodeType: ConversationNodeType_Simple
++   sourceWithTagInScene: "isPlayer"
++ }
++ nodes {
++   idRef {
++     id: "54602fd8363735b40f009196"
++   }
++   index: 35
++   text: "Alright, let me just check..."
++   branches {
++     responseText: ""
++     actions {
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Current_Fixer"
++             }
++           }
++         }
++         args {
++           string_value: "Vigor"
++         }
++       }
++       ops {
++         functionName: "Start Conversation Between Actors"
++         args {
++           call_value {
++             functionName: "Get Map Item (Conversation)"
++             args {
++               string_value: "5442d3f6363735e00e003fcf"
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Map Item (Player)"
++             args {
++               int_value: 0
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Nearest Tagged Actor to Actor"
++             args {
++               call_value {
++                 functionName: "Get Map Item (SenseTagList)"
++                 args {
++                   string_value: "Vigor"
++                 }
++               }
++             }
++             args {
++               call_value {
++                 functionName: "Get Map Item (Player)"
++                 args {
++                   int_value: 0
++                 }
++               }
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "WithOrWithout"
++             }
++             args {
++               int_value: 1
++             }
++           }
++         }
++       }
++     }
++     nextNodeIndex: -1
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "54602f48363735b40f00918a"
++   }
++   index: 36
++   text: "Sorry Vigor, I have something else going on right now."
++   branches {
++     responseText: ""
++     nextNodeIndex: 37
++   }
++   nodeType: ConversationNodeType_Simple
++   sourceWithTagInScene: "isPlayer"
++ }
++ nodes {
++   idRef {
++     id: "54602f98363735b40f00918f"
++   }
++   index: 37
++   text: "Alright chummer, call me when you need some creds."
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "54602f48363735b40f00918a"
++   }
++   index: 38
++   text: "Actually I\'m currently contracted for a job for someone else. Maybe I\'ll give you a shout when I\'m done."
++   branches {
++     responseText: ""
++     nextNodeIndex: 39
++   }
++   nodeType: ConversationNodeType_Simple
++   sourceWithTagInScene: "isPlayer"
++ }
++ nodes {
++   idRef {
++     id: "54602f98363735b40f00918f"
++   }
++   index: 39
++   text: "Alright chummer, call me when you\'re free and need some creds."
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "54602df7363735b40f00917e"
++   }
++   index: 40
++   text: "I actually prefer doing things the hard way and spilling a little blood."
++   branches {
++     responseText: ""
++     nextNodeIndex: 33
++     auxiliaryLink: true
++   }
++   nodeType: ConversationNodeType_Simple
++   sourceWithTagInScene: "isPlayer"
++ }
++ nodes {
++   idRef {
++     id: "54602e2d363735b40f009180"
++   }
++   index: 41
++   text: "Violence is a necessity. I don\'t love it, but I can keep an open mind."
++   branches {
++     responseText: ""
++     nextNodeIndex: 33
++     auxiliaryLink: true
++   }
++   nodeType: ConversationNodeType_Simple
++   sourceWithTagInScene: "isPlayer"
++ }
++ nodes {
++   idRef {
++     id: "546030b5363735b40f009228"
++   }
++   index: 42
++   text: "Hey Vigor I\'m looking for some work."
++   branches {
++     responseText: ""
++     nextNodeIndex: 43
++   }
++   nodeType: ConversationNodeType_Simple
++   sourceWithTagInScene: "isPlayer"
++ }
++ nodes {
++   idRef {
++     id: "546030e4363735b40f00922b"
++   }
++   index: 43
++   text: "$(l.name). I happen to have a contract available. Let me just bring it up..."
++   branches {
++     responseText: ""
++     actions {
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Current_Fixer"
++             }
++           }
++         }
++         args {
++           string_value: "Vigor"
++         }
++       }
++       ops {
++         functionName: "Start Conversation Between Actors"
++         args {
++           call_value {
++             functionName: "Get Map Item (Conversation)"
++             args {
++               string_value: "5442d3f6363735e00e003fcf"
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Map Item (Player)"
++             args {
++               int_value: 0
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Nearest Tagged Actor to Actor"
++             args {
++               call_value {
++                 functionName: "Get Map Item (SenseTagList)"
++                 args {
++                   string_value: "Vigor"
++                 }
++               }
++             }
++             args {
++               call_value {
++                 functionName: "Get Map Item (Player)"
++                 args {
++                   int_value: 0
++                 }
++               }
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "WithOrWithout"
++             }
++             args {
++               int_value: 1
++             }
++           }
++         }
++       }
++     }
++     nextNodeIndex: -1
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "546030b5363735b40f009228"
++   }
++   index: 44
++   text: "Hey Vigor I\'m looking for some work."
++   branches {
++     responseText: ""
++     nextNodeIndex: 45
++   }
++   nodeType: ConversationNodeType_Simple
++   sourceWithTagInScene: "isPlayer"
++ }
++ nodes {
++   idRef {
++     id: "546030e4363735b40f00922b"
++   }
++   index: 45
++   text: "$(l.name). I happen to have a contract available. If you come see me in person we can talk about something else. But let me just bring regular jobs up it up..."
++   branches {
++     responseText: ""
++     actions {
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Current_Fixer"
++             }
++           }
++         }
++         args {
++           string_value: "Vigor"
++         }
++       }
++       ops {
++         functionName: "Start Conversation Between Actors"
++         args {
++           call_value {
++             functionName: "Get Map Item (Conversation)"
++             args {
++               string_value: "5442d3f6363735e00e003fcf"
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Map Item (Player)"
++             args {
++               int_value: 0
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Nearest Tagged Actor to Actor"
++             args {
++               call_value {
++                 functionName: "Get Map Item (SenseTagList)"
++                 args {
++                   string_value: "Vigor"
++                 }
++               }
++             }
++             args {
++               call_value {
++                 functionName: "Get Map Item (Player)"
++                 args {
++                   int_value: 0
++                 }
++               }
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "WithOrWithout"
++             }
++             args {
++               int_value: 1
++             }
++           }
++         }
++       }
++     }
++     nextNodeIndex: -1
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5b42238a343032900a0080fe"
++   }
++   index: 46
++   text: ""
++   branches {
++     responseText: ""
++     conditions {
++       ops {
++         functionName: "Comparison (int)"
++         args {
++           int_value: 0
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "Comparison Ops"
++             }
++             args {
++               int_value: 0
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "General_Use3"
++             }
++           }
++         }
++       }
++     }
++     nextNodeIndex: -1
++   }
++   branches {
++     responseText: ""
++     conditions {
++       ops {
++         functionName: "Comparison (int)"
++         args {
++           int_value: 0
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "Comparison Ops"
++             }
++             args {
++               int_value: 2
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "General_Use3"
++             }
++           }
++         }
++       }
++     }
++     actions {
++       ops {
++         functionName: "Remove Nuyen"
++         args {
++           call_value {
++             functionName: "Absolute Value (int)"
++             args {
++               call_value {
++                 functionName: "Get Story Variable (int)"
++                 args {
++                   string_value: "51f15c62336331d02c00440e"
++                 }
++                 args {
++                   string_value: "General_Use3"
++                 }
++               }
++             }
++           }
++         }
++       }
++     }
++     nextNodeIndex: -1
++   }
++   branches {
++     responseText: ""
++     conditions {
++       ops {
++         functionName: "Comparison (int)"
++         args {
++           int_value: 0
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "Comparison Ops"
++             }
++             args {
++               int_value: 0
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "General_Use3"
++             }
++           }
++         }
++       }
++     }
++     actions {
++       ops {
++         functionName: "Add Nuyen"
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "General_Use3"
++             }
++           }
++         }
++       }
++     }
++     nextNodeIndex: -1
++   }
++   nodeType: ConversationNodeType_Simple
++   actions {
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "srtest-rate"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Random (int)"
++           args {
++             call_value {
++               functionName: "Get Story Variable (int)"
++               args {
++                 string_value: "51f15c62336331d02c00440e"
++               }
++               args {
++                 string_value: "srtest-rateLow"
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Get Story Variable (int)"
++               args {
++                 string_value: "51f15c62336331d02c00440e"
++               }
++               args {
++                 string_value: "srtest-rateHigh"
++               }
++             }
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "srtest-rate"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Random (int)"
++           args {
++             call_value {
++               functionName: "Get Story Variable (int)"
++               args {
++                 string_value: "51f15c62336331d02c00440e"
++               }
++               args {
++                 string_value: "srtest-rateLow"
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Get Story Variable (int)"
++               args {
++                 string_value: "51f15c62336331d02c00440e"
++               }
++               args {
++                 string_value: "srtest-rateHigh"
++               }
++             }
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "General_Use3"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Arithmetic (int)"
++           args {
++             call_value {
++               functionName: "Arithmetic (int)"
++               args {
++                 call_value {
++                   functionName: "Get Story Variable (int)"
++                   args {
++                     string_value: "51f15c62336331d02c00440e"
++                   }
++                   args {
++                     string_value: "srtest-invested"
++                   }
++                 }
++               }
++               args {
++                 call_value {
++                   functionName: "Get Preset Value (int)"
++                   args {
++                     string_value: "Arithmetic Ops"
++                   }
++                   args {
++                     int_value: 2
++                   }
++                 }
++               }
++               args {
++                 call_value {
++                   functionName: "Get Story Variable (int)"
++                   args {
++                     string_value: "51f15c62336331d02c00440e"
++                   }
++                   args {
++                     string_value: "srtest-rate"
++                   }
++                 }
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Get Preset Value (int)"
++               args {
++                 string_value: "Arithmetic Ops"
++               }
++               args {
++                 int_value: 3
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Get Story Variable (int)"
++               args {
++                 string_value: "51f15c62336331d02c00440e"
++               }
++               args {
++                 string_value: "srtest-investmentDenominator"
++               }
++             }
++           }
++         }
++       }
++     }
++   }
++   comment: "investment node"
++ }
++ nodes {
++   idRef {
++     id: "5cf2066d396639780c007059"
++   }
++   index: 47
++   text: "{{GM}}You hear the soft chime of a new message on your comm. The number\'s blocked, not surprising.{{/GM}}\n\nHey $(l.name), seems like your contract with Mr. Boone has come to an end, and I may have some clients in need of someone with your skill set. If you\'re interested contact me again."
++   nodeType: ConversationNodeType_Simple
++   actions {
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Vigor_CallBack"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++   }
++ }
++ nodes {
++   idRef {
++     id: "5d02df2a3966397015004fbf"
++   }
++   index: 48
++   text: "You got it?"
++   branches {
++     responseText: "Yes here it is."
++     nextNodeIndex: 49
++   }
++   branches {
++     responseText: "Null sweat."
++     nextNodeIndex: 50
++   }
++   branches {
++     responseText: "Security was nasty, but I was nastier."
++     nextNodeIndex: 51
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5d02df963966397015005049"
++   }
++   index: 49
++   text: "And here\'s what you\'re owed. I\'ll take it to the Johnson. I trust him enough to pay you now."
++   nodeType: ConversationNodeType_Simple
++   actions {
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         int_value: 21
++       }
++     }
++     ops {
++       functionName: "Remove Item from Team"
++       args {
++         call_value {
++           functionName: "Get Map Item (Item)"
++           args {
++             string_value: "Sculpture"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (string)"
++           args {
++             string_value: "FactionList"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Map Item (SceneDimension)"
++           args {
++             string_value: "Default"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Remove Item from Actor"
++       args {
++         call_value {
++           functionName: "Get Map Item (Item)"
++           args {
++             string_value: "Matrix_Data"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Remove Item from Actor"
++       args {
++         call_value {
++           functionName: "Get Map Item (Item)"
++           args {
++             string_value: "Keycard"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add Nuyen"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Pay"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add Actor Karma"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Arithmetic (int)"
++           args {
++             call_value {
++               functionName: "Get Story Variable (int)"
++               args {
++                 string_value: "51f15c62336331d02c00440e"
++               }
++               args {
++                 string_value: "RunDifficulty"
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Get Preset Value (int)"
++               args {
++                 string_value: "Arithmetic Ops"
++               }
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Employed"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Randomness"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Random (int)"
++           args {
++             int_value: 1
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Street_Cred"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "RunDifficulty"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Notoriety"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "RunDifficulty"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Remove Nuyen"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Upkeep"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Heat"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "RunDifficulty"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Payment"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Information"
++           }
++         }
++       }
++       args {
++         string_value: "I should find some more work."
++       }
++     }
++     ops {
++       functionName: "Clear All Waypoints"
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "RemoteDoorDisable"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "RemoteCameraDisable"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Employee_SkeletonCrew"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Screen Label"
++       args {
++         string_value: "Journal"
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "text"
++           }
++           args {
++             string_value: "Information"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "TrainingDuration"
++           }
++         }
++       }
++       args {
++         int_value: 1
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_1"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_2"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_3"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Story_Mission"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Send Event"
++       args {
++         call_value {
++           functionName: "Get Map Item (Event)"
++           args {
++             string_value: "Job\'s Over"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Description"
++           }
++         }
++       }
++       args {
++         string_value: "Nothing"
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "MatrixRunComplete"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Location"
++           }
++         }
++       }
++       args {
++         string_value: "Nil"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Objective"
++           }
++         }
++       }
++       args {
++         string_value: "Nil"
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Job_Check"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Johnson_Meeting"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Identifier"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Kill Actor Followers"
++       args {
++         call_value {
++           functionName: "All Actors With Tag"
++           args {
++             call_value {
++               functionName: "Get Map Item (SenseTagList)"
++               args {
++                 string_value: "Clockwork"
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Get Preset Value (int)"
++               args {
++                 string_value: "AllOrAny"
++               }
++               args {
++                 int_value: 0
++               }
++             }
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Permutation"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Kill Actor"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 1
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "FacingDirection"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Kill Actor"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 2
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "FacingDirection"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Kill Actor"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 3
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "FacingDirection"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++   }
++ }
++ nodes {
++   idRef {
++     id: "5d02df963966397015005049"
++   }
++   index: 50
++   text: "Not from what I heard of security. Here\'s what you\'re owed."
++   nodeType: ConversationNodeType_Simple
++   actions {
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         int_value: 21
++       }
++     }
++     ops {
++       functionName: "Remove Item from Team"
++       args {
++         call_value {
++           functionName: "Get Map Item (Item)"
++           args {
++             string_value: "Sculpture"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (string)"
++           args {
++             string_value: "FactionList"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Map Item (SceneDimension)"
++           args {
++             string_value: "Default"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Remove Item from Actor"
++       args {
++         call_value {
++           functionName: "Get Map Item (Item)"
++           args {
++             string_value: "Matrix_Data"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Remove Item from Actor"
++       args {
++         call_value {
++           functionName: "Get Map Item (Item)"
++           args {
++             string_value: "Keycard"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add Nuyen"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Pay"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add Actor Karma"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Arithmetic (int)"
++           args {
++             call_value {
++               functionName: "Get Story Variable (int)"
++               args {
++                 string_value: "51f15c62336331d02c00440e"
++               }
++               args {
++                 string_value: "RunDifficulty"
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Get Preset Value (int)"
++               args {
++                 string_value: "Arithmetic Ops"
++               }
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Employed"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Randomness"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Random (int)"
++           args {
++             int_value: 1
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Street_Cred"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "RunDifficulty"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Notoriety"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "RunDifficulty"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Remove Nuyen"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Upkeep"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Heat"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "RunDifficulty"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Payment"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Information"
++           }
++         }
++       }
++       args {
++         string_value: "I should find some more work."
++       }
++     }
++     ops {
++       functionName: "Clear All Waypoints"
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "RemoteDoorDisable"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "RemoteCameraDisable"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Employee_SkeletonCrew"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Screen Label"
++       args {
++         string_value: "Journal"
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "text"
++           }
++           args {
++             string_value: "Information"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "TrainingDuration"
++           }
++         }
++       }
++       args {
++         int_value: 1
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_1"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_2"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_3"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Story_Mission"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Send Event"
++       args {
++         call_value {
++           functionName: "Get Map Item (Event)"
++           args {
++             string_value: "Job\'s Over"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Description"
++           }
++         }
++       }
++       args {
++         string_value: "Nothing"
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "MatrixRunComplete"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Location"
++           }
++         }
++       }
++       args {
++         string_value: "Nil"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Objective"
++           }
++         }
++       }
++       args {
++         string_value: "Nil"
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Job_Check"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Johnson_Meeting"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Identifier"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Kill Actor Followers"
++       args {
++         call_value {
++           functionName: "All Actors With Tag"
++           args {
++             call_value {
++               functionName: "Get Map Item (SenseTagList)"
++               args {
++                 string_value: "Clockwork"
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Get Preset Value (int)"
++               args {
++                 string_value: "AllOrAny"
++               }
++               args {
++                 int_value: 0
++               }
++             }
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Permutation"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Kill Actor"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 1
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "FacingDirection"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Kill Actor"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 2
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "FacingDirection"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Kill Actor"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 3
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "FacingDirection"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++   }
++ }
++ nodes {
++   idRef {
++     id: "5d02df963966397015005049"
++   }
++   index: 51
++   text: "And that\'s why you\'re here now. Here\'s what you\'re owed"
++   nodeType: ConversationNodeType_Simple
++   actions {
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         int_value: 21
++       }
++     }
++     ops {
++       functionName: "Remove Item from Team"
++       args {
++         call_value {
++           functionName: "Get Map Item (Item)"
++           args {
++             string_value: "Sculpture"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (string)"
++           args {
++             string_value: "FactionList"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Map Item (SceneDimension)"
++           args {
++             string_value: "Default"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Remove Item from Actor"
++       args {
++         call_value {
++           functionName: "Get Map Item (Item)"
++           args {
++             string_value: "Matrix_Data"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Remove Item from Actor"
++       args {
++         call_value {
++           functionName: "Get Map Item (Item)"
++           args {
++             string_value: "Keycard"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add Nuyen"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Pay"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add Actor Karma"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Arithmetic (int)"
++           args {
++             call_value {
++               functionName: "Get Story Variable (int)"
++               args {
++                 string_value: "51f15c62336331d02c00440e"
++               }
++               args {
++                 string_value: "RunDifficulty"
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Get Preset Value (int)"
++               args {
++                 string_value: "Arithmetic Ops"
++               }
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Employed"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Randomness"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Random (int)"
++           args {
++             int_value: 1
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Street_Cred"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "RunDifficulty"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Notoriety"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "RunDifficulty"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Remove Nuyen"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Upkeep"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Heat"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "RunDifficulty"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Payment"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Information"
++           }
++         }
++       }
++       args {
++         string_value: "I should find some more work."
++       }
++     }
++     ops {
++       functionName: "Clear All Waypoints"
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "RemoteDoorDisable"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "RemoteCameraDisable"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Employee_SkeletonCrew"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Screen Label"
++       args {
++         string_value: "Journal"
++       }
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "text"
++           }
++           args {
++             string_value: "Information"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "TrainingDuration"
++           }
++         }
++       }
++       args {
++         int_value: 1
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_1"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_2"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_3"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Story_Mission"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Send Event"
++       args {
++         call_value {
++           functionName: "Get Map Item (Event)"
++           args {
++             string_value: "Job\'s Over"
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Description"
++           }
++         }
++       }
++       args {
++         string_value: "Nothing"
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "MatrixRunComplete"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Location"
++           }
++         }
++       }
++       args {
++         string_value: "Nil"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Objective"
++           }
++         }
++       }
++       args {
++         string_value: "Nil"
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Job_Check"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Johnson_Meeting"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Identifier"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Kill Actor Followers"
++       args {
++         call_value {
++           functionName: "All Actors With Tag"
++           args {
++             call_value {
++               functionName: "Get Map Item (SenseTagList)"
++               args {
++                 string_value: "Clockwork"
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Get Preset Value (int)"
++               args {
++                 string_value: "AllOrAny"
++               }
++               args {
++                 int_value: 0
++               }
++             }
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Permutation"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Kill Actor"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 1
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "FacingDirection"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Kill Actor"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 2
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "FacingDirection"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Kill Actor"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 3
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "DeathMethod"
++           }
++           args {
++             int_value: 3
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "FacingDirection"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "WithOrWithout"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++   }
++ }
++ nodes {
++   idRef {
++     id: "5d0ae2d2396639b01700440e"
++   }
++   index: 52
++   text: "You got it?"
++   branches {
++     responseText: "Not yet."
++     nextNodeIndex: 53
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5d0ae314396639b01700449f"
++   }
++   index: 53
++   text: "Then get to it."
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5dfbdbca396639282c001f5b"
++   }
++   index: 54
++   text: "{{GM}}Vigor sees you and nods. He seems pleased.{{/GM}} Thank you for coming."
++   branches {
++     responseText: "As I\'ve found it pays to come see what you want. So what\'s up?"
++     nextNodeIndex: 55
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5dfbdc9b396639282c001ff2"
++   }
++   index: 55
++   text: "A job has come up, and the client wants you specifically. It pays well atlest. Even better than the last private job you did."
++   branches {
++     responseText: "Give me the details and I\'ll handle it null sweat."
++     nextNodeIndex: 56
++   }
++   branches {
++     responseText: "I\'m out, so no. I just came to see you as a courtesy."
++     nextNodeIndex: 61
++   }
++   branches {
++     responseText: "Of course whenever somebody is offering enough money I\'ll be the to turn up the heat."
++     nextNodeIndex: 63
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5dfbdd78396639282c001ff5"
++   }
++   index: 56
++   text: ""
++   branches {
++     responseText: ""
++     conditions {
++       ops {
++         functionName: "Comparison (bool)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (bool)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Employed"
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "IsOrIsNot"
++             }
++             args {
++               int_value: 1
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "bool"
++             }
++             args {
++               int_value: 0
++             }
++           }
++         }
++       }
++     }
++     actions {
++       ops {
++         functionName: "No Effect"
++       }
++     }
++     nextNodeIndex: 57
++     comment: "unemployed"
++   }
++   branches {
++     responseText: ""
++     conditions {
++       ops {
++         functionName: "Comparison (bool)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (bool)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Employed"
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "IsOrIsNot"
++             }
++             args {
++               int_value: 1
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "bool"
++             }
++             args {
++               int_value: 1
++             }
++           }
++         }
++       }
++     }
++     nextNodeIndex: 60
++     comment: "employed"
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5dfbde06396639282c002092"
++   }
++   index: 57
++   text: "Good you break into a mansion, steal some unappreciated mgical item, set fire to the place than get out. Apparently the owner showed his collection of \"antiques\" to the wrong person. They noticed some of them are magic and got offended they were just sitting there with other junk. So we retrieve them, then set fire to the place. Partly for vengeance, mostly for confusion. By the time the smoke clears the artifacts will be hidden away. The client doesn\'t care how loud it is, but Lonestar actual cares about these rich drek heads. The job pays \302\245$(story.Pay).Also make sure to bring a mage or shaman to identify what is magic. Finally meet the Johson in Downtown near where the exit to Northside is. Finally you can\'t bail on this job once taken."
++   branches {
++     responseText: "I have a job to do then. Any information you can provide?"
++     actions {
++       ops {
++         functionName: "Set Variable (bool)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (bool)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Employed"
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Preset Value (int)"
++             args {
++               string_value: "bool"
++             }
++             args {
++               int_value: 1
++             }
++           }
++         }
++       }
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Information"
++             }
++           }
++         }
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Current_Run_Description"
++             }
++           }
++         }
++       }
++       ops {
++         functionName: "Set Screen Label"
++         args {
++           string_value: "Journal"
++         }
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Information"
++             }
++           }
++         }
++       }
++     }
++     nextNodeIndex: 58
++   }
++   branches {
++     responseText: "Not right now."
++     actions {
++       ops {
++         functionName: "Set Variable (int)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "StoryStep"
++             }
++           }
++         }
++         args {
++           int_value: 24
++         }
++       }
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Current_Run-Location"
++             }
++           }
++         }
++         args {
++         }
++       }
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Current_Run-Objective"
++             }
++           }
++         }
++         args {
++         }
++       }
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Objective_B"
++             }
++           }
++         }
++         args {
++         }
++       }
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Objective_C"
++             }
++           }
++         }
++         args {
++         }
++       }
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Objective_D"
++             }
++           }
++         }
++         args {
++         }
++       }
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Objective_Location_B"
++             }
++           }
++         }
++         args {
++         }
++       }
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Objective_Location_C"
++             }
++           }
++         }
++         args {
++         }
++       }
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Objective_Location_D"
++             }
++           }
++         }
++         args {
++         }
++       }
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Current_Run_Description"
++             }
++           }
++         }
++         args {
++         }
++       }
++       ops {
++         functionName: "Set Variable (int)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "537249303032660016001cfa"
++             }
++             args {
++               string_value: "Pay"
++             }
++           }
++         }
++         args {
++           int_value: 0
++         }
++       }
++       ops {
++         functionName: "Set Variable (int)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "537249303032660016001cfa"
++             }
++             args {
++               string_value: "RunDifficulty"
++             }
++           }
++         }
++         args {
++           int_value: 1
++         }
++       }
++       ops {
++         functionName: "Set Variable (int)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Current_Run-Step"
++             }
++           }
++         }
++         args {
++           int_value: 1
++         }
++       }
++       ops {
++         functionName: "Set Variable (int)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "537249303032660016001cfa"
++             }
++             args {
++               string_value: "Run_Type"
++             }
++           }
++         }
++         args {
++           int_value: 0
++         }
++       }
++       ops {
++         functionName: "Set Variable (int)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "TestDifficulty"
++             }
++           }
++         }
++         args {
++           int_value: 1
++         }
++       }
++       ops {
++         functionName: "Set Variable (int)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "TestDifficulty_Matrix"
++             }
++           }
++         }
++         args {
++           int_value: 1
++         }
++       }
++       ops {
++         functionName: "Set Variable (string)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (string)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Current-Run-JobType"
++             }
++           }
++         }
++         args {
++         }
++       }
++     }
++     nextNodeIndex: 59
++   }
++   nodeType: ConversationNodeType_Simple
++   actions {
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         int_value: 25
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Location"
++           }
++         }
++       }
++       args {
++         string_value: "Mansion"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Objective"
++           }
++         }
++       }
++       args {
++         string_value: "Enter"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_B"
++           }
++         }
++       }
++       args {
++         string_value: "Theft"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_C"
++           }
++         }
++       }
++       args {
++         string_value: "Arson"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_D"
++           }
++         }
++       }
++       args {
++         string_value: "JohnsonB"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_Location_B"
++           }
++         }
++       }
++       args {
++         string_value: "Mansion"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_Location_C"
++           }
++         }
++       }
++       args {
++         string_value: "Mansion"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Objective_Location_D"
++           }
++         }
++       }
++       args {
++         string_value: "Northside"
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Info_B"
++           }
++         }
++       }
++       args {
++         string_value: "Now to steal the targeted magical items."
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Info_C"
++           }
++         }
++       }
++       args {
++         string_value: "Now to set a fire inside."
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Info_D"
++           }
++         }
++       }
++       args {
++         string_value: "Get out and go deliver to the Johnson. He\'ll be in Downtown by the exit to Northside."
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Description"
++           }
++         }
++       }
++       args {
++         string_value: "Go get info from the contact then go. And make sure to bring a mage or shaman if you aren\'t one to find the targets."
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run-Step"
++           }
++         }
++       }
++       args {
++         int_value: 1
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "537249303032660016001cfa"
++           }
++           args {
++             string_value: "Pay"
++           }
++         }
++       }
++       args {
++         int_value: 15000
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "537249303032660016001cfa"
++           }
++           args {
++             string_value: "RunDifficulty"
++           }
++         }
++       }
++       args {
++         int_value: 6
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "TestDifficulty"
++           }
++         }
++       }
++       args {
++         int_value: 7
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Resistance"
++           }
++         }
++       }
++       args {
++         int_value: 4
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current_Run_Security-TripWires"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "537249303032660016001cfa"
++           }
++           args {
++             string_value: "Pay"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Arithmetic (int)"
++           args {
++             call_value {
++               functionName: "Get Story Variable (int)"
++               args {
++                 string_value: "51f15c62336331d02c00440e"
++               }
++               args {
++                 string_value: "Pay"
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Get Preset Value (int)"
++               args {
++                 string_value: "Arithmetic Ops"
++               }
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++             call_value {
++               functionName: "Arithmetic (int)"
++               args {
++                 call_value {
++                   functionName: "Arithmetic (int)"
++                   args {
++                     call_value {
++                       functionName: "Get Story Variable (int)"
++                       args {
++                         string_value: "51f15c62336331d02c00440e"
++                       }
++                       args {
++                         string_value: "Pay"
++                       }
++                     }
++                   }
++                   args {
++                     call_value {
++                       functionName: "Get Preset Value (int)"
++                       args {
++                         string_value: "Arithmetic Ops"
++                       }
++                       args {
++                         int_value: 3
++                       }
++                     }
++                   }
++                   args {
++                     int_value: 10
++                   }
++                 }
++               }
++               args {
++                 call_value {
++                   functionName: "Get Preset Value (int)"
++                   args {
++                     string_value: "Arithmetic Ops"
++                   }
++                   args {
++                     int_value: 2
++                   }
++                 }
++               }
++               args {
++                 call_value {
++                   functionName: "Get Story Variable (int)"
++                   args {
++                     string_value: "51f15c62336331d02c00440e"
++                   }
++                   args {
++                     string_value: "Custom_Skill-Negotiation"
++                   }
++                 }
++               }
++             }
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (string)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (string)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Current-Run-JobType"
++           }
++         }
++       }
++       args {
++         string_value: "Mansion"
++       }
++     }
++   }
++ }
+  nodes {
+    idRef {
++     id: "5dfbf1fc396639282c0026ae"
++   }
++   index: 58
++   text: "I happen to have a contact that is familiar with security from high end home security. I\'ll give you a number to call on a payphone or you can go see in the Matrix. I  hear he hangs out a virtual bar of some sort. He goes by Gouhin. Just don\'t go to him without at least 1000\302\245. And of course you\'ll need to arrange your own ride there and back."
++   nodeType: ConversationNodeType_Simple
++   actions {
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Informant_Security"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++     }
++   }
++ }
++ nodes {
++   idRef {
++     id: "5dfbf3c2396639282c0027f4"
++   }
++   index: 59
++   text: "Fair enough. The client asked just for you, so I think he\'ll wait. Don\'t know for how long. Just come see me in person when you are interested."
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5dfbe76d396639282c00212e"
++   }
++   index: 60
++   text: "Not so fast. You still have a job to finish chummer. I can tell it involves theft, arson, and pays well. It\'ll probably still be here, after all the client wants you specifically. Just come see me in person again."
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5dfbed89396639282c002426"
++   }
++   index: 61
++   text: "So I heard. Renraku may not be after you any more, but you also put a lot of effort into burying your identity. That sort of thing is not easy to undo. It requires talented people, contacts and money. Someone grateful you did a job that profited them might be helpful be willing to help you with a project like that."
++   branches {
++     responseText: "{{GM}}You heave a sigh.{{/GM}}So I do this job, then you help me get my identity unburied, right?"
++     actions {
++       ops {
++         functionName: "Set Variable (int)"
++         args {
++           call_value {
++             functionName: "Get Story Variable (int)"
++             args {
++               string_value: "51f15c62336331d02c00440e"
++             }
++             args {
++               string_value: "Victor_Out"
++             }
++           }
++         }
++         args {
++           int_value: 1
++         }
++       }
++     }
++     nextNodeIndex: 62
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5dfbf0ac396639282c002609"
++   }
++   index: 62
++   text: "{{GM}}Vigor just answers with a smile. A more natural, farless toothy toothy, one than before.{{/GM}} "
++   branches {
++     responseText: "{{GM}}You lean back and sigh again{{/GM}} So what\'s the job?"
++     nextNodeIndex: 56
++     auxiliaryLink: true
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5dfc03e1396639282c0034a6"
++   }
++   index: 63
++   text: "Almost prophetic choice of word since this involves arson."
++   branches {
++     responseText: "Sweet."
++     nextNodeIndex: 56
++     auxiliaryLink: true
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5dfc02cc396639282c0033fa"
++   }
++   index: 64
++   text: "Ready to take on the job we talked about?"
++   branches {
++     responseText: "Okay, let\'s hear details."
++     nextNodeIndex: 56
++     auxiliaryLink: true
++   }
++   nodeType: ConversationNodeType_Simple
++ }
++ nodes {
++   idRef {
++     id: "5e02a7af3966394c11000e1b"
++   }
++   index: 65
++   text: "I didn\'t say I promise, just indicate it was likely. I will but only if you talk to Piper first. I have a contact that likely would and could help, but that\'s his demand for his help. {{GM}}He starts speaking with a slight sad smile. As he continues speaking his face gets harder. By the end it\'s the familiar stony expression that allows no discussion or question.{{/GM}}"
++   nodeType: ConversationNodeType_Simple
++ }
++ roots {
++   responseText: ""
++   conditions {
++     ops {
++       functionName: "Comparison (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "Comparison Ops"
++           }
++           args {
++             int_value: 4
++           }
++         }
++       }
++       args {
++         int_value: 10
++       }
++     }
++   }
++   nextNodeIndex: 0
++   hideIfUnavailable: true
++ }
++ roots {
++   responseText: ""
++   conditions {
++     ops {
++       functionName: "Comparison (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "Comparison Ops"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         int_value: 10
++       }
++     }
++   }
++   nextNodeIndex: 1
++   hideIfUnavailable: true
++ }
++ roots {
++   responseText: ""
++   conditions {
++     ops {
++       functionName: "Comparison (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "Comparison Ops"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++       args {
++         int_value: 15
++       }
++     }
++   }
++   actions {
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         int_value: 16
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "TrainingDuration"
++           }
++         }
++       }
++       args {
++         int_value: 1
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_1"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_2"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Run_Factor_3"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Employed"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Street_Cred"
++           }
++         }
++       }
++       args {
++         int_value: 5
++       }
++     }
++     ops {
++       functionName: "Add To Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Notoriety"
++           }
++         }
++       }
++       args {
++         int_value: 5
++       }
++     }
++     ops {
++       functionName: "Add Actor Karma"
++       args {
++         call_value {
++           functionName: "Specific Actor"
++           args {
++             call_value {
++               functionName: "Get Map Item (Player)"
++               args {
++                 int_value: 0
++               }
++             }
++           }
++           args {
++           }
++         }
++       }
++       args {
++         int_value: 5
++       }
++     }
++     ops {
++       functionName: "Set Variable (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f169b733633124330018bf"
++           }
++           args {
++             string_value: "Run_Identifier"
++           }
++         }
++       }
++       args {
++         int_value: 0
++       }
++     }
++     ops {
++       functionName: "Set Variable (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "No_Associated_System"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
++           }
++         }
++       }
++     }
+    }
++   nextNodeIndex: 8
++   hideIfUnavailable: true
++ }
++ roots {
++   responseText: ""
++   conditions {
++     ops {
++       functionName: "Comparison (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
+            }
+          }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "Comparison Ops"
++           }
++           args {
++             int_value: 2
++           }
+          }
+        }
++       args {
++         int_value: 15
++       }
++     }
++     ops {
++       functionName: "Comparison (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Vigor_CallBack"
+            }
+          }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "IsOrIsNot"
++           }
++           args {
++             int_value: 1
+            }
+          }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
+            }
+          }
++       }
++     }
++     ops {
++       functionName: "Comparison (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "Comparison Ops"
++           }
++           args {
++             int_value: 4
+            }
+          }
+        }
++       args {
++         int_value: 18
++       }
+      }
+    }
++   nextNodeIndex: 17
++   hideIfUnavailable: true
+  }
++ roots {
++   responseText: ""
++   conditions {
++     ops {
++       functionName: "Comparison (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "StoryStep"
++           }
+          }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "Comparison Ops"
++           }
++           args {
++             int_value: 0
+            }
+          }
++       }
++       args {
++         int_value: 11
++       }
++     }
++     ops {
++       functionName: "Comparison (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Employed"
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "IsOrIsNot"
++           }
++           args {
++             int_value: 1
++           }
++         }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 0
+            }
+          }
+        }
+      }
+    }
++   nextNodeIndex: 18
++   hideIfUnavailable: true
++ }
++ roots {
++   responseText: ""
++   conditions {
++     ops {
++       functionName: "Comparison (int)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (int)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
+            }
++           args {
++             string_value: "StoryStep"
+            }
+          }
+        }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "Comparison Ops"
++           }
++           args {
++             int_value: 0
+            }
+          }
+        }
++       args {
++         int_value: 11
++       }
+      }
++     ops {
++       functionName: "Comparison (bool)"
++       args {
++         call_value {
++           functionName: "Get Story Variable (bool)"
++           args {
++             string_value: "51f15c62336331d02c00440e"
++           }
++           args {
++             string_value: "Employed"
+            }
+          }
++       }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "IsOrIsNot"
++           }
++           args {
++             int_value: 1
+            }
+          }
+        }
++       args {
++         call_value {
++           functionName: "Get Preset Value (int)"
++           args {
++             string_value: "bool"
++           }
++           args {
++             int_value: 1
+            }
+          }
+        }
+      }
+    }
++   nextNodeIndex: 20
++   hideIfUnavailable: true
++ }
++ roots {
++   responseText: ""
++   conditions {
+      ops {
++       functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
diff --git a/SR-Unlimited/data/convos/51fa38d5336331dc47002234.convo.txt b/SR-Unlimited/data/convos/51fa38d5336331dc47002234.convo.txt
index 0a7e862..87ed8e3 100644
--- a/SR-Unlimited/data/convos/51fa38d5336331dc47002234.convo.txt
+++ b/SR-Unlimited/data/convos/51fa38d5336331dc47002234.convo.txt
@@ -2701,7 +2701,7 @@ nodes {
               string_value: "Comparison Ops"
             }
             args {
-              int_value: 4
+              int_value: 0
             }
           }
         }
@@ -6390,6 +6390,276 @@ nodes {
   text: "Get lost."
   nodeType: ConversationNodeType_Simple
 }
+nodes {
+  idRef {
+    id: "5cfacd60396639e01e001bc6"
+  }
+  index: 42
+  text: "$(l.name), not personally, but I can ut you in touch with someone who is. For a fee of course."
+  branches {
+    responseText: "How much?"
+    nextNodeIndex: 43
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5cfad69f396639e01e001e6a"
+  }
+  index: 43
+  text: "Say 2000\302\245."
+  branches {
+    responseText: "Deal."
+    conditions {
+      ops {
+        functionName: "Evaluate Nuyen"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 2000
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 2000
+        }
+      }
+      ops {
+        functionName: "Set Variable (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: 44
+  }
+  branches {
+    responseText: "Not right now."
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5cfb02c3396639e01e002381"
+  }
+  index: 44
+  text: "Okay, you can call him from the pay phone in the pnumbra district or find him in the matrix hud. He goes by the handle Mike Score. I\'ll let him know you\'re coming."
+  nodeType: ConversationNodeType_Simple
+  actions {
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Conversation_Step"
+          }
+        }
+      }
+      args {
+        int_value: 0
+      }
+    }
+    ops {
+      functionName: "Set Variable (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Information"
+          }
+        }
+      }
+      args {
+        string_value: "I need to speak to someone called Mike Score either with the payphone or in the Matix Hub."
+      }
+    }
+    ops {
+      functionName: "Set Screen Label"
+      args {
+        string_value: "Journal"
+      }
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+            string_value: "text"
+          }
+          args {
+            string_value: "Information"
+          }
+        }
+      }
+    }
+  }
+}
+nodes {
+  idRef {
+    id: "5cfb02da396639e01e002383"
+  }
+  index: 45
+  text: "So ready to pay for an informant?"
+  branches {
+    responseText: "Yup"
+    conditions {
+      ops {
+        functionName: "Evaluate Nuyen"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 2000
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 2000
+        }
+      }
+      ops {
+        functionName: "Set Variable (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: 46
+  }
+  branches {
+    responseText: "Not right now."
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5cfb066b396639e01e002387"
+  }
+  index: 46
+  text: "Okay, you can call him from the pay phone in the pnumbra district or find him in the matrix hud. He goes by the handle Mike Score. I\'ll let him know you\'re coming."
+  nodeType: ConversationNodeType_Simple
+  actions {
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Conversation_Step"
+          }
+        }
+      }
+      args {
+        int_value: 0
+      }
+    }
+    ops {
+      functionName: "Set Variable (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Information"
+          }
+        }
+      }
+      args {
+        string_value: "I need to speak to someone called Mike Score either with the payphone or in the Matix Hub."
+      }
+    }
+    ops {
+      functionName: "Set Screen Label"
+      args {
+        string_value: "Journal"
+      }
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+            string_value: "text"
+          }
+          args {
+            string_value: "Information"
+          }
+        }
+      }
+    }
+  }
+}
 roots {
   responseText: ""
   conditions {
@@ -6421,6 +6691,34 @@ roots {
         int_value: 7
       }
     }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Story_Mission"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        int_value: 10
+      }
+    }
   }
   actions {
     ops {
@@ -6495,3 +6793,154 @@ roots {
   nextNodeIndex: 25
   hideIfUnavailable: true
 }
+roots {
+  responseText: "Do you know anything about corps? Specifically Mitsuhama."
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Story_Mission"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 10
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Conversation_Step"
+          }
+        }
+      }
+      args {
+        int_value: 3
+      }
+    }
+  }
+  nextNodeIndex: 42
+}
+roots {
+  responseText: ""
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Story_Mission"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 10
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (bool)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Informant_Corp"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Conversation_Step"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 3
+      }
+    }
+  }
+  nextNodeIndex: 45
+}
diff --git a/SR-Unlimited/data/convos/51fd7ea4336331605f0087cb.convo.txt b/SR-Unlimited/data/convos/51fd7ea4336331605f0087cb.convo.txt
index 9f2edd5..6e7c460 100644
--- a/SR-Unlimited/data/convos/51fd7ea4336331605f0087cb.convo.txt
+++ b/SR-Unlimited/data/convos/51fd7ea4336331605f0087cb.convo.txt
@@ -592,6 +592,350 @@ nodes {
     }
   }
 }
+nodes {
+  idRef {
+    id: "5e013c5a3966393c10007b37"
+  }
+  index: 15
+  text: "What kind do you need?"
+  branches {
+    responseText: "I need incendiaries."
+    conditions {
+      ops {
+        functionName: "Evaluate If Actor Has Item"
+        args {
+          call_value {
+            functionName: "Specific Actor"
+            args {
+              call_value {
+                functionName: "Triggering Actor"
+              }
+            }
+            args {
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "HasOrHasNot"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Incendiator Charge"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: 16
+    hideIfUnavailable: true
+  }
+  branches {
+    responseText: "I need explosives for a distraction."
+    conditions {
+      ops {
+        functionName: "Evaluate If Actor Has Item"
+        args {
+          call_value {
+            functionName: "Specific Actor"
+            args {
+              call_value {
+                functionName: "Triggering Actor"
+              }
+            }
+            args {
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "HasOrHasNot"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Distraction Explosives"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: 17
+    hideIfUnavailable: true
+  }
+  branches {
+    responseText: "On second thought I\'m set."
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5e013dd63966393c10007b92"
+  }
+  index: 16
+  text: "Okay. I can make some generic enough not to be traceable with a remote detonator. It will run 5000\302\245."
+  branches {
+    responseText: "Deal."
+    conditions {
+      ops {
+        functionName: "Evaluate Nuyen"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 5000
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 5000
+        }
+      }
+      ops {
+        functionName: "Add Item to Team"
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Incendiator Charge"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (string)"
+            args {
+              string_value: "FactionList"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (SceneDimension)"
+            args {
+              string_value: "Default"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Add Item to Team"
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Incendiator Detonater"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (string)"
+            args {
+              string_value: "FactionList"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (SceneDimension)"
+            args {
+              string_value: "Default"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Not right now."
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5e011a7a3966393c10007a65"
+  }
+  index: 17
+  text: "Okay. I can make some generic enough not to be traceable with a remote detonator. It will run 5000\302\245."
+  branches {
+    responseText: "Deal."
+    conditions {
+      ops {
+        functionName: "Evaluate Nuyen"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 5000
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 5000
+        }
+      }
+      ops {
+        functionName: "Add Item to Team"
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Distraction Explosives"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (string)"
+            args {
+              string_value: "FactionList"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (SceneDimension)"
+            args {
+              string_value: "Default"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Add Item to Team"
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Distraction Explosives Detonater"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (string)"
+            args {
+              string_value: "FactionList"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (SceneDimension)"
+            args {
+              string_value: "Default"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Not right now."
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
 roots {
   responseText: "Hey chummer, can you help me out?"
   nextNodeIndex: 0
@@ -824,6 +1168,39 @@ roots {
   nextNodeIndex: 13
   hideIfUnavailable: true
 }
+roots {
+  responseText: "I need some explosives for a job."
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Run-Location"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Mansion"
+      }
+    }
+  }
+  nextNodeIndex: 15
+}
 roots {
   responseText: "Nevermind."
   nextNodeIndex: -1
diff --git a/SR-Unlimited/data/convos/52046e7c3363315810000169.convo.txt b/SR-Unlimited/data/convos/52046e7c3363315810000169.convo.txt
index fcfa47a..f70da2d 100644
--- a/SR-Unlimited/data/convos/52046e7c3363315810000169.convo.txt
+++ b/SR-Unlimited/data/convos/52046e7c3363315810000169.convo.txt
@@ -169,6 +169,96 @@ nodes {
     nextNodeIndex: 3
     hideIfUnavailable: true
   }
+  branches {
+    responseText: "I need a remote controlled item for a Job. Can you help?"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Street_Cred"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 21
+        }
+      }
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Heat"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 4
+            }
+          }
+        }
+        args {
+          int_value: 30
+        }
+      }
+      ops {
+        functionName: "Comparison (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run-Location"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          string_value: "Mansion"
+        }
+      }
+    }
+    nextNodeIndex: 4
+    hideIfUnavailable: true
+  }
   nodeType: ConversationNodeType_Simple
   actions {
     ops {
@@ -227,7 +317,780 @@ nodes {
   text: "I must apologize, but it is too dangerous right now for me to be peddling my \'wares. \n\n{{GM}}The current Heat level is too high{{/GM}}"
   nodeType: ConversationNodeType_Simple
 }
-roots {
-  responseText: ""
-  nextNodeIndex: 0
+nodes {
+  idRef {
+    id: "52046ec83363315810000172"
+  }
+  index: 4
+  text: "Probably. Tell me more."
+  branches {
+    responseText: "I need to set fire to several somethings remotely."
+    conditions {
+      ops {
+        functionName: "Comparison (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run-Location"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          string_value: "Mansion"
+        }
+      }
+      ops {
+        functionName: "Evaluate If Actor Has Item"
+        args {
+          call_value {
+            functionName: "Specific Actor"
+            args {
+              call_value {
+                functionName: "Get Map Item (Player)"
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "HasOrHasNot"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Magic Incendiator Charge"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: 5
+  }
+  branches {
+    responseText: "Nothing needed for now."
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5e0162273966393c10007ee6"
+  }
+  index: 5
+  text: "Interesting. A couple of flame talismans key to specific magical signature, then something to send out a pulse of that magical signature. Of course one would need some sort of magic to power it. Of course if they couldn\'t themselves they could just hire someone. I\'d charge 5000\302\245 for the materials and skill."
+  branches {
+    responseText: "Deal."
+    conditions {
+      ops {
+        functionName: "Evaluate Nuyen"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 5000
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 5000
+        }
+      }
+      ops {
+        functionName: "Add Item to Team"
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Magic Incendiator Charge"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (string)"
+            args {
+              string_value: "FactionList"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (SceneDimension)"
+            args {
+              string_value: "Default"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Add Item to Team"
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Magic Incendiator Detonater"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (string)"
+            args {
+              string_value: "FactionList"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (SceneDimension)"
+            args {
+              string_value: "Default"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Not right now."
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "52046e88336331581000016f"
+  }
+  index: 6
+  text: "How can I help you brother?"
+  branches {
+    responseText: "I\'m in need of a talismonger..."
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Street_Cred"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 21
+        }
+      }
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Heat"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 4
+            }
+          }
+        }
+        args {
+          int_value: 30
+        }
+      }
+    }
+    nextNodeIndex: 7
+    hideIfUnavailable: true
+  }
+  branches {
+    responseText: "I\'m in need of a talismonger..."
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Street_Cred"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 5
+            }
+          }
+        }
+        args {
+          int_value: 20
+        }
+      }
+    }
+    nextNodeIndex: 8
+    hideIfUnavailable: true
+  }
+  branches {
+    responseText: "I\'m in need of a talismonger..."
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Street_Cred"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 21
+        }
+      }
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Heat"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 30
+        }
+      }
+    }
+    nextNodeIndex: 9
+    hideIfUnavailable: true
+  }
+  branches {
+    responseText: "I need a remote controlled item for a Job. Can you help?"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Street_Cred"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 21
+        }
+      }
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Heat"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 4
+            }
+          }
+        }
+        args {
+          int_value: 30
+        }
+      }
+      ops {
+        functionName: "Comparison (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run-Location"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          string_value: "Mansion"
+        }
+      }
+    }
+    nextNodeIndex: 10
+    hideIfUnavailable: true
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "52046ec83363315810000172"
+  }
+  index: 7
+  text: "No problem."
+  nodeType: ConversationNodeType_Simple
+  actions {
+    ops {
+      functionName: "Open Store Screen From Actor"
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52046de43363315810000168"
+          }
+        }
+      }
+    }
+  }
+}
+nodes {
+  idRef {
+    id: "52046ed53363315810000175"
+  }
+  index: 8
+  text: "I\'m afraid your not strong enough yet... \n\n{{GM}}Required Street: Greenhorn{{/GM}}"
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5252327f336331183d003cc9"
+  }
+  index: 9
+  text: "I must apologize, but it is too dangerous right now for me to be peddling my \'wares. \n\n{{GM}}The current Heat level is too high{{/GM}}"
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "52046ec83363315810000172"
+  }
+  index: 10
+  text: "Probably. Tell me more."
+  branches {
+    responseText: "I need to set fire to several somethings remotely."
+    conditions {
+      ops {
+        functionName: "Comparison (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run-Location"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          string_value: "Mansion"
+        }
+      }
+      ops {
+        functionName: "Evaluate If Actor Has Item"
+        args {
+          call_value {
+            functionName: "Specific Actor"
+            args {
+              call_value {
+                functionName: "Get Map Item (Player)"
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "HasOrHasNot"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Magic Incendiator Charge"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: 11
+  }
+  branches {
+    responseText: "Nothing needed for now."
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5e0162273966393c10007ee6"
+  }
+  index: 11
+  text: "Interesting. A couple of flame talismans key to specific magical signature, then something to send out a pulse of that magical signature. Of course one would need some sort of magic to power it. Of course if they couldn\'t themselves they could just hire someone. I\'d charge 5000\302\245 for the materials and skill."
+  branches {
+    responseText: "Deal."
+    conditions {
+      ops {
+        functionName: "Evaluate Nuyen"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 5000
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 5000
+        }
+      }
+      ops {
+        functionName: "Add Item to Team"
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Magic Incendiator Charge"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (string)"
+            args {
+              string_value: "FactionList"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (SceneDimension)"
+            args {
+              string_value: "Default"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Add Item to Team"
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Magic Incendiator Detonater"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (string)"
+            args {
+              string_value: "FactionList"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (SceneDimension)"
+            args {
+              string_value: "Default"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Not right now."
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+roots {
+  responseText: ""
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Run-Location"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        string_value: "Mansion"
+      }
+    }
+  }
+  nextNodeIndex: 0
+  hideIfUnavailable: true
+}
+roots {
+  responseText: ""
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Run-Location"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Mansion"
+      }
+    }
+  }
+  nextNodeIndex: 6
 }
diff --git a/SR-Unlimited/data/convos/520caeef3363313423007e8a.convo.txt b/SR-Unlimited/data/convos/520caeef3363313423007e8a.convo.txt
index afac165..120b95b 100644
--- a/SR-Unlimited/data/convos/520caeef3363313423007e8a.convo.txt
+++ b/SR-Unlimited/data/convos/520caeef3363313423007e8a.convo.txt
@@ -1024,12 +1024,56 @@ nodes {
           }
         }
       }
+      ops {
+        functionName: "Trigger: Run Alternate Trigger"
+        args {
+          call_value {
+            functionName: "Get Map Item (Trigger)"
+            args {
+              string_value: "5cf9cb7b39663998390060e7"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WaitOrNot"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
     }
     nextNodeIndex: 1
     hideIfUnavailable: true
   }
   branches {
-    responseText: "Runners"
+    responseText: "Informants"
     conditions {
       ops {
         functionName: "Evaluate If Actor Has Item"
@@ -1093,12 +1137,40 @@ nodes {
           int_value: 0
         }
       }
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "StoryStep"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 20
+        }
+      }
     }
     nextNodeIndex: 2
     hideIfUnavailable: true
   }
   branches {
-    responseText: "Fixers"
+    responseText: "Runners"
     conditions {
       ops {
         functionName: "Evaluate If Actor Has Item"
@@ -1167,12 +1239,81 @@ nodes {
     hideIfUnavailable: true
   }
   branches {
-    responseText: "{{GM}}Increase Non-Combat Skills{{/GM}}"
+    responseText: "Fixers"
+    conditions {
+      ops {
+        functionName: "Evaluate If Actor Has Item"
+        args {
+          call_value {
+            functionName: "Specific Actor"
+            args {
+              call_value {
+                functionName: "Triggering Actor"
+              }
+            }
+            args {
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "HasOrHasNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Commlink"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "comm-jammed"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          int_value: 0
+        }
+      }
+    }
     nextNodeIndex: 4
+    hideIfUnavailable: true
+  }
+  branches {
+    responseText: "{{GM}}Increase Non-Combat Skills{{/GM}}"
+    nextNodeIndex: 5
   }
   branches {
     responseText: "Asset Management"
-    nextNodeIndex: 11
+    nextNodeIndex: 12
   }
   branches {
     responseText: "Call a Taxi"
@@ -1758,9 +1899,244 @@ nodes {
 }
 nodes {
   idRef {
-    id: "53ed4fab386461800400898e"
+    id: "5d1e6658396639fc27000875"
   }
   index: 2
+  text: "Informants"
+  branches {
+    responseText: "Corps - Mike Score"
+    conditions {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp_Number"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Start Conversation Between Actors"
+        args {
+          call_value {
+            functionName: "Get Map Item (Conversation)"
+            args {
+              string_value: "5cfb0f85396639e01e002442"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Player)"
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Nearest Tagged Actor to Actor"
+            args {
+              call_value {
+                functionName: "Get Map Item (SenseTagList)"
+                args {
+                  string_value: "Mike_Score"
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Map Item (Player)"
+                args {
+                  int_value: 0
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Play Animation From Manifest"
+        args {
+          call_value {
+            functionName: "Get Map Item (Player)"
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Animation)"
+            args {
+              string_value: "Seattle:General/standing_idle_talking"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+    hideIfUnavailable: true
+  }
+  branches {
+    responseText: "Security - Gouhin"
+    conditions {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Security_Number"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Start Conversation"
+        args {
+          call_value {
+            functionName: "Get Map Item (Conversation)"
+            args {
+              string_value: "5dfd34273966397410002d16"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Nearest Tagged Actor to Actor"
+            args {
+              call_value {
+                functionName: "Get Map Item (SenseTagList)"
+                args {
+                  string_value: "Gouhin"
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Map Item (Player)"
+                args {
+                  int_value: 0
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Play Animation From Manifest"
+        args {
+          call_value {
+            functionName: "Get Map Item (Player)"
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Animation)"
+            args {
+              string_value: "Seattle:General/standing_idle_talking"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+    hideIfUnavailable: true
+  }
+  branches {
+    responseText: "Back to parent"
+    nextNodeIndex: 0
+    auxiliaryLink: true
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "53ed4fab386461800400898e"
+  }
+  index: 3
   text: "Runners"
   branches {
     responseText: "Call Mars"
@@ -2889,7 +3265,7 @@ nodes {
   idRef {
     id: "53ed4fc2386461800400899c"
   }
-  index: 3
+  index: 4
   text: "Fixers"
   branches {
     responseText: "Call Eric Gunderson."
@@ -3326,31 +3702,31 @@ nodes {
   idRef {
     id: "5442e76c363735140a006f7d"
   }
-  index: 4
+  index: 5
   text: ""
   branches {
     responseText: "Negotiation: $(story.Custom_Skill-Negotiation)"
-    nextNodeIndex: 5
+    nextNodeIndex: 6
   }
   branches {
     responseText: "Lockpicking: $(story.Custom_Skill-Lockpicking)"
-    nextNodeIndex: 6
+    nextNodeIndex: 7
   }
   branches {
     responseText: "Electronics: $(story.Custom_Skill-Electronics)"
-    nextNodeIndex: 7
+    nextNodeIndex: 8
   }
   branches {
     responseText: "Fast Talking: $(story.Custom_Skill-Fast_Talking)"
-    nextNodeIndex: 8
+    nextNodeIndex: 9
   }
   branches {
     responseText: "Stealth: $(story.Custom_Skill-Stealth)"
-    nextNodeIndex: 9
+    nextNodeIndex: 10
   }
   branches {
     responseText: "Dispelling: $(story.Custom_Skill-Dispelling)"
-    nextNodeIndex: 10
+    nextNodeIndex: 11
   }
   branches {
     responseText: "{{GM}}Back to Parent{{/GM}}"
@@ -3367,7 +3743,7 @@ nodes {
   idRef {
     id: "5442e77a363735140a006f81"
   }
-  index: 5
+  index: 6
   text: "{{GM}}Negotiation{{/GM}}\n\nThis skill will allow you to negotiate larger pay-outs for runs.\n\nRequires an equal level of {{CC}}Charisma{{/CC}} to purchase.\n\nCurrent Rank: $(story.Custom_Skill-Negotiation)"
   branches {
     responseText: "Buy a point of Negotiation"
@@ -3538,12 +3914,12 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 5
+    nextNodeIndex: 6
     auxiliaryLink: true
   }
   branches {
     responseText: "{{GM}}Back to Parent{{/GM}}"
-    nextNodeIndex: 4
+    nextNodeIndex: 5
     auxiliaryLink: true
   }
   branches {
@@ -3556,7 +3932,7 @@ nodes {
   idRef {
     id: "5442e77a363735140a006f81"
   }
-  index: 6
+  index: 7
   text: "{{GM}}Lockpicking{{/GM}}\n\nThis skill will allow you to bypass tumbler-locked doors.\n\nRequires an equal level of {{CC}}Quickness{{/CC}} to purchase.\n\nCurrent Rank: $(story.Custom_Skill-Lockpicking)"
   branches {
     responseText: "Buy a point of Lockpicking"
@@ -3727,12 +4103,12 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 6
+    nextNodeIndex: 7
     auxiliaryLink: true
   }
   branches {
     responseText: "{{GM}}Back to Parent{{/GM}}"
-    nextNodeIndex: 4
+    nextNodeIndex: 5
     auxiliaryLink: true
   }
   branches {
@@ -3745,7 +4121,7 @@ nodes {
   idRef {
     id: "5442e77a363735140a006f81"
   }
-  index: 7
+  index: 8
   text: "{{GM}}Electronics{{/GM}}\n\nThis skill is used to rewire or repair electronics. Primarily used to bypass MagLocked doors.\n\nRequires an equal level of {{CC}}Intelligence{{/CC}} to purchase.\n\nCurrent Rank: $(story.Custom_Skill-Electronics)"
   branches {
     responseText: "Buy a point of Electronics"
@@ -3916,12 +4292,12 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 7
+    nextNodeIndex: 8
     auxiliaryLink: true
   }
   branches {
     responseText: "{{GM}}Back to Parent{{/GM}}"
-    nextNodeIndex: 4
+    nextNodeIndex: 5
     auxiliaryLink: true
   }
   branches {
@@ -3934,7 +4310,7 @@ nodes {
   idRef {
     id: "5442e77a363735140a006f81"
   }
-  index: 8
+  index: 9
   text: "{{GM}}Fast Talking{{/GM}}\n\nThis skill is used to lie convincingly. Primarily used to bypass guards and civilians non-violently.\n\nRequires an equal level of {{CC}}Charisma{{/CC}} to purchase.\n\nCurrent Rank: $(story.Custom_Skill-Fast_Talking)"
   branches {
     responseText: "Buy a point of Fast-talk"
@@ -4105,12 +4481,12 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 8
+    nextNodeIndex: 9
     auxiliaryLink: true
   }
   branches {
     responseText: "{{GM}}Back to Parent{{/GM}}"
-    nextNodeIndex: 4
+    nextNodeIndex: 5
     auxiliaryLink: true
   }
   branches {
@@ -4123,7 +4499,7 @@ nodes {
   idRef {
     id: "5442e77a363735140a006f81"
   }
-  index: 9
+  index: 10
   text: "{{GM}}Stealth{{/GM}}\n\nThis skill is used to sneak by guards who might otherwise hear you.\n\nRequires an equal level of {{CC}}Quickness{{/CC}} and {{CC}}Karma{{/CC}} to purchase.\n\nCurrent Rank: $(story.Custom_Skill-Stealth)"
   branches {
     responseText: "Buy a point of Stealth"
@@ -4294,12 +4670,12 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 9
+    nextNodeIndex: 10
     auxiliaryLink: true
   }
   branches {
     responseText: "{{GM}}Back to Parent{{/GM}}"
-    nextNodeIndex: 4
+    nextNodeIndex: 5
     auxiliaryLink: true
   }
   branches {
@@ -4317,7 +4693,7 @@ nodes {
   idRef {
     id: "559672b8336637c8150085e0"
   }
-  index: 10
+  index: 11
   text: "{{GM}}Dispelling{{/GM}}\n\nThis skill is used to unravel magical barriers.\n\nRequires an equal levels of {{CC}}Willpower{{/CC}}, {{CC}}Spell casting{{/CC}} and {{CC}}Karma{{/CC}} to purchase.\n\nCurrent Rank: $(story.Custom_Skill-Dispelling)"
   branches {
     responseText: "Buy a point of Dispelling"
@@ -4572,12 +4948,12 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 10
+    nextNodeIndex: 11
     auxiliaryLink: true
   }
   branches {
     responseText: "{{GM}}Back to Parent{{/GM}}"
-    nextNodeIndex: 4
+    nextNodeIndex: 5
     auxiliaryLink: true
   }
   branches {
@@ -4590,7 +4966,7 @@ nodes {
   idRef {
     id: "5589c5146466321815003a2f"
   }
-  index: 11
+  index: 12
   text: "{{GM}}Manage your stuff.{{/GM}}"
   branches {
     responseText: "Discard commlink {{GM}}Dangerous{{/GM}}"
@@ -4630,7 +5006,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 12
+    nextNodeIndex: 13
   }
   branches {
     responseText: "Enable Augmented Reality overlay"
@@ -4901,7 +5277,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 13
+    nextNodeIndex: 14
     hideIfUnavailable: true
   }
   branches {
@@ -5293,7 +5669,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     hideIfUnavailable: true
     auxiliaryLink: true
   }
@@ -5329,12 +5705,12 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 15
+    nextNodeIndex: 16
     hideIfUnavailable: true
   }
   branches {
     responseText: "Risk Perma Death?"
-    nextNodeIndex: 16
+    nextNodeIndex: 17
   }
   branches {
     responseText: "Reset (some) test variables"
@@ -5494,7 +5870,7 @@ nodes {
   idRef {
     id: "5589c58f6466321815003b16"
   }
-  index: 12
+  index: 13
   text: "Discarding the commlink is a bad idea type Discard into the field below to do it."
   branches {
     responseText: "Discard"
@@ -5556,11 +5932,11 @@ nodes {
   idRef {
     id: "557d399e646632940c0008a9"
   }
-  index: 13
+  index: 14
   text: "Cyberdeck file cull v0.4\nMMLIV Microdeck Inc.\nRedmond, UCAS"
   branches {
     responseText: "{{GM}}Back to Parent{{/GM}}"
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     auxiliaryLink: true
   }
   branches {
@@ -5643,7 +6019,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     comment: "01"
   }
@@ -5723,7 +6099,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "02"
@@ -5804,7 +6180,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "03"
@@ -5885,7 +6261,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "04"
@@ -5966,7 +6342,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "05"
@@ -6047,7 +6423,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "06"
@@ -6128,7 +6504,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "07"
@@ -6209,7 +6585,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "08"
@@ -6290,7 +6666,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "09"
@@ -6371,7 +6747,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "10"
@@ -6452,7 +6828,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "11"
@@ -6533,7 +6909,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "12"
@@ -6614,7 +6990,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "13"
@@ -6695,7 +7071,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "14"
@@ -6776,7 +7152,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 14
+    nextNodeIndex: 15
     hideIfUnavailable: true
     auxiliaryLink: true
     comment: "15"
@@ -6849,11 +7225,11 @@ nodes {
   idRef {
     id: "59ebc5af653737c44d0053ff"
   }
-  index: 14
+  index: 15
   text: ""
   branches {
     responseText: ""
-    nextNodeIndex: 13
+    nextNodeIndex: 14
     auxiliaryLink: true
   }
   nodeType: ConversationNodeType_Simple
@@ -6991,7 +7367,7 @@ nodes {
   idRef {
     id: "5a5b9ea86537374c340045c3"
   }
-  index: 15
+  index: 16
   text: ""
   branches {
     responseText: "{{CC}}Aztlan Wage Slave{{/CC}}"
@@ -7086,7 +7462,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     hideIfUnavailable: true
     auxiliaryLink: true
   }
@@ -7190,7 +7566,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     hideIfUnavailable: true
     auxiliaryLink: true
   }
@@ -7294,7 +7670,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     hideIfUnavailable: true
     auxiliaryLink: true
   }
@@ -7398,7 +7774,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     hideIfUnavailable: true
     auxiliaryLink: true
   }
@@ -7502,7 +7878,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     hideIfUnavailable: true
     auxiliaryLink: true
   }
@@ -7606,7 +7982,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     hideIfUnavailable: true
     auxiliaryLink: true
   }
@@ -7672,7 +8048,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     auxiliaryLink: true
   }
   branches {
@@ -7737,12 +8113,12 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     auxiliaryLink: true
   }
   branches {
     responseText: "{{GM}}Back to Parent{{/GM}}"
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     auxiliaryLink: true
   }
   branches {
@@ -7755,7 +8131,7 @@ nodes {
   idRef {
     id: "5aa17a64343032fc140065cc"
   }
-  index: 16
+  index: 17
   text: "Given the seemingly endless hate on for the invisible runner.\nIf enabled will never spawn the invisible runner in updated maps.\nYou will then need to use the handy dandy \'rewind\' feature, if the DocWagon does not come for you due to not hiring additional runners.\n\nEnabled: $(story.riskPermadeath)"
   branches {
     responseText: "Enable Perma Death"
@@ -7824,7 +8200,7 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     hideIfUnavailable: true
     auxiliaryLink: true
   }
@@ -7895,13 +8271,13 @@ nodes {
         }
       }
     }
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     hideIfUnavailable: true
     auxiliaryLink: true
   }
   branches {
     responseText: "{{GM}}Back to Parent{{/GM}}"
-    nextNodeIndex: 11
+    nextNodeIndex: 12
     auxiliaryLink: true
   }
   branches {
diff --git a/SR-Unlimited/data/convos/52bdb09f3363315c28001d91.convo.txt b/SR-Unlimited/data/convos/52bdb09f3363315c28001d91.convo.txt
index b34069d..f0b6e83 100644
--- a/SR-Unlimited/data/convos/52bdb09f3363315c28001d91.convo.txt
+++ b/SR-Unlimited/data/convos/52bdb09f3363315c28001d91.convo.txt
@@ -14,7 +14,7 @@ nodes {
   }
   branches {
     responseText: "Just checking in."
-    nextNodeIndex: 6
+    nextNodeIndex: 12
   }
   nodeType: ConversationNodeType_Simple
 }
@@ -165,6 +165,130 @@ nodes {
     nextNodeIndex: 4
     hideIfUnavailable: true
   }
+  branches {
+    responseText: "I need a ride to a job at a mansion Anyway you can scrounge up some sort of disguise?"
+    conditions {
+      ops {
+        functionName: "Comparison (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run-Location"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          string_value: "Mansion"
+        }
+      }
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "StoryStep"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          int_value: 25
+        }
+      }
+    }
+    nextNodeIndex: 6
+    hideIfUnavailable: true
+  }
+  branches {
+    responseText: "I need a ride to a job at a mansion Anyway you can scrounge up some sort of disguise?"
+    conditions {
+      ops {
+        functionName: "Comparison (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run-Location"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          string_value: "Mansion"
+        }
+      }
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "StoryStep"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          int_value: 25
+        }
+      }
+    }
+    nextNodeIndex: 9
+    hideIfUnavailable: true
+  }
   nodeType: ConversationNodeType_Simple
 }
 nodes {
@@ -293,9 +417,1119 @@ nodes {
 }
 nodes {
   idRef {
-    id: "52c190363363311c050080a0"
+    id: "5e07069a396639a03a001acd"
   }
   index: 6
+  text: "I could and even some faked paperwork, even a few uniforms. It won\'t be cheap though. 2000\302\245 for a disguise or just a ride, my rate is 250\302\245, non-negotiable."
+  branches {
+    responseText: "Let\'s do the disguise."
+    conditions {
+      ops {
+        functionName: "Evaluate Nuyen"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 2000
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Disguised-Run"
+            }
+          }
+        }
+        args {
+          int_value: 1
+        }
+      }
+    }
+    nextNodeIndex: 7
+  }
+  branches {
+    responseText: "Just a ride."
+    conditions {
+      ops {
+        functionName: "Evaluate Nuyen"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 250
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Disguised-Run"
+            }
+          }
+        }
+        args {
+          int_value: 0
+        }
+      }
+    }
+    nextNodeIndex: 8
+  }
+  branches {
+    responseText: "Maybe later."
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5e070f3f396639a03a001ba5"
+  }
+  index: 7
+  text: "Now when are we going. We could go mid-morning, early afternoon or midnight."
+  branches {
+    responseText: "Mid-morning."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 0
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 2000
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Early afternoon."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 1
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 2000
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Midnight."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 2000
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "On second thought, not yet"
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5e070f3f396639a03a001ba5"
+  }
+  index: 8
+  text: "Now when are we going. We could go mid-morning, early afternoon or midnight."
+  branches {
+    responseText: "Mid-morning."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 0
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 250
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Early afternoon."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 1
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 250
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Midnight."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 250
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "On second thought, not yet"
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5e07069a396639a03a001acd"
+  }
+  index: 9
+  text: "I could and even some faked paperwork, even a few uniforms. It won\'t be cheap though. 2000\302\245 for a disguise or just a ride, my rate is 250\302\245, non-negotiable."
+  branches {
+    responseText: "Let\'s do the disguise."
+    conditions {
+      ops {
+        functionName: "Evaluate Nuyen"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 2000
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Disguised-Run"
+            }
+          }
+        }
+        args {
+          int_value: 1
+        }
+      }
+    }
+    nextNodeIndex: 10
+  }
+  branches {
+    responseText: "Just a ride."
+    conditions {
+      ops {
+        functionName: "Evaluate Nuyen"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 3
+            }
+          }
+        }
+        args {
+          int_value: 250
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Disguised-Run"
+            }
+          }
+        }
+        args {
+          int_value: 0
+        }
+      }
+    }
+    nextNodeIndex: 11
+  }
+  branches {
+    responseText: "Maybe later."
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5e070f3f396639a03a001ba5"
+  }
+  index: 10
+  text: "Now when are we going. We could go mid-morning, early afternoon or midnight."
+  branches {
+    responseText: "Mid-morning."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 0
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 2000
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Step"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Objective"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Objective_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run_Description"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run_Info_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Early afternoon."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 1
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 2000
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Step"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run_Description"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run_Info_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Objective"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Objective_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Midnight."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 2000
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Step"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Objective"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Objective_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run_Description"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run_Info_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "On second thought, not yet"
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5e070f3f396639a03a001ba5"
+  }
+  index: 11
+  text: "Now when are we going. We could go mid-morning, early afternoon or midnight."
+  branches {
+    responseText: "Mid-morning."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 0
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 250
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Step"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Objective"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Objective_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run_Description"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run_Info_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Early afternoon."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 1
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 250
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Step"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Objective"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Objective_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run_Description"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run_Info_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "Midnight."
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Insertion_Time"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Remove Nuyen"
+        args {
+          int_value: 250
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Step"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run-Objective"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Objective_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (string)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Current_Run_Description"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Story Variable (string)"
+            args {
+            }
+            args {
+              string_value: "Current_Run_Info_B"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Open Scene"
+        args {
+          call_value {
+            functionName: "Get Map Item (Scene)"
+            args {
+              string_value: "run location-Mansion 3"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "On second thought, not yet"
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "52c190363363311c050080a0"
+  }
+  index: 12
   text: "Right. Talk to you later..."
   nodeType: ConversationNodeType_Simple
 }
diff --git a/SR-Unlimited/data/convos/52c185253363311c05008048.convo.txt b/SR-Unlimited/data/convos/52c185253363311c05008048.convo.txt
index ac2798e..8368a88 100644
--- a/SR-Unlimited/data/convos/52c185253363311c05008048.convo.txt
+++ b/SR-Unlimited/data/convos/52c185253363311c05008048.convo.txt
@@ -97,7 +97,269 @@ nodes {
   }
   nodeType: ConversationNodeType_Simple
 }
+nodes {
+  idRef {
+    id: "52c185313363311c0500804e"
+  }
+  index: 1
+  text: "Okay, okay. Here\'s the keycard and my ID. I\'ll say my home was broken in to while I was out. Maybe they\'ll buy it."
+  branches {
+    responseText: "Good call."
+    actions {
+      ops {
+        functionName: "Set Variable (bool)"
+        args {
+          call_value {
+            functionName: "Get Variable (bool)"
+            args {
+              string_value: "TalkedToDirector"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (bool)"
+        args {
+          call_value {
+            functionName: "Get Variable (bool)"
+            args {
+              string_value: "GotTheCard"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Add Item to Actor"
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Keycard"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Specific Actor"
+            args {
+              call_value {
+                functionName: "Get Map Item (Player)"
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Add Item to Team"
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "ID_Card_Mitsuhama"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (string)"
+            args {
+              string_value: "FactionList"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (SceneDimension)"
+            args {
+              string_value: "Default"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
 roots {
   responseText: ""
+  conditions {
+    ops {
+      functionName: "OR"
+      args {
+        call_value {
+          functionName: "Comparison (int)"
+          args {
+            call_value {
+              functionName: "Get Story Variable (int)"
+              args {
+                string_value: "51f15c62336331d02c00440e"
+              }
+              args {
+                string_value: "StoryStep"
+              }
+            }
+          }
+          args {
+            call_value {
+              functionName: "Get Preset Value (int)"
+              args {
+                string_value: "Comparison Ops"
+              }
+              args {
+                int_value: 5
+              }
+            }
+          }
+          args {
+            int_value: 19
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Comparison (string)"
+          args {
+            call_value {
+              functionName: "Get Story Variable (string)"
+              args {
+                string_value: "51f15c62336331d02c00440e"
+              }
+              args {
+                string_value: "Run_Location"
+              }
+            }
+          }
+          args {
+            call_value {
+              functionName: "Get Preset Value (int)"
+              args {
+                string_value: "IsOrIsNot"
+              }
+              args {
+                int_value: 1
+              }
+            }
+          }
+          args {
+            string_value: "Misuhama HQ"
+          }
+        }
+      }
+    }
+  }
   nextNodeIndex: 0
 }
+roots {
+  responseText: ""
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Run_Location"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Mitsuhama HQ"
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
+  }
+  nextNodeIndex: 1
+}
diff --git a/SR-Unlimited/data/convos/537444e2336331cc1c001561.convo.txt b/SR-Unlimited/data/convos/537444e2336331cc1c001561.convo.txt
index e03fe00..8a78149 100644
--- a/SR-Unlimited/data/convos/537444e2336331cc1c001561.convo.txt
+++ b/SR-Unlimited/data/convos/537444e2336331cc1c001561.convo.txt
@@ -9,7 +9,7 @@ nodes {
   index: 0
   text: "{{GM}}Elevator Controls{{/GM}}\n\nWhich Floor"
   branches {
-    responseText: "Lobby"
+    responseText: "Second Floor"
     conditions {
       ops {
         functionName: "Comparison (int)"
@@ -33,7 +33,7 @@ nodes {
           }
         }
         args {
-          int_value: 1
+          int_value: 2
         }
       }
     }
@@ -49,7 +49,7 @@ nodes {
           }
         }
         args {
-          int_value: 1
+          int_value: 2
         }
       }
       ops {
@@ -96,7 +96,7 @@ nodes {
               call_value {
                 functionName: "Get Map Item (Prop)"
                 args {
-                  string_value: "544d76c5363735cc10005c0b"
+                  string_value: "544d76c5363735cc10005b48"
                 }
               }
             }
@@ -125,11 +125,22 @@ nodes {
           }
         }
       }
+      ops {
+        functionName: "Send Event"
+        args {
+          call_value {
+            functionName: "Get Map Item (Event)"
+            args {
+              string_value: "Hostile Gangers"
+            }
+          }
+        }
+      }
     }
     nextNodeIndex: -1
   }
   branches {
-    responseText: "Second Floor"
+    responseText: "Lobby"
     conditions {
       ops {
         functionName: "Comparison (int)"
@@ -153,7 +164,7 @@ nodes {
           }
         }
         args {
-          int_value: 2
+          int_value: 1
         }
       }
     }
@@ -169,7 +180,7 @@ nodes {
           }
         }
         args {
-          int_value: 2
+          int_value: 1
         }
       }
       ops {
@@ -216,7 +227,7 @@ nodes {
               call_value {
                 functionName: "Get Map Item (Prop)"
                 args {
-                  string_value: "544d76c5363735cc10005b48"
+                  string_value: "544d76c5363735cc10005c0b"
                 }
               }
             }
@@ -246,15 +257,10 @@ nodes {
         }
       }
       ops {
-        functionName: "Send Event"
-        args {
-          call_value {
-            functionName: "Get Map Item (Event)"
-            args {
-              string_value: "Hostile Gangers"
-            }
-          }
-        }
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "End Current Team Round"
       }
     }
     nextNodeIndex: -1
@@ -387,6 +393,9 @@ nodes {
           }
         }
       }
+      ops {
+        functionName: "End Current Team Round"
+      }
     }
     nextNodeIndex: -1
   }
@@ -518,9 +527,16 @@ nodes {
           }
         }
       }
+      ops {
+        functionName: "End Current Team Round"
+      }
     }
     nextNodeIndex: -1
   }
+  branches {
+    responseText: "Exit"
+    nextNodeIndex: -1
+  }
   nodeType: ConversationNodeType_Simple
 }
 roots {
diff --git a/SR-Unlimited/data/convos/5377aefd303266bc1200235c.convo.txt b/SR-Unlimited/data/convos/5377aefd303266bc1200235c.convo.txt
index 85042d8..068dfe8 100644
--- a/SR-Unlimited/data/convos/5377aefd303266bc1200235c.convo.txt
+++ b/SR-Unlimited/data/convos/5377aefd303266bc1200235c.convo.txt
@@ -7864,7 +7864,7 @@ nodes {
               }
             }
             args {
-              int_value: 4
+              int_value: 0
             }
           }
         }
diff --git a/SR-Unlimited/data/convos/558fe7283366373c0c001e21.convo.txt b/SR-Unlimited/data/convos/558fe7283366373c0c001e21.convo.txt
index 5b87541..8e04910 100644
--- a/SR-Unlimited/data/convos/558fe7283366373c0c001e21.convo.txt
+++ b/SR-Unlimited/data/convos/558fe7283366373c0c001e21.convo.txt
@@ -3336,7 +3336,7 @@ nodes {
               string_value: "Comparison Ops"
             }
             args {
-              int_value: 4
+              int_value: 0
             }
           }
         }
diff --git a/SR-Unlimited/data/convos/559719543366379800000915.convo.txt b/SR-Unlimited/data/convos/559719543366379800000915.convo.txt
index fb942c7..7048539 100644
--- a/SR-Unlimited/data/convos/559719543366379800000915.convo.txt
+++ b/SR-Unlimited/data/convos/559719543366379800000915.convo.txt
@@ -49,7 +49,7 @@ nodes {
           }
         }
         args {
-          int_value: 8
+          int_value: 1
         }
       }
       ops {
@@ -125,6 +125,67 @@ nodes {
           }
         }
       }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Enable/Disable Trigger"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "EnableOrDisable"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Trigger)"
+            args {
+              string_value: "5d0294b53966397015004ac5"
+            }
+          }
+        }
+      }
     }
     nextNodeIndex: -1
     comment: "1"
@@ -246,6 +307,67 @@ nodes {
           int_value: 4
         }
       }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Enable/Disable Trigger"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "EnableOrDisable"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Trigger)"
+            args {
+              string_value: "5d0294b53966397015004ac5"
+            }
+          }
+        }
+      }
     }
     nextNodeIndex: -1
     comment: "4"
@@ -367,6 +489,67 @@ nodes {
           }
         }
       }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Enable/Disable Trigger"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "EnableOrDisable"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Trigger)"
+            args {
+              string_value: "5d0294b53966397015004ac5"
+            }
+          }
+        }
+      }
     }
     nextNodeIndex: -1
     comment: "8"
@@ -488,10 +671,75 @@ nodes {
           }
         }
       }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Enable/Disable Trigger"
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "EnableOrDisable"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Trigger)"
+            args {
+              string_value: "5d0294b53966397015004ac5"
+            }
+          }
+        }
+      }
     }
     nextNodeIndex: -1
     comment: "2"
   }
+  branches {
+    responseText: "Exit"
+    nextNodeIndex: -1
+  }
   nodeType: ConversationNodeType_Simple
 }
 nodes {
@@ -658,48 +906,585 @@ nodes {
   }
   nodeType: ConversationNodeType_Simple
 }
-roots {
-  conditions {
-    ops {
-      functionName: "OR"
-      args {
-        call_value {
-          functionName: "Get Variable (bool)"
-          args {
-            string_value: "roof_elevator_lock_picked"
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Comparison (int)"
-          args {
-            call_value {
-              functionName: "Get Variable (int)"
-              args {
-                string_value: "Current_Floor"
-              }
+nodes {
+  idRef {
+    id: "544da695363735cc10005fd9"
+  }
+  index: 2
+  text: "This elevator call button is locked behind a pane. There is an old fashion keyhole and an electronic lock. You\'re either going to need to pick the lock, break it, or use a code in order to open it."
+  branches {
+    responseText: "{{GM}}Try and pick the lock.{{/GM}}"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Custom_Skill-Lockpicking"
             }
           }
-          args {
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 2
+            }
+          }
+        }
+        args {
+          int_value: 0
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Send Event"
+        args {
+          call_value {
+            functionName: "Get Map Item (Event)"
+            args {
+              string_value: "Test"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Trigger: Run Alternate Trigger"
+        args {
+          call_value {
+            functionName: "Get Map Item (Trigger)"
+            args {
+              string_value: "5450076d363735cc10006216"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WaitOrNot"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "{{GM}}Try to break the pane{{/GM}}"
+    actions {
+      ops {
+        functionName: "Send Event"
+        args {
+          call_value {
+            functionName: "Get Map Item (Event)"
+            args {
+              string_value: "Test"
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Trigger: Run Alternate Trigger"
+        args {
+          call_value {
+            functionName: "Get Map Item (Trigger)"
+            args {
+              string_value: "544eaa20363735cc10005ffc"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WaitOrNot"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "{{GM}}Use today\'s codes.{{/GM}}"
+    conditions {
+      ops {
+        functionName: "Evaluate If Actor Has Item"
+        args {
+          call_value {
+            functionName: "Specific Actor"
+            args {
+              call_value {
+                functionName: "Get Map Item (Player)"
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "HasOrHasNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Elev_Codes_1"
+            }
+          }
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (bool)"
+        args {
+          call_value {
+            functionName: "Get Variable (bool)"
+            args {
+              string_value: "roof_elevator_lock_picked"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Remove Item from Team"
+        args {
+          call_value {
+            functionName: "Get Map Item (Item)"
+            args {
+              string_value: "Elev_Codes_1"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (string)"
+            args {
+              string_value: "FactionList"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "WithOrWithout"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Map Item (SceneDimension)"
+            args {
+              string_value: "Default"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+  }
+  branches {
+    responseText: "{{GM}}Leave it alone for now{{/GM}}"
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5cfc3cde396639a42e0048c3"
+  }
+  index: 3
+  text: "The card reader stands as a silent barrier"
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5cfc3b3b396639a42e004866"
+  }
+  index: 4
+  text: "{{GM}}Swipe code to proceed{{/GM}}"
+  branches {
+    responseText: "You swipe your Mitsuhama ID."
+    nextNodeIndex: 2
+    auxiliaryLink: true
+  }
+  nodeType: ConversationNodeType_Simple
+}
+roots {
+  conditions {
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "roof_elevator_lock_picked"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
+  nextNodeIndex: 0
+}
+roots {
+  responseText: ""
+  conditions {
+    ops {
+      functionName: "Invert Bool"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "roof_elevator_lock_picked"
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 5
+          }
+        }
+      }
+      args {
+        int_value: 19
+      }
+    }
+  }
+  nextNodeIndex: 1
+}
+roots {
+  responseText: ""
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "elev_bypass_bypass"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "roof_elevator_lock_picked"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+  }
+  nextNodeIndex: 2
+}
+roots {
+  responseText: ""
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "elev_reader_bypass"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Evaluate If Actor Has Item"
+      args {
+        call_value {
+          functionName: "Specific Actor"
+          args {
             call_value {
-              functionName: "Get Preset Value (int)"
-              args {
-                string_value: "Comparison Ops"
-              }
+              functionName: "Get Map Item (Player)"
               args {
-                int_value: 1
+                int_value: 0
               }
             }
           }
           args {
-            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "HasOrHasNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Item)"
+          args {
+            string_value: "ID_Card_Mitsuhama"
           }
         }
       }
     }
   }
-  nextNodeIndex: 0
+  nextNodeIndex: 3
 }
 roots {
   responseText: ""
@@ -708,9 +1493,12 @@ roots {
       functionName: "Comparison (int)"
       args {
         call_value {
-          functionName: "Get Variable (int)"
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
           args {
-            string_value: "Current_Floor"
+            string_value: "StoryStep"
           }
         }
       }
@@ -720,17 +1508,87 @@ roots {
           args {
             string_value: "Comparison Ops"
           }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "elev_bypass_bypass"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
           args {
             int_value: 0
           }
         }
       }
+    }
+    ops {
+      functionName: "Evaluate If Actor Has Item"
+      args {
+        call_value {
+          functionName: "Specific Actor"
+          args {
+            call_value {
+              functionName: "Get Map Item (Player)"
+              args {
+                int_value: 0
+              }
+            }
+          }
+          args {
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "HasOrHasNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
       args {
-        int_value: 1
+        call_value {
+          functionName: "Get Map Item (Item)"
+          args {
+            string_value: "ID_Card_Mitsuhama"
+          }
+        }
       }
     }
     ops {
-      functionName: "Invert Bool"
+      functionName: "Comparison (bool)"
       args {
         call_value {
           functionName: "Get Variable (bool)"
@@ -739,7 +1597,53 @@ roots {
           }
         }
       }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
     }
   }
-  nextNodeIndex: 1
+  actions {
+    ops {
+      functionName: "Set Variable (bool)"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "elev_bypass_bypass"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
+  nextNodeIndex: 4
 }
diff --git a/SR-Unlimited/data/convos/559719983366379800000925.convo.txt b/SR-Unlimited/data/convos/559719983366379800000925.convo.txt
index 9b2b05b..ad78267 100644
--- a/SR-Unlimited/data/convos/559719983366379800000925.convo.txt
+++ b/SR-Unlimited/data/convos/559719983366379800000925.convo.txt
@@ -9,7 +9,7 @@ nodes {
   index: 0
   text: "{{GM}}Elevator Controls{{/GM}}\n\nWhich Floor"
   branches {
-    responseText: " P - Penthouse"
+    responseText: "UM - Upper Management"
     conditions {
       ops {
         functionName: "Comparison (int)"
@@ -33,7 +33,7 @@ nodes {
           }
         }
         args {
-          int_value: 4
+          int_value: 8
         }
       }
     }
@@ -49,7 +49,7 @@ nodes {
           }
         }
         args {
-          int_value: 4
+          int_value: 8
         }
       }
       ops {
@@ -96,7 +96,7 @@ nodes {
               call_value {
                 functionName: "Get Map Item (Prop)"
                 args {
-                  string_value: "54114799316235b81f00356d"
+                  string_value: "55989550336637d8150013c5"
                 }
               }
             }
@@ -125,123 +125,38 @@ nodes {
           }
         }
       }
-    }
-    nextNodeIndex: -1
-    comment: "4"
-  }
-  branches {
-    responseText: "UM - Upper Management"
-    conditions {
       ops {
-        functionName: "Comparison (int)"
-        args {
-          call_value {
-            functionName: "Get Variable (int)"
-            args {
-              string_value: "Current_Floor"
-            }
-          }
-        }
+        functionName: "Set Variable (int)"
         args {
           call_value {
-            functionName: "Get Preset Value (int)"
+            functionName: "Get Story Variable (int)"
             args {
-              string_value: "Comparison Ops"
+              string_value: "51f15c62336331d02c00440e"
             }
             args {
-              int_value: 1
+              string_value: "Respons_Delay"
             }
           }
         }
         args {
-          int_value: 8
+          int_value: 3
         }
       }
-    }
-    actions {
       ops {
         functionName: "Set Variable (int)"
         args {
           call_value {
             functionName: "Get Variable (int)"
             args {
-              string_value: "Current_Floor"
-            }
-          }
-        }
-        args {
-          int_value: 8
-        }
-      }
-      ops {
-        functionName: "Teleport Actor"
-        args {
-          call_value {
-            functionName: "All Actors on Team"
-            args {
-              call_value {
-                functionName: "Get Preset Value (string)"
-                args {
-                  string_value: "FactionList"
-                }
-                args {
-                  int_value: 0
-                }
-              }
-            }
-            args {
-              call_value {
-                functionName: "Get Preset Value (int)"
-                args {
-                  string_value: "AllOrAny"
-                }
-                args {
-                  int_value: 0
-                }
-              }
-            }
-            args {
-              call_value {
-                functionName: "Get Map Item (SceneDimension)"
-                args {
-                  string_value: "Default"
-                }
-              }
-            }
-          }
-        }
-        args {
-          call_value {
-            functionName: "Current Location of Prop"
-            args {
-              call_value {
-                functionName: "Get Map Item (Prop)"
-                args {
-                  string_value: "55989550336637d8150013c5"
-                }
-              }
-            }
-          }
-        }
-        args {
-          call_value {
-            functionName: "Get Preset Value (int)"
-            args {
-              string_value: "FacingDirection"
-            }
-            args {
-              int_value: 5
+              string_value: "ResponseFloor"
             }
           }
         }
         args {
           call_value {
-            functionName: "Get Preset Value (int)"
-            args {
-              string_value: "TeleportMethod"
-            }
+            functionName: "Get Variable (int)"
             args {
-              int_value: 0
+              string_value: "Current_Floor"
             }
           }
         }
@@ -367,6 +282,45 @@ nodes {
           }
         }
       }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
     }
     nextNodeIndex: -1
     comment: "7"
@@ -488,12 +442,51 @@ nodes {
           }
         }
       }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
     }
     nextNodeIndex: -1
     comment: "3"
   }
   branches {
-    responseText: " I - Infirmary"
+    responseText: " P - Penthouse"
     conditions {
       ops {
         functionName: "Comparison (int)"
@@ -517,7 +510,7 @@ nodes {
           }
         }
         args {
-          int_value: 6
+          int_value: 4
         }
       }
     }
@@ -533,7 +526,7 @@ nodes {
           }
         }
         args {
-          int_value: 6
+          int_value: 4
         }
       }
       ops {
@@ -580,7 +573,7 @@ nodes {
               call_value {
                 functionName: "Get Map Item (Prop)"
                 args {
-                  string_value: "55989500336637d8150013c3"
+                  string_value: "54114799316235b81f00356d"
                 }
               }
             }
@@ -609,9 +602,48 @@ nodes {
           }
         }
       }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
     }
     nextNodeIndex: -1
-    comment: "6"
+    comment: "4"
   }
   branches {
     responseText: " L - Lobby"
@@ -730,12 +762,34 @@ nodes {
           int_value: 5
         }
       }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
     }
     nextNodeIndex: -1
     comment: "5"
   }
   branches {
-    responseText: " B - Garage"
+    responseText: " I - Wellness Center"
     conditions {
       ops {
         functionName: "Comparison (int)"
@@ -759,7 +813,7 @@ nodes {
           }
         }
         args {
-          int_value: 2
+          int_value: 6
         }
       }
     }
@@ -775,7 +829,7 @@ nodes {
           }
         }
         args {
-          int_value: 2
+          int_value: 6
         }
       }
       ops {
@@ -822,7 +876,7 @@ nodes {
               call_value {
                 functionName: "Get Map Item (Prop)"
                 args {
-                  string_value: "55989499336637d8150013bf"
+                  string_value: "55989500336637d8150013c3"
                 }
               }
             }
@@ -851,20 +905,1474 @@ nodes {
           }
         }
       }
-    }
-    nextNodeIndex: -1
-    comment: "2"
-  }
-  branches {
-    responseText: "LB - Operations"
-    conditions {
       ops {
-        functionName: "Comparison (int)"
+        functionName: "Set Variable (int)"
         args {
           call_value {
-            functionName: "Get Variable (int)"
+            functionName: "Get Story Variable (int)"
             args {
-              string_value: "Current_Floor"
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+    comment: "6"
+  }
+  branches {
+    responseText: " B - Garage"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Teleport Actor"
+        args {
+          call_value {
+            functionName: "All Actors on Team"
+            args {
+              call_value {
+                functionName: "Get Preset Value (string)"
+                args {
+                  string_value: "FactionList"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Preset Value (int)"
+                args {
+                  string_value: "AllOrAny"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Map Item (SceneDimension)"
+                args {
+                  string_value: "Default"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Current Location of Prop"
+            args {
+              call_value {
+                functionName: "Get Map Item (Prop)"
+                args {
+                  string_value: "55989499336637d8150013bf"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "FacingDirection"
+            }
+            args {
+              int_value: 5
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "TeleportMethod"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+    }
+    nextNodeIndex: -1
+    comment: "2"
+  }
+  branches {
+    responseText: "LB - Operations"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          int_value: 9
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          int_value: 9
+        }
+      }
+      ops {
+        functionName: "Teleport Actor"
+        args {
+          call_value {
+            functionName: "All Actors on Team"
+            args {
+              call_value {
+                functionName: "Get Preset Value (string)"
+                args {
+                  string_value: "FactionList"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Preset Value (int)"
+                args {
+                  string_value: "AllOrAny"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Map Item (SceneDimension)"
+                args {
+                  string_value: "Default"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Current Location of Prop"
+            args {
+              call_value {
+                functionName: "Get Map Item (Prop)"
+                args {
+                  string_value: "5598956d336637d8150013c7"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "FacingDirection"
+            }
+            args {
+              int_value: 5
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "TeleportMethod"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+    comment: "9"
+  }
+  branches {
+    responseText: "Exit"
+    nextNodeIndex: -1
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5cfc3b3b396639a42e004866"
+  }
+  index: 1
+  text: "{{GM}}Swipe code to proceed{{/GM}}"
+  branches {
+    responseText: "You swipe your Mitsuhama ID."
+    nextNodeIndex: 0
+    auxiliaryLink: true
+  }
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "5cff2af13966391409000bd3"
+  }
+  index: 2
+  text: "{{GM}}The card reader stands as a silent guardian{{/GM}}"
+  nodeType: ConversationNodeType_Simple
+}
+nodes {
+  idRef {
+    id: "537444f3336331cc1c001567"
+  }
+  index: 3
+  text: "{{GM}}Elevator Controls{{/GM}}\n\nWhich Floor"
+  branches {
+    responseText: "UM - Upper Management"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          int_value: 8
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          int_value: 8
+        }
+      }
+      ops {
+        functionName: "Teleport Actor"
+        args {
+          call_value {
+            functionName: "All Actors on Team"
+            args {
+              call_value {
+                functionName: "Get Preset Value (string)"
+                args {
+                  string_value: "FactionList"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Preset Value (int)"
+                args {
+                  string_value: "AllOrAny"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Map Item (SceneDimension)"
+                args {
+                  string_value: "Default"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Current Location of Prop"
+            args {
+              call_value {
+                functionName: "Get Map Item (Prop)"
+                args {
+                  string_value: "55989550336637d8150013c5"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "FacingDirection"
+            }
+            args {
+              int_value: 5
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "TeleportMethod"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+    comment: "8"
+  }
+  branches {
+    responseText: "BP - Bull Pen"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          int_value: 7
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          int_value: 7
+        }
+      }
+      ops {
+        functionName: "Teleport Actor"
+        args {
+          call_value {
+            functionName: "All Actors on Team"
+            args {
+              call_value {
+                functionName: "Get Preset Value (string)"
+                args {
+                  string_value: "FactionList"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Preset Value (int)"
+                args {
+                  string_value: "AllOrAny"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Map Item (SceneDimension)"
+                args {
+                  string_value: "Default"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Current Location of Prop"
+            args {
+              call_value {
+                functionName: "Get Map Item (Prop)"
+                args {
+                  string_value: "55989540336637d8150013c4"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "FacingDirection"
+            }
+            args {
+              int_value: 5
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "TeleportMethod"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+    comment: "7"
+  }
+  branches {
+    responseText: " P - Penthouse"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          int_value: 4
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          int_value: 4
+        }
+      }
+      ops {
+        functionName: "Teleport Actor"
+        args {
+          call_value {
+            functionName: "All Actors on Team"
+            args {
+              call_value {
+                functionName: "Get Preset Value (string)"
+                args {
+                  string_value: "FactionList"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Preset Value (int)"
+                args {
+                  string_value: "AllOrAny"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Map Item (SceneDimension)"
+                args {
+                  string_value: "Default"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Current Location of Prop"
+            args {
+              call_value {
+                functionName: "Get Map Item (Prop)"
+                args {
+                  string_value: "54114799316235b81f00356d"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "FacingDirection"
+            }
+            args {
+              int_value: 5
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "TeleportMethod"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+    comment: "4"
+  }
+  branches {
+    responseText: " G - Guest Quarters"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "Teleport Actor"
+        args {
+          call_value {
+            functionName: "All Actors on Team"
+            args {
+              call_value {
+                functionName: "Get Preset Value (string)"
+                args {
+                  string_value: "FactionList"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Preset Value (int)"
+                args {
+                  string_value: "AllOrAny"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Map Item (SceneDimension)"
+                args {
+                  string_value: "Default"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Current Location of Prop"
+            args {
+              call_value {
+                functionName: "Get Map Item (Prop)"
+                args {
+                  string_value: "559894b4336637d8150013c0"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "FacingDirection"
+            }
+            args {
+              int_value: 5
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "TeleportMethod"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+    comment: "3"
+  }
+  branches {
+    responseText: " L - Lobby"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          int_value: 5
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Teleport Actor"
+        args {
+          call_value {
+            functionName: "All Actors on Team"
+            args {
+              call_value {
+                functionName: "Get Preset Value (string)"
+                args {
+                  string_value: "FactionList"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Preset Value (int)"
+                args {
+                  string_value: "AllOrAny"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Map Item (SceneDimension)"
+                args {
+                  string_value: "Default"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Current Location of Prop"
+            args {
+              call_value {
+                functionName: "Get Map Item (Prop)"
+                args {
+                  string_value: "559894e8336637d8150013c2"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "FacingDirection"
+            }
+            args {
+              int_value: 5
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "TeleportMethod"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          int_value: 5
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+    comment: "5"
+  }
+  branches {
+    responseText: " I - Wellness Center"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          int_value: 6
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          int_value: 6
+        }
+      }
+      ops {
+        functionName: "Teleport Actor"
+        args {
+          call_value {
+            functionName: "All Actors on Team"
+            args {
+              call_value {
+                functionName: "Get Preset Value (string)"
+                args {
+                  string_value: "FactionList"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Preset Value (int)"
+                args {
+                  string_value: "AllOrAny"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Map Item (SceneDimension)"
+                args {
+                  string_value: "Default"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Current Location of Prop"
+            args {
+              call_value {
+                functionName: "Get Map Item (Prop)"
+                args {
+                  string_value: "55989500336637d8150013c3"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "FacingDirection"
+            }
+            args {
+              int_value: 5
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "TeleportMethod"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
+    }
+    nextNodeIndex: -1
+    comment: "6"
+  }
+  branches {
+    responseText: " B - Garage"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "Comparison Ops"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+    }
+    actions {
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+        args {
+          int_value: 2
+        }
+      }
+      ops {
+        functionName: "Teleport Actor"
+        args {
+          call_value {
+            functionName: "All Actors on Team"
+            args {
+              call_value {
+                functionName: "Get Preset Value (string)"
+                args {
+                  string_value: "FactionList"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Preset Value (int)"
+                args {
+                  string_value: "AllOrAny"
+                }
+                args {
+                  int_value: 0
+                }
+              }
+            }
+            args {
+              call_value {
+                functionName: "Get Map Item (SceneDimension)"
+                args {
+                  string_value: "Default"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Current Location of Prop"
+            args {
+              call_value {
+                functionName: "Get Map Item (Prop)"
+                args {
+                  string_value: "55989499336637d8150013bf"
+                }
+              }
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "FacingDirection"
+            }
+            args {
+              int_value: 5
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "TeleportMethod"
+            }
+            args {
+              int_value: 0
+            }
+          }
+        }
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+    }
+    nextNodeIndex: -1
+    comment: "2"
+  }
+  branches {
+    responseText: "LB - Operations"
+    conditions {
+      ops {
+        functionName: "Comparison (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
             }
           }
         }
@@ -972,12 +2480,355 @@ nodes {
           }
         }
       }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (int)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Respons_Delay"
+            }
+          }
+        }
+        args {
+          int_value: 3
+        }
+      }
+      ops {
+        functionName: "End Current Team Round"
+      }
+      ops {
+        functionName: "Set Variable (int)"
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "ResponseFloor"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Variable (int)"
+            args {
+              string_value: "Current_Floor"
+            }
+          }
+        }
+      }
     }
     nextNodeIndex: -1
     comment: "9"
   }
+  branches {
+    responseText: "Exit"
+    nextNodeIndex: -1
+  }
   nodeType: ConversationNodeType_Simple
 }
 roots {
+  conditions {
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "elev_bypass_bypass"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
   nextNodeIndex: 0
 }
+roots {
+  responseText: ""
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "elev_bypass_bypass"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Evaluate If Actor Has Item"
+      args {
+        call_value {
+          functionName: "Specific Actor"
+          args {
+            call_value {
+              functionName: "Get Map Item (Player)"
+              args {
+                int_value: 0
+              }
+            }
+          }
+          args {
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "HasOrHasNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Item)"
+          args {
+            string_value: "ID_Card_Mitsuhama"
+          }
+        }
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Set Variable (bool)"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "elev_bypass_bypass"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
+  nextNodeIndex: 1
+}
+roots {
+  responseText: ""
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "elev_reader_bypass"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Evaluate If Actor Has Item"
+      args {
+        call_value {
+          functionName: "Specific Actor"
+          args {
+            call_value {
+              functionName: "Get Map Item (Player)"
+              args {
+                int_value: 0
+              }
+            }
+          }
+          args {
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "HasOrHasNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Item)"
+          args {
+            string_value: "ID_Card_Mitsuhama"
+          }
+        }
+      }
+    }
+  }
+  nextNodeIndex: 2
+}
+roots {
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 4
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
+  }
+  nextNodeIndex: 3
+}
diff --git a/SR-Unlimited/data/convos/58dd415030373600272b0dd5.convo.txt b/SR-Unlimited/data/convos/58dd415030373600272b0dd5.convo.txt
index 34f1649..33df338 100644
--- a/SR-Unlimited/data/convos/58dd415030373600272b0dd5.convo.txt
+++ b/SR-Unlimited/data/convos/58dd415030373600272b0dd5.convo.txt
@@ -21,7 +21,7 @@ nodes {
   index: 1
   text: "{{GM}}Rings{{/GM}}\n\nMicrodeck, This is Andy."
   branches {
-    responseText: "Hello, Andy/ it\'s been a while."
+    responseText: "Hello, Andy. it\'s been a while."
     nextNodeIndex: 2
   }
   nodeType: ConversationNodeType_Simple
@@ -33,7 +33,7 @@ nodes {
   index: 2
   text: "Drek. $(l.name), You picked an awful to to go walkabout. You skipped out and left with with two tickets to Space Amazons."
   branches {
-    responseText: "And here I thought you were selling me out to Renraku. Tell Soka who I am sure you do not know that I have the box."
+    responseText: "And here I thought you were selling me out to Renraku. Tell Soka who I am sure you do not know that I have the box. I\'ll even describe it so he knows it\'s real."
     nextNodeIndex: 3
   }
   nodeType: ConversationNodeType_Simple
@@ -45,7 +45,7 @@ nodes {
   index: 3
   text: "Listen, I don\'t know..."
   branches {
-    responseText: "_He_ can pick it up _in person_ at the Rats Nest Fight Club tommorow at Nine PM."
+    responseText: "_He_ can pick it up _in person_ at the Rats Nest Fight Club tomorrow at Nine PM. It\'s a small green box with black trim. It has scratches on all sides revealing dark wood. It has no obvious ltch or way to open it but it does ave a large amber crystal on one side that glow with gold colored, constantly shifting runes.\n\n{{GM}}You flash a picture of it at the screen.{{/CC}}"
     nextNodeIndex: 4
   }
   nodeType: ConversationNodeType_Simple
@@ -55,28 +55,97 @@ nodes {
     id: "58dd443a30373600272b0df7"
   }
   index: 4
-  text: "Okay, but I didn;t want to they were, uh  going to kill my family.\n\n{{GM}}Click{{/GM}}"
+  text: "Okay, but I didn\'t want to they were, uh  going to kill my family.\n\n{{GM}}Click{{/GM}}"
   nodeType: ConversationNodeType_Simple
   actions {
     ops {
-      functionName: "Set Variable (int)"
+      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Story Variable (bool)"
           args {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "StoryStep"
+            string_value: "Called_Andy"
           }
         }
       }
       args {
-        int_value: 19
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 1
+          }
+        }
       }
     }
   }
 }
 roots {
+  actions {
+    ops {
+      functionName: "Set Variable (bool)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (bool)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Call_Andy"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Set Variable (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "PlotInformation"
+          }
+        }
+      }
+      args {
+        string_value: "Go meet Soka at the underground fight arena in the Rat\'s Nest."
+      }
+    }
+    ops {
+      functionName: "Set Screen Label"
+      args {
+        string_value: "Journal"
+      }
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "PlotInformation"
+          }
+        }
+      }
+    }
+  }
   nextNodeIndex: 0
 }
diff --git a/SR-Unlimited/data/scenes/northcity.srt.txt b/SR-Unlimited/data/scenes/northcity.srt.txt
index 7d3633b..961533b 100644
--- a/SR-Unlimited/data/scenes/northcity.srt.txt
+++ b/SR-Unlimited/data/scenes/northcity.srt.txt
@@ -1639,45 +1639,59 @@ triggers {
   }
   conditions {
     ops {
-      functionName: "Evaluate Turn Mode"
+      functionName: "Comparison (Actor)"
+      args {
+        call_value {
+          functionName: "Triggering Actor"
+        }
+      }
       args {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "TurnBasedOrFreeMove"
+            string_value: "IsOrIsNot"
           }
           args {
             int_value: 1
           }
         }
       }
-    }
-    ops {
-      functionName: "Comparison (Actor)"
       args {
         call_value {
-          functionName: "Triggering Actor"
+          functionName: "Get Map Item (Player)"
+          args {
+            int_value: 0
+          }
         }
       }
+    }
+    ops {
+      functionName: "Comparison (int)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (int)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            int_value: 1
+            string_value: "StoryStep"
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Map Item (Player)"
+          functionName: "Get Preset Value (int)"
           args {
-            int_value: 0
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 1
           }
         }
       }
+      args {
+        int_value: 18
+      }
     }
   }
   actions {
@@ -1715,6 +1729,50 @@ triggers {
     id: "399994d83363315801000f72"
   }
   elseActions {
+    ops {
+      functionName: "Trigger: Run Alternate Trigger"
+      args {
+        call_value {
+          functionName: "Get Map Item (Trigger)"
+          args {
+            string_value: "5d042f12396639941d00205c"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WaitOrNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
   }
   is_oneshot: false
 }
@@ -16905,7 +16963,7 @@ triggers {
   is_oneshot: false
 }
 triggers {
-  name: "Mitsuhama Tunnel Travel"
+  name: "Mitsuhama Tunnel Travel2"
   events {
     ops {
       functionName: "On Item Interaction"
@@ -16983,6 +17041,34 @@ triggers {
         }
       }
     }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
   }
   actions {
     ops {
@@ -17008,7 +17094,7 @@ triggers {
         call_value {
           functionName: "Get Map Item (Scene)"
           args {
-            string_value: "run location-Mitsuhama HQ"
+            string_value: "run location-Mitsuhama HQ2"
           }
         }
       }
@@ -17019,54 +17105,11 @@ triggers {
     id: "5596f0e9336637480a0015a2"
   }
   elseActions {
-    ops {
-      functionName: "Display Text over Actor"
-      args {
-        call_value {
-          functionName: "Triggering Actor"
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "TextPopupStyle"
-          }
-          args {
-            int_value: 0
-          }
-        }
-      }
-      args {
-        string_value: "I have no reason to go in here. It isn\'t worth the trouble."
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 3
-      }
-      args {
-        float_value: 3
-      }
-      args {
-        float_value: 0
-      }
-    }
   }
   is_oneshot: false
 }
 triggers {
-  name: "Mitsuhama Garage Travel"
+  name: "Mitsuhama Garage Travel2"
   events {
     ops {
       functionName: "On Item Interaction"
@@ -17144,6 +17187,34 @@ triggers {
         }
       }
     }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
   }
   actions {
     ops {
@@ -17169,7 +17240,7 @@ triggers {
         call_value {
           functionName: "Get Map Item (Scene)"
           args {
-            string_value: "run location-Mitsuhama HQ"
+            string_value: "run location-Mitsuhama HQ2"
           }
         }
       }
@@ -17180,54 +17251,11 @@ triggers {
     id: "5596f20d336637480a0015a5"
   }
   elseActions {
-    ops {
-      functionName: "Display Text over Actor"
-      args {
-        call_value {
-          functionName: "Triggering Actor"
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "TextPopupStyle"
-          }
-          args {
-            int_value: 0
-          }
-        }
-      }
-      args {
-        string_value: "I have no reason to go in here. It isn\'t worth the trouble."
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 3
-      }
-      args {
-        float_value: 3
-      }
-      args {
-        float_value: 0
-      }
-    }
   }
   is_oneshot: false
 }
 triggers {
-  name: "Mitsuhama Front Door Travel"
+  name: "Mitsuhama Front Door Travel2"
   events {
     ops {
       functionName: "On Item Interaction"
@@ -17305,6 +17333,34 @@ triggers {
         }
       }
     }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
   }
   actions {
     ops {
@@ -17330,7 +17386,7 @@ triggers {
         call_value {
           functionName: "Get Map Item (Scene)"
           args {
-            string_value: "run location-Mitsuhama HQ"
+            string_value: "run location-Mitsuhama HQ2"
           }
         }
       }
@@ -17341,49 +17397,6 @@ triggers {
     id: "5596f211336637480a0015a6"
   }
   elseActions {
-    ops {
-      functionName: "Display Text over Actor"
-      args {
-        call_value {
-          functionName: "Triggering Actor"
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "TextPopupStyle"
-          }
-          args {
-            int_value: 0
-          }
-        }
-      }
-      args {
-        string_value: "I have no reason to go in here. It isn\'t worth the trouble."
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 3
-      }
-      args {
-        float_value: 3
-      }
-      args {
-        float_value: 0
-      }
-    }
   }
   is_oneshot: false
 }
@@ -18978,7 +18991,7 @@ triggers {
         call_value {
           functionName: "Get Map Item (InteractableObject)"
           args {
-            string_value: "5b468c5d343032dc2a001217"
+            string_value: "5b46905b343032dc2a00121c"
           }
         }
       }
@@ -19015,7 +19028,1073 @@ triggers {
         }
       }
       args {
-        int_value: 994
+        int_value: 994
+      }
+    }
+    ops {
+      functionName: "Open Scene"
+      args {
+        call_value {
+          functionName: "Get Map Item (Scene)"
+          args {
+            string_value: "Run Location-Sewers"
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5b468cbc343032dc2a001219"
+  }
+  elseActions {
+    ops {
+      functionName: "Display Text over Actor"
+      args {
+        call_value {
+          functionName: "Triggering Actor"
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "TextPopupStyle"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        string_value: "I have no reason to go in there."
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 3
+      }
+      args {
+        float_value: 3
+      }
+      args {
+        float_value: 0
+      }
+    }
+  }
+  is_oneshot: true
+}
+triggers {
+  name: "Runs_Vigor"
+  events {
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Fixer"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Vigor"
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Add To Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        int_value: 1
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cf9cb7b39663998390060e7"
+  }
+  elseActions {
+  }
+  is_oneshot: true
+}
+triggers {
+  name: "Story_18to19_Call_From_Vigor"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "588e359b646632dc11005606"
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "528413ab336331902a001f78"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 18
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 2
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c982143363311417000959"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cf9c93d396639983900603c"
+  }
+  elseActions {
+  }
+  is_oneshot: true
+}
+triggers {
+  name: "Mitsuhama Tunnel Travel"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "53efe729386461403c0087c6"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Run-Location"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Mitsuhama HQ"
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (bool)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Employed"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 4
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Travel"
+          }
+        }
+      }
+      args {
+        int_value: 900
+      }
+    }
+    ops {
+      functionName: "Open Scene"
+      args {
+        call_value {
+          functionName: "Get Map Item (Scene)"
+          args {
+            string_value: "run location-Mitsuhama HQ"
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cfec8d839663914090008b1"
+  }
+  elseActions {
+  }
+  is_oneshot: false
+}
+triggers {
+  name: "Mitsuhama Front Door Travel"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "53efe729386461403c00858b"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Run-Location"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Mitsuhama HQ"
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (bool)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Employed"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 4
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Travel"
+          }
+        }
+      }
+      args {
+        int_value: 908
+      }
+    }
+    ops {
+      functionName: "Open Scene"
+      args {
+        call_value {
+          functionName: "Get Map Item (Scene)"
+          args {
+            string_value: "run location-Mitsuhama HQ"
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cfec8dd39663914090008b2"
+  }
+  elseActions {
+  }
+  is_oneshot: false
+}
+triggers {
+  name: "Mitsuhama No_Tunnel Travel"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "53efe729386461403c0087c6"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Run-Location"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        string_value: "Mitsuhama HQ"
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Display Text over Actor"
+      args {
+        call_value {
+          functionName: "Triggering Actor"
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "TextPopupStyle"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        string_value: "I have no reason to go in here. It isn\'t worth the trouble."
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 3
+      }
+      args {
+        float_value: 3
+      }
+      args {
+        float_value: 0
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cfec8e839663914090008b3"
+  }
+  elseActions {
+  }
+  is_oneshot: false
+}
+triggers {
+  name: "Mitsuhama No_Front Door Travel"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "53efe729386461403c00858b"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Run-Location"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        string_value: "Mitsuhama HQ"
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Display Text over Actor"
+      args {
+        call_value {
+          functionName: "Triggering Actor"
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "TextPopupStyle"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        string_value: "I have no reason to go in here. It isn\'t worth the trouble."
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 3
+      }
+      args {
+        float_value: 3
+      }
+      args {
+        float_value: 0
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cfecb3639663914090008b4"
+  }
+  elseActions {
+  }
+  is_oneshot: false
+}
+triggers {
+  name: "Mitsuhama No_Garage Travel"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "5596f7dd336637480a0015a9"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Run-Location"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        string_value: "Mitsuhama HQ"
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Display Text over Actor"
+      args {
+        call_value {
+          functionName: "Triggering Actor"
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "TextPopupStyle"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        string_value: "I have no reason to go in here. It isn\'t worth the trouble."
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 0
+      }
+      args {
+        float_value: 3
+      }
+      args {
+        float_value: 3
+      }
+      args {
+        float_value: 0
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cfecc5439663914090008b6"
+  }
+  elseActions {
+  }
+  is_oneshot: false
+}
+triggers {
+  name: "Mitsuhama Garage Travel"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "5596f7dd336637480a0015a9"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Run-Location"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Mitsuhama HQ"
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (bool)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Employed"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 4
+          }
+        }
+      }
+      args {
+        int_value: 20
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Travel"
+          }
+        }
+      }
+      args {
+        int_value: 907
+      }
+    }
+    ops {
+      functionName: "Open Scene"
+      args {
+        call_value {
+          functionName: "Get Map Item (Scene)"
+          args {
+            string_value: "run location-Mitsuhama HQ"
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cfecc5839663914090008b7"
+  }
+  elseActions {
+  }
+  is_oneshot: false
+}
+triggers {
+  name: "Club Travel2"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "399995113363315801000f75"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (Actor)"
+      args {
+        call_value {
+          functionName: "Triggering Actor"
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Player)"
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 4
+          }
+        }
+      }
+      args {
+        int_value: 2
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Travel"
+          }
+        }
+      }
+      args {
+        int_value: 3
       }
     }
     ops {
@@ -19024,7 +20103,7 @@ triggers {
         call_value {
           functionName: "Get Map Item (Scene)"
           args {
-            string_value: "Run Location-Sewers"
+            string_value: "Underground 93"
           }
         }
       }
@@ -19032,54 +20111,41 @@ triggers {
   }
   isActive: true
   idRef {
-    id: "5b468cbc343032dc2a001219"
+    id: "5d042f12396639941d00205c"
   }
   elseActions {
     ops {
-      functionName: "Display Text over Actor"
+      functionName: "Start Conversation"
       args {
         call_value {
-          functionName: "Triggering Actor"
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c982143363311417000959"
+          }
         }
       }
       args {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "TextPopupStyle"
+            string_value: "WithOrWithout"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
-      args {
-        string_value: "I have no reason to go in there."
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 3
-      }
-      args {
-        float_value: 3
-      }
-      args {
-        float_value: 0
-      }
     }
   }
-  is_oneshot: true
+  is_oneshot: false
 }
 regions {
   name: "Camera Bind"
@@ -21396,6 +22462,303 @@ characters {
     spawn_type: SpawnType_Normal
   }
 }
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: 23
+    y: 0
+    z: 114
+  }
+  orientation: ORIENTATION_E
+  displayName: "Mike Score"
+  idRef {
+    id: "5d1e687d396639fc27000a7d"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+      }
+      specializations {
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Outfit_SINless"
+    }
+    team_id: "Civilians"
+    char_name: "Mike Score"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    portrait {
+      filename: "pc_humanmale_00b"
+    }
+    karma: 6
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: 21
+    y: 0
+    z: 115
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "Gouhin"
+  displayName: "Informant Security"
+  idRef {
+    id: "5dfd52e93966397410003573"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Wealthy/HumanMaleAutumn"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        magic: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        force: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
+      }
+      skills {
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
+      }
+      specializations {
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
+      }
+      archetypeName: "Non-Combatant"
+      attitude: AttitudeCautious
+      vulnerabilities {
+      }
+    }
+    team_id: "Civilians"
+    char_name: "Gouhin"
+    GeneralTags: "Gouhin"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    hiring_type: HiringType_None
+    portrait {
+      filename: "pc_trollfemale_00b"
+    }
+    karma: 6
+    hiring_cost_override: 3000
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: 26
+    y: 0
+    z: 113
+  }
+  orientation: ORIENTATION_E
+  GeneralTags: "Mike_Score"
+  displayName: "Informant Corp"
+  idRef {
+    id: "5dfd67d83966397410003588"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+      }
+      specializations {
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Outfit_SINless"
+    }
+    team_id: "Civilians"
+    char_name: "Mike Score"
+    GeneralTags: "Mike_Score"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    portrait {
+      filename: "pc_humanmale_00b"
+    }
+    karma: 6
+  }
+}
 variables {
   int_value: 0
   variableref_value {
diff --git a/SR-Unlimited/data/scenes/penumbra district.srt.txt b/SR-Unlimited/data/scenes/penumbra district.srt.txt
index 61a3689..c67ddd8 100644
--- a/SR-Unlimited/data/scenes/penumbra district.srt.txt	
+++ b/SR-Unlimited/data/scenes/penumbra district.srt.txt	
@@ -353,6 +353,34 @@ triggers {
     }
   }
   conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        int_value: 18
+      }
+    }
   }
   actions {
     ops {
@@ -372,8 +400,52 @@ triggers {
     id: "52082666336331bc2000471a"
   }
   elseActions {
+    ops {
+      functionName: "Trigger: Run Alternate Trigger"
+      args {
+        call_value {
+          functionName: "Get Map Item (Trigger)"
+          args {
+            string_value: "5d042c5d396639380d0017bf"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WaitOrNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
   }
-  is_oneshot: true
+  is_oneshot: false
 }
 triggers {
   name: "Transition-Puyallup"
@@ -2864,52 +2936,13 @@ triggers {
     }
   }
   conditions {
-    ops {
-      functionName: "Comparison (bool)"
-      args {
-        call_value {
-          functionName: "Get Story Variable (bool)"
-          args {
-            string_value: "51f15c62336331d02c00440e"
-          }
-          args {
-            string_value: "Employed"
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "IsOrIsNot"
-          }
-          args {
-            int_value: 1
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "bool"
-          }
-          args {
-            int_value: 0
-          }
-        }
-      }
-    }
     ops {
       functionName: "Comparison (int)"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
-          args {
-            string_value: "51f15c62336331d02c00440e"
-          }
+          functionName: "Get Variable (int)"
           args {
-            string_value: "StoryStep"
+            string_value: "PhoneRing"
           }
         }
       }
@@ -2925,7 +2958,7 @@ triggers {
         }
       }
       args {
-        int_value: 13
+        int_value: 1
       }
     }
   }
@@ -2988,6 +3021,36 @@ triggers {
     id: "39999388336331f41c0061b7"
   }
   elseActions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5d058dbf3966390c19005791"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Player)"
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
   }
   is_oneshot: true
 }
@@ -11337,290 +11400,128 @@ triggers {
   is_oneshot: true
 }
 triggers {
-  name: "PhoneRingFalse"
+  name: "Car East Move"
   events {
     ops {
-      functionName: "On Region Enter"
+      functionName: "Get Map Item (Event)"
       args {
-        call_value {
-          functionName: "Get Map Item (Region)"
-          args {
-            string_value: "5209857b3363315c2400741f"
-          }
-        }
+        string_value: "Car East Move"
       }
     }
   }
   conditions {
     ops {
-      functionName: "Comparison (Actor)"
+      functionName: "Comparison (float)"
       args {
         call_value {
-          functionName: "Triggering Actor"
+          functionName: "Get Story Variable (float)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Taxi_Z_Movement"
+          }
         }
       }
       args {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "Comparison Ops"
           }
           args {
-            int_value: 1
+            int_value: 4
           }
         }
       }
       args {
-        call_value {
-          functionName: "Get Map Item (Player)"
-          args {
-            int_value: 0
-          }
-        }
+        float_value: 30
       }
     }
+  }
+  actions {
     ops {
-      functionName: "Comparison (int)"
+      functionName: "Move Prop"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
-          args {
-            string_value: "51f15c62336331d02c00440e"
-          }
+          functionName: "Get Map Item (Prop)"
           args {
-            string_value: "StoryStep"
+            string_value: "533694e33363312c13007b56"
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Offset Point"
           args {
-            string_value: "Comparison Ops"
+            call_value {
+              functionName: "Current Location of Prop"
+              args {
+                call_value {
+                  functionName: "Get Map Item (Prop)"
+                  args {
+                    string_value: "533694e33363312c13007b56"
+                  }
+                }
+              }
+            }
           }
           args {
-            int_value: 0
+            call_value {
+              functionName: "Specified Point (3D)"
+              args {
+                float_value: 0
+              }
+              args {
+                float_value: 0
+              }
+              args {
+                float_value: 0.18
+              }
+            }
           }
         }
       }
-      args {
-        int_value: 13
-      }
     }
     ops {
-      functionName: "Comparison (bool)"
+      functionName: "Move Region to Point"
       args {
         call_value {
-          functionName: "Get Story Variable (bool)"
-          args {
-            string_value: "51f15c62336331d02c00440e"
-          }
+          functionName: "Get Map Item (Region)"
           args {
-            string_value: "Employed"
+            string_value: "533694e33363312c13007b57"
           }
         }
       }
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Offset Point"
           args {
-            string_value: "IsOrIsNot"
+            call_value {
+              functionName: "Current Location of Prop"
+              args {
+                call_value {
+                  functionName: "Get Map Item (Prop)"
+                  args {
+                    string_value: "533694e33363312c13007b56"
+                  }
+                }
+              }
+            }
           }
           args {
-            int_value: 1
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "bool"
-          }
-          args {
-            int_value: 1
-          }
-        }
-      }
-    }
-  }
-  actions {
-    ops {
-      functionName: "Display Text at Screen Position"
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "TextPopupStyle"
-          }
-          args {
-            int_value: 1
-          }
-        }
-      }
-      args {
-        string_value: "You should finish your current job before meeting the contact here."
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 0
-      }
-      args {
-        float_value: 2
-      }
-      args {
-        float_value: 1
-      }
-      args {
-        float_value: 1
-      }
-    }
-  }
-  isActive: true
-  idRef {
-    id: "5333dd72336331480a00531e"
-  }
-  elseActions {
-  }
-  is_oneshot: false
-}
-triggers {
-  name: "Car East Move"
-  events {
-    ops {
-      functionName: "Get Map Item (Event)"
-      args {
-        string_value: "Car East Move"
-      }
-    }
-  }
-  conditions {
-    ops {
-      functionName: "Comparison (float)"
-      args {
-        call_value {
-          functionName: "Get Story Variable (float)"
-          args {
-            string_value: "51f15c62336331d02c00440e"
-          }
-          args {
-            string_value: "Taxi_Z_Movement"
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "Comparison Ops"
-          }
-          args {
-            int_value: 4
-          }
-        }
-      }
-      args {
-        float_value: 30
-      }
-    }
-  }
-  actions {
-    ops {
-      functionName: "Move Prop"
-      args {
-        call_value {
-          functionName: "Get Map Item (Prop)"
-          args {
-            string_value: "533694e33363312c13007b56"
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Offset Point"
-          args {
-            call_value {
-              functionName: "Current Location of Prop"
-              args {
-                call_value {
-                  functionName: "Get Map Item (Prop)"
-                  args {
-                    string_value: "533694e33363312c13007b56"
-                  }
-                }
-              }
-            }
-          }
-          args {
-            call_value {
-              functionName: "Specified Point (3D)"
-              args {
-                float_value: 0
-              }
-              args {
-                float_value: 0
-              }
-              args {
-                float_value: 0.18
-              }
-            }
-          }
-        }
-      }
-    }
-    ops {
-      functionName: "Move Region to Point"
-      args {
-        call_value {
-          functionName: "Get Map Item (Region)"
-          args {
-            string_value: "533694e33363312c13007b57"
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Offset Point"
-          args {
-            call_value {
-              functionName: "Current Location of Prop"
-              args {
-                call_value {
-                  functionName: "Get Map Item (Prop)"
-                  args {
-                    string_value: "533694e33363312c13007b56"
-                  }
-                }
-              }
-            }
-          }
-          args {
-            call_value {
-              functionName: "Specified Point (3D)"
-              args {
-                float_value: 0
-              }
-              args {
-                float_value: 0
-              }
-              args {
-                float_value: 3
-              }
-            }
+            call_value {
+              functionName: "Specified Point (3D)"
+              args {
+                float_value: 0
+              }
+              args {
+                float_value: 0
+              }
+              args {
+                float_value: 3
+              }
+            }
           }
         }
       }
@@ -15267,23 +15168,15 @@ triggers {
   is_oneshot: true
 }
 triggers {
-  name: "PhoneAndy"
+  name: "graceless logout"
   events {
     ops {
-      functionName: "On Item Interaction"
-      args {
-        call_value {
-          functionName: "Get Map Item (InteractableObject)"
-          args {
-            string_value: "399992e0336331f41c0061b6"
-          }
-        }
-      }
+      functionName: "On Map Start"
     }
   }
   conditions {
     ops {
-      functionName: "Comparison (bool)"
+      functionName: "Invert Bool"
       args {
         call_value {
           functionName: "Get Story Variable (bool)"
@@ -15291,18 +15184,23 @@ triggers {
             string_value: "51f15c62336331d02c00440e"
           }
           args {
-            string_value: "Employed"
+            string_value: "Matrix-LogOffGraceful"
           }
         }
       }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Set Variable (bool)"
       args {
         call_value {
-          functionName: "Get Preset Value (int)"
+          functionName: "Get Story Variable (bool)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "51f15c62336331d02c00440e"
           }
           args {
-            int_value: 1
+            string_value: "Matrix-LogOffGraceful"
           }
         }
       }
@@ -15313,176 +15211,50 @@ triggers {
             string_value: "bool"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
     }
     ops {
-      functionName: "Comparison (int)"
+      functionName: "Cause Damage"
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Specific Actor"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            call_value {
+              functionName: "Get Map Item (Player)"
+              args {
+                int_value: 0
+              }
+            }
           }
           args {
-            string_value: "StoryStep"
           }
         }
       }
+      args {
+        int_value: 5
+      }
       args {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "Comparison Ops"
+            string_value: "HPOrAP"
           }
           args {
-            int_value: 0
+            int_value: 1
           }
         }
       }
-      args {
-        int_value: 18
-      }
-    }
-  }
-  actions {
-    ops {
-      functionName: "Start Conversation Between Actors"
       args {
         call_value {
-          functionName: "Get Map Item (Conversation)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "58dd415030373600272b0dd5"
+            string_value: "WithOrWithout"
           }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Map Item (Player)"
           args {
-            int_value: 0
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Map Item (Actor)"
-          args {
-            string_value: "58dbf2c8303736104a89d1af"
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "WithOrWithout"
-          }
-          args {
-            int_value: 1
-          }
-        }
-      }
-    }
-  }
-  isActive: true
-  idRef {
-    id: "58dbecf4303736104a89d1a9"
-  }
-  elseActions {
-  }
-  is_oneshot: true
-}
-triggers {
-  name: "graceless logout"
-  events {
-    ops {
-      functionName: "On Map Start"
-    }
-  }
-  conditions {
-    ops {
-      functionName: "Invert Bool"
-      args {
-        call_value {
-          functionName: "Get Story Variable (bool)"
-          args {
-            string_value: "51f15c62336331d02c00440e"
-          }
-          args {
-            string_value: "Matrix-LogOffGraceful"
-          }
-        }
-      }
-    }
-  }
-  actions {
-    ops {
-      functionName: "Set Variable (bool)"
-      args {
-        call_value {
-          functionName: "Get Story Variable (bool)"
-          args {
-            string_value: "51f15c62336331d02c00440e"
-          }
-          args {
-            string_value: "Matrix-LogOffGraceful"
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "bool"
-          }
-          args {
-            int_value: 1
-          }
-        }
-      }
-    }
-    ops {
-      functionName: "Cause Damage"
-      args {
-        call_value {
-          functionName: "Specific Actor"
-          args {
-            call_value {
-              functionName: "Get Map Item (Player)"
-              args {
-                int_value: 0
-              }
-            }
-          }
-          args {
-          }
-        }
-      }
-      args {
-        int_value: 5
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "HPOrAP"
-          }
-          args {
-            int_value: 1
-          }
-        }
-      }
-      args {
-        call_value {
-          functionName: "Get Preset Value (int)"
-          args {
-            string_value: "WithOrWithout"
-          }
-          args {
-            int_value: 1
+            int_value: 1
           }
         }
       }
@@ -18093,6 +17865,151 @@ triggers {
   }
   is_oneshot: false
 }
+triggers {
+  name: "Runs_Vigor"
+  events {
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Fixer"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Vigor"
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Add To Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        int_value: 1
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cf9cb7b39663998390060e7"
+  }
+  elseActions {
+  }
+  is_oneshot: true
+}
+triggers {
+  name: "Transition-ClubPenumbra2"
+  events {
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 4
+          }
+        }
+      }
+      args {
+        int_value: 2
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Open Scene"
+      args {
+        call_value {
+          functionName: "Get Map Item (Scene)"
+          args {
+            string_value: "club penumbra"
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5d042c5d396639380d0017bf"
+  }
+  elseActions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c980ca336331141700094f"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+  }
+  is_oneshot: false
+}
 regions {
   name: "Vid_phone"
   position {
@@ -18188,10 +18105,10 @@ regions {
 regions {
   name: "Doc_Travel"
   position {
-    x: 8
-    y: -10
-    width: 8
-    height: 16
+    x: 3
+    y: -9
+    width: 14
+    height: 15
   }
   enabledAtStart: true
   is_camera_region: false
@@ -18759,7 +18676,7 @@ characters {
   }
   lod: 0
   character_instance {
-    prefab_name: "Extras/HumanMaleWorkingclassSweater"
+    prefab_name: "Seattle:Extras/HumanMaleWorkingclassSweater"
     character_sheet_id: "BaseCivilian"
     character_mod {
       stats {
@@ -18784,10 +18701,15 @@ characters {
       }
       specializations {
       }
+      vulnerabilities {
+      }
     }
     team_id: "Civilians"
     char_name: "Anonymous"
     pc_spawn_number: -1
+    portrait {
+      filename: "pc_humanmale_00b"
+    }
     karma: 6
   }
 }
@@ -20467,6 +20389,301 @@ characters {
     karma: 77
   }
 }
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -56
+    y: 0
+    z: 96
+  }
+  orientation: ORIENTATION_E
+  displayName: "Mike Score"
+  idRef {
+    id: "5d1e7e45396639fc27000a7e"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+      }
+      specializations {
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Outfit_SINless"
+    }
+    team_id: "Civilians"
+    char_name: "Mike Score"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    portrait {
+      filename: "pc_humanmale_00b"
+    }
+    karma: 6
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -56
+    y: 0
+    z: 97
+  }
+  orientation: ORIENTATION_S
+  displayName: "Informant Security"
+  idRef {
+    id: "5dfd4c4f3966397410002e92"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Wealthy/HumanMaleAutumn"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        magic: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        force: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
+      }
+      skills {
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
+      }
+      specializations {
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
+      }
+      archetypeName: "Non-Combatant"
+      attitude: AttitudeCautious
+      vulnerabilities {
+      }
+    }
+    team_id: "Civilians"
+    char_name: "Gouhin"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    hiring_type: HiringType_None
+    portrait {
+      filename: "pc_trollfemale_00b"
+    }
+    karma: 6
+    hiring_cost_override: 3000
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -54
+    y: 0
+    z: 95
+  }
+  orientation: ORIENTATION_E
+  GeneralTags: "Mike_Score"
+  displayName: "Informant Corp"
+  idRef {
+    id: "5dfd685d396639741000358a"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+      }
+      specializations {
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Outfit_SINless"
+    }
+    team_id: "Civilians"
+    char_name: "Mike Score"
+    GeneralTags: "Mike_Score"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    portrait {
+      filename: "pc_humanmale_00b"
+    }
+    karma: 6
+  }
+}
 variables {
   int_value: 0
   variableref_value {
diff --git a/SR-Unlimited/data/scenes/puyullup barrens.srt.txt b/SR-Unlimited/data/scenes/puyullup barrens.srt.txt
index 311932b..1bc779b 100644
--- a/SR-Unlimited/data/scenes/puyullup barrens.srt.txt	
+++ b/SR-Unlimited/data/scenes/puyullup barrens.srt.txt	
@@ -2369,6 +2369,34 @@ triggers {
     }
   }
   conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        int_value: 18
+      }
+    }
   }
   actions {
     ops {
@@ -2405,6 +2433,50 @@ triggers {
     id: "520aba84336331e815006a76"
   }
   elseActions {
+    ops {
+      functionName: "Trigger: Run Alternate Trigger"
+      args {
+        call_value {
+          functionName: "Get Map Item (Trigger)"
+          args {
+            string_value: "5d0436a6396639941d00206d"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WaitOrNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
   }
   is_oneshot: true
 }
@@ -18456,333 +18528,1479 @@ triggers {
   }
   is_oneshot: true
 }
-regions {
-  name: "Camera Bind"
-  position {
-    x: -92
-    y: -25
-    width: 145
-    height: 73
-  }
-  enabledAtStart: true
-  is_camera_region: true
-  idRef {
-    id: "51f82db03363316838000bdc"
-  }
-  highlight_color {
-    r: 0
-    g: 0
-    b: 0
-    a: 1
-  }
-  visible_at_start: false
-  is_closet: false
-  is_teleporter_region: false
-  directional_light_dir {
-    x: -0.5
-    y: -1
-    z: -0.75
-  }
-  directional_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+triggers {
+  name: "Runs_Vigor"
+  events {
   }
-  ambient_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Fixer"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Vigor"
+      }
+    }
   }
-  ambience_template: "downtown-night"
-  combat_music: "Seattle-Set5-Combat"
-  default_music: "Seattle-Bar04"
-  loop_combat_music: true
-  loop_default_music: true
-  no_fow_in_region: false
-}
-regions {
-  name: "Hub_Trigger"
-  position {
-    x: -55
-    y: -12
-    width: 2
-    height: 3
+  actions {
+    ops {
+      functionName: "Add To Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        int_value: 1
+      }
+    }
   }
-  enabledAtStart: true
-  is_camera_region: false
+  isActive: true
   idRef {
-    id: "51f8b21d3363316819000266"
-  }
-  highlight_color {
-    r: 0
-    g: 0
-    b: 0
-    a: 1
+    id: "5cf9cb7b39663998390060e7"
   }
-  visible_at_start: false
-  is_closet: false
-  is_teleporter_region: false
-  directional_light_dir {
-    x: -0.5
-    y: -1
-    z: -0.75
-  }
-  directional_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
-  }
-  ambient_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+  elseActions {
   }
-  ambience_template: ""
-  combat_music: ""
-  default_music: ""
-  loop_combat_music: true
-  loop_default_music: false
-  no_fow_in_region: false
+  is_oneshot: true
 }
-regions {
-  name: "Ambush_Trigger(1)"
-  position {
-    x: -40
-    y: -5
-    width: -16
-    height: 13
-  }
-  enabledAtStart: true
-  is_camera_region: false
-  idRef {
-    id: "51fa74bc3363319c51001663"
-  }
-  highlight_color {
-    r: 0
-    g: 0
-    b: 0
-    a: 1
-  }
-  visible_at_start: false
-  is_closet: false
-  is_teleporter_region: false
-  directional_light_dir {
-    x: -0.5
-    y: -1
-    z: -0.75
-  }
-  directional_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
-  }
-  ambient_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+triggers {
+  name: "Story_18to19_Call_From_Vigor"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "520abb51336331e815006a7b"
+          }
+        }
+      }
+    }
   }
-  ambience_template: ""
-  combat_music: ""
-  default_music: ""
-  loop_combat_music: true
-  loop_default_music: false
-  no_fow_in_region: false
-}
-regions {
-  name: "Car Collsion East"
-  position {
-    x: -172
-    y: 80
-    width: 2
-    height: 1
-  }
-  enabledAtStart: true
-  is_camera_region: false
-  idRef {
-    id: "533699cd3363317819003a68"
-  }
-  highlight_color {
-    r: 0
-    g: 0
-    b: 0
-    a: 1
-  }
-  visible_at_start: false
-  is_closet: false
-  is_teleporter_region: false
-  directional_light_dir {
-    x: -0.5
-    y: -1
-    z: -0.75
-  }
-  directional_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
-  }
-  ambient_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 18
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 2
+      }
+    }
   }
-  ambience_template: ""
-  combat_music: ""
-  default_music: ""
-  loop_combat_music: true
-  loop_default_music: false
-  no_fow_in_region: false
-}
-regions {
-  name: "Car Collsion South"
-  position {
-    x: -170
-    y: 75
-    width: 1
-    height: 2
+  actions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c980163363311417000944"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
   }
-  enabledAtStart: true
-  is_camera_region: false
+  isActive: true
   idRef {
-    id: "533699cd3363317819003a69"
-  }
-  highlight_color {
-    r: 0
-    g: 0
-    b: 0
-    a: 1
-  }
-  visible_at_start: false
-  is_closet: false
-  is_teleporter_region: false
-  directional_light_dir {
-    x: -0.5
-    y: -1
-    z: -0.75
-  }
-  directional_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+    id: "5cf9c93d396639983900603c"
   }
-  ambient_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+  elseActions {
   }
-  ambience_template: ""
-  combat_music: ""
-  default_music: ""
-  loop_combat_music: true
-  loop_default_music: false
-  no_fow_in_region: false
+  is_oneshot: true
 }
-patrolRoutes {
-  name: "Patrol Route1"
-  pathType: 0
-  nodes {
-    position {
-      x: 7
-      z: 28
+triggers {
+  name: "Mod_Safehouse2"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "520ac10c336331e815006b11"
+          }
+        }
+      }
     }
-    index: 0
   }
-  nodes {
-    position {
-      x: 7
-      z: 5
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 4
+          }
+        }
+      }
+      args {
+        int_value: 2
+      }
     }
-    index: 1
   }
-  nodes {
-    position {
-      x: -49
-      z: 4
+  actions {
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f169b733633124330018bf"
+          }
+          args {
+            string_value: "Travel"
+          }
+        }
+      }
+      args {
+        int_value: 5
+      }
     }
-    index: 2
-  }
-  nodes {
-    position {
-      x: -54
+    ops {
+      functionName: "Open Scene"
+      args {
+        call_value {
+          functionName: "Get Map Item (Scene)"
+          args {
+            string_value: "Small House"
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5d0436a6396639941d00206d"
+  }
+  elseActions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c980163363311417000944"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
+  is_oneshot: true
+}
+triggers {
+  name: "Enter_Step_25"
+  events {
+    ops {
+      functionName: "On Map Start"
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Current_Run-Step"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 4
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 25
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Activate Actor Spawner By Tag"
+      args {
+        call_value {
+          functionName: "Get Map Item (SenseTagList)"
+          args {
+            string_value: "JohnsonStep25"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Enable/Disable Trigger"
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "EnableOrDisable"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Trigger)"
+          args {
+            string_value: "5e0280c73966394c110009d6"
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5e0280523966394c110009d4"
+  }
+  elseActions {
+  }
+  is_oneshot: true
+}
+triggers {
+  name: "StoryStep_25_Conversation"
+  events {
+    ops {
+      functionName: "On Actor Awareness of Another Actor"
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Compare Actor Team"
+      args {
+        call_value {
+          functionName: "Triggering Target Actor"
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (string)"
+          args {
+            string_value: "FactionList"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (SceneDimension)"
+          args {
+            string_value: "Default"
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Comparison (Actor)"
+      args {
+        call_value {
+          functionName: "Triggering Actor"
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "5e027a853966394c110009d1"
+          }
+        }
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5e028a143966394c110009d7"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "5e027a853966394c110009d1"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
+  isActive: false
+  idRef {
+    id: "5e0280c73966394c110009d6"
+  }
+  elseActions {
+  }
+  is_oneshot: true
+}
+regions {
+  name: "Camera Bind"
+  position {
+    x: -92
+    y: -25
+    width: 145
+    height: 73
+  }
+  enabledAtStart: true
+  is_camera_region: true
+  idRef {
+    id: "51f82db03363316838000bdc"
+  }
+  highlight_color {
+    r: 0
+    g: 0
+    b: 0
+    a: 1
+  }
+  visible_at_start: false
+  is_closet: false
+  is_teleporter_region: false
+  directional_light_dir {
+    x: -0.5
+    y: -1
+    z: -0.75
+  }
+  directional_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambient_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambience_template: "downtown-night"
+  combat_music: "Seattle-Set5-Combat"
+  default_music: "Seattle-Bar04"
+  loop_combat_music: true
+  loop_default_music: true
+  no_fow_in_region: false
+}
+regions {
+  name: "Hub_Trigger"
+  position {
+    x: -55
+    y: -12
+    width: 2
+    height: 3
+  }
+  enabledAtStart: true
+  is_camera_region: false
+  idRef {
+    id: "51f8b21d3363316819000266"
+  }
+  highlight_color {
+    r: 0
+    g: 0
+    b: 0
+    a: 1
+  }
+  visible_at_start: false
+  is_closet: false
+  is_teleporter_region: false
+  directional_light_dir {
+    x: -0.5
+    y: -1
+    z: -0.75
+  }
+  directional_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambient_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambience_template: ""
+  combat_music: ""
+  default_music: ""
+  loop_combat_music: true
+  loop_default_music: false
+  no_fow_in_region: false
+}
+regions {
+  name: "Ambush_Trigger(1)"
+  position {
+    x: -40
+    y: -5
+    width: -16
+    height: 13
+  }
+  enabledAtStart: true
+  is_camera_region: false
+  idRef {
+    id: "51fa74bc3363319c51001663"
+  }
+  highlight_color {
+    r: 0
+    g: 0
+    b: 0
+    a: 1
+  }
+  visible_at_start: false
+  is_closet: false
+  is_teleporter_region: false
+  directional_light_dir {
+    x: -0.5
+    y: -1
+    z: -0.75
+  }
+  directional_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambient_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambience_template: ""
+  combat_music: ""
+  default_music: ""
+  loop_combat_music: true
+  loop_default_music: false
+  no_fow_in_region: false
+}
+regions {
+  name: "Car Collsion East"
+  position {
+    x: -172
+    y: 80
+    width: 2
+    height: 1
+  }
+  enabledAtStart: true
+  is_camera_region: false
+  idRef {
+    id: "533699cd3363317819003a68"
+  }
+  highlight_color {
+    r: 0
+    g: 0
+    b: 0
+    a: 1
+  }
+  visible_at_start: false
+  is_closet: false
+  is_teleporter_region: false
+  directional_light_dir {
+    x: -0.5
+    y: -1
+    z: -0.75
+  }
+  directional_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambient_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambience_template: ""
+  combat_music: ""
+  default_music: ""
+  loop_combat_music: true
+  loop_default_music: false
+  no_fow_in_region: false
+}
+regions {
+  name: "Car Collsion South"
+  position {
+    x: -170
+    y: 75
+    width: 1
+    height: 2
+  }
+  enabledAtStart: true
+  is_camera_region: false
+  idRef {
+    id: "533699cd3363317819003a69"
+  }
+  highlight_color {
+    r: 0
+    g: 0
+    b: 0
+    a: 1
+  }
+  visible_at_start: false
+  is_closet: false
+  is_teleporter_region: false
+  directional_light_dir {
+    x: -0.5
+    y: -1
+    z: -0.75
+  }
+  directional_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambient_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambience_template: ""
+  combat_music: ""
+  default_music: ""
+  loop_combat_music: true
+  loop_default_music: false
+  no_fow_in_region: false
+}
+patrolRoutes {
+  name: "Patrol Route1"
+  pathType: 0
+  nodes {
+    position {
+      x: 7
+      z: 28
+    }
+    index: 0
+  }
+  nodes {
+    position {
+      x: 7
+      z: 5
+    }
+    index: 1
+  }
+  nodes {
+    position {
+      x: -49
+      z: 4
+    }
+    index: 2
+  }
+  nodes {
+    position {
+      x: -54
       z: 27
     }
-    index: 3
+    index: 3
+  }
+  nodes {
+    position {
+      x: -19
+      z: 35
+    }
+    index: 4
+  }
+  nodes {
+    position {
+      x: 7
+      z: 28
+    }
+    index: 5
+  }
+  can_move_beyond_node: false
+  idRef {
+    id: "520d1efa336331843d001ad5"
+  }
+}
+characters {
+  name: "system_spawner_playerSpawner"
+  gridPoint {
+    x: -14
+    y: 0
+    z: 40
+  }
+  orientation: ORIENTATION_W
+  GeneralTags: "isPlayer"
+  GeneralTags: "way_ajp_Private Hanger"
+  GeneralTags: "way_ajs_Eric"
+  idRef {
+    id: "58d2a5223037368247af1000"
+  }
+  lod: 0
+  character_instance {
+    character_mod {
+      archetypeName: "Player"
+    }
+    team_id: "Shadowrunners"
+    char_name: "New Actor"
+    GeneralTags: "isPlayer"
+    GeneralTags: "way_ajp_Private Hanger"
+    GeneralTags: "way_ajs_Eric"
+    enabled_at_start: true
+    pc_spawn_number: 0
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: 7
+    y: 0
+    z: 28
+  }
+  orientation: ORIENTATION_W
+  displayName: "Roamer"
+  idRef {
+    id: "51f2962a336331d02d001c01"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Wealthy/HumanMaleTurquoisePonyJacket"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 24
+        discipline: 0
+        awareness: 24
+        perception: 0
+        authority: 0
+        protect_tether_range: 5
+        move_speed: -6
+      }
+      skills {
+      }
+      specializations {
+      }
+    }
+    team_id: "Civilians"
+    char_name: "New Actor"
+    patrolRoute: "Patrol Route1"
+    enabled_at_start: true
+    pc_spawn_number: -1
+    karma: 6
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: 14
+    y: 0
+    z: -4
+  }
+  orientation: ORIENTATION_E
+  GeneralTags: "way_ajp_Greely"
+  displayName: "Greely"
+  idRef {
+    id: "51f296c0336331d02d001c08"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    conversationPoint {
+      conversationID: "51fd7ea4336331605f0087cb"
+      turnToFace: true
+    }
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Standard/DwarfMaleBiker"
+    character_sheet_id: "BaseCivilian"
+    equipment_sheet_id: "SSC Outfits 6"
+    equipment_sheet_id: "Med Consumable"
+    equipment_sheet_id: "Med Grenade"
+    equipment_sheet_id: "Med Rigger"
+    equipment_sheet_id: "Med Weapon"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 24
+        discipline: 0
+        awareness: 24
+        perception: 0
+        authority: 0
+        protect_tether_range: 5
+        move_speed: -6
+      }
+      skills {
+      }
+      specializations {
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Outfit_Corporate Salaryman"
+    }
+    equipment {
+      prefab_name: "Berlin_Tb 2 Shuriken"
+    }
+    equipment {
+      prefab_name: "Berlin_Tb 1 Knife"
+    }
+    team_id: "Civilians"
+    char_name: "Greely"
+    GeneralTags: "way_ajp_Greely"
+    pc_spawn_number: -1
+    portrait {
+      filename: "backer_dwarfmale_alexanderfalk"
+    }
+    karma: 6
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -15
+    y: 0
+    z: 40
+  }
+  orientation: ORIENTATION_W
+  displayName: "decker johnson"
+  idRef {
+    id: "51f94a9d336331584a0041c8"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    conversationPoint {
+      conversationID: "51f94b80336331584a0041cf"
+      turnToFace: true
+    }
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Extras/HumanFemaleJacketGoggles"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 3
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 24
+        discipline: 0
+        awareness: 24
+        perception: 0
+        authority: 0
+        protect_tether_range: 5
+        move_speed: 6
+      }
+      skills {
+      }
+      specializations {
+      }
+      archetypeName: "Guard - Seek And Destroy"
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Pi 1 Fichetti Security 500"
+    }
+    team_id: "Shadowrunners"
+    char_name: "Ray Null"
+    enabled_at_start: false
+    pc_spawn_number: -1
+    portrait {
+      filename: "backer_humanfemale_grahamwilliams_tsilonsiereht"
+    }
+    karma: 15
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -111
+    y: 0
+    z: 68
+  }
+  orientation: ORIENTATION_S
+  displayName: "Lonestar1"
+  idRef {
+    id: "51f99e2c3363319c3e00157a"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Lonestar/HumanMaleLonestarSecurityGuard"
+    character_sheet_id: "BaseCivilian"
+    equipment_sheet_id: "Lonestar_Pistol_Low"
+    character_mod {
+      stats {
+        body: 1
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 24
+        discipline: 0
+        awareness: 24
+        perception: 0
+        authority: 0
+        protect_tether_range: 5
+        move_speed: 6
+      }
+      skills {
+        ranged_combat: 2
+      }
+      specializations {
+        pistol: 2
+      }
+      archetypeName: "Guard - Seek And Destroy"
+      vulnerabilities {
+      }
+    }
+    team_id: "LoneStar"
+    char_name: "Lonestar"
+    enabled_at_start: false
+    pc_spawn_number: -1
+    hiring_type: HiringType_None
+    portrait {
+      filename: "backer_humanmale_levieranburks"
+    }
+    karma: 14
+    hiring_cost_override: 1000
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -116
+    y: 0
+    z: 23
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "Taxi"
+  idRef {
+    id: "51f9c0743363319c3e00197d"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Story/Coroner"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 24
+        discipline: 0
+        awareness: 24
+        perception: 0
+        authority: 0
+        protect_tether_range: 5
+        move_speed: 6
+      }
+      skills {
+      }
+      specializations {
+      }
+    }
+    team_id: "Civilians"
+    char_name: "Taxi Driver"
+    GeneralTags: "Taxi"
+    pc_spawn_number: -1
+    portrait {
+      filename: "backer_humanmale_andresguillermoaguirre"
+    }
+    karma: 6
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -115
+    y: 0
+    z: 73
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "Frosty"
+  GeneralTags: "isFrosty"
+  idRef {
+    id: "520d1e0d336331640c005d80"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Story/LynneTelestrian"
+    character_sheet_id: "BaseCivilian"
+    equipment_sheet_id: "Merchant_Tech_Mid"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 24
+        discipline: 0
+        awareness: 24
+        perception: 0
+        authority: 0
+        protect_tether_range: 5
+        move_speed: 0
+      }
+      skills {
+      }
+      specializations {
+      }
+    }
+    team_id: "Civilians"
+    char_name: "Frosty"
+    GeneralTags: "Frosty"
+    GeneralTags: "isFrosty"
+    pc_spawn_number: -1
+    hiring_type: HiringType_None
+    portrait {
+      filename: "npc_elffemale_lynnetelestrian"
+    }
+    karma: 6
+    hiring_cost_override: 3000
   }
-  nodes {
-    position {
-      x: -19
-      z: 35
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -115
+    y: 0
+    z: 74
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "Eric"
+  GeneralTags: "isEric"
+  idRef {
+    id: "520d1e0f336331640c005d81"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Core/OrkMale"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        magic: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        force: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
+      }
+      specializations {
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
+      }
+      archetypeName: "Guard - Protect"
+      attitude: AttitudeAggressive
+    }
+    equipment {
+      prefab_name: "DeckerJacket"
+    }
+    team_id: "Civilians"
+    char_name: "Eric Gunderson"
+    GeneralTags: "Eric"
+    GeneralTags: "isEric"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Normal
+    hiring_type: HiringType_None
+    portrait {
+      filename: "Backer_OrkMale_EricMersmann"
+    }
+    portrait_code_override: "s3h3c4b0c0t0"
+    karma: 6
+    hiring_cost_override: 100
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -109
+    y: 0
+    z: 68
+  }
+  orientation: ORIENTATION_S
+  displayName: "VID"
+  idRef {
+    id: "39998c57336331902a001ad8"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Story/Harlequin"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 24
+        discipline: 0
+        awareness: 24
+        perception: 0
+        authority: 0
+        protect_tether_range: 5
+        move_speed: 6
+      }
+      skills {
+      }
+      specializations {
+      }
+    }
+    team_id: "Civilians"
+    char_name: "Public Vid-Phone"
+    pc_spawn_number: -1
+    karma: 6
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -111
+    y: 0
+    z: 64
+  }
+  orientation: ORIENTATION_S
+  idRef {
+    id: "5233d1b6336331dc0f004b19"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Story/RenrakuSamurai"
+    character_sheet_id: "Lvl6_Human_Samurai"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        magic: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        force: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
+      }
+      specializations {
+        pistol: 0
+        rifle: 0
+        shotgun: -5
+        smg: 5
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
+      }
+      archetypeName: "Guard - Seek And Destroy"
+      attitude: AttitudeAggressive
     }
-    index: 4
-  }
-  nodes {
-    position {
-      x: 7
-      z: 28
+    equipment {
+      prefab_name: "SMG 2 Colt TZ-110"
     }
-    index: 5
-  }
-  can_move_beyond_node: false
-  idRef {
-    id: "520d1efa336331843d001ad5"
+    equipment {
+      prefab_name: "Sword 2 Katana"
+    }
+    team_id: "Renraku"
+    char_name: "Renraku Samurai"
+    enabled_at_start: false
+    pc_spawn_number: -1
+    hiring_type: HiringType_None
+    cyberware_eyes: "Vision Magnification Eyes 2"
+    cyberware_body: "Dermal Plating Mk 2"
+    cyberware_left_arm: "Obvious Cyberarm 2"
+    cyberware_right_arm: "Obvious Cyberarm 2"
+    karma: 158
+    hiring_cost_override: 1000
   }
 }
 characters {
-  name: "system_spawner_playerSpawner"
+  name: "chars_icon_playerIcon"
   gridPoint {
-    x: -14
+    x: -108
     y: 0
-    z: 40
+    z: 67
   }
-  orientation: ORIENTATION_W
-  GeneralTags: "isPlayer"
-  GeneralTags: "way_ajp_Private Hanger"
-  GeneralTags: "way_ajs_Eric"
+  orientation: ORIENTATION_S
   idRef {
-    id: "58d2a5223037368247af1000"
+    id: "5233d11b336331d41f0048a5"
   }
   lod: 0
   character_instance {
+    prefab_name: "Homeless/DwarfMaleHomelessBald"
+    character_sheet_id: "BaseCivilian"
     character_mod {
-      archetypeName: "Player"
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 24
+        discipline: 0
+        awareness: 24
+        perception: 0
+        authority: 0
+        protect_tether_range: 5
+        move_speed: 6
+      }
+      skills {
+      }
+      specializations {
+      }
     }
-    team_id: "Shadowrunners"
-    char_name: "New Actor"
-    GeneralTags: "isPlayer"
-    GeneralTags: "way_ajp_Private Hanger"
-    GeneralTags: "way_ajs_Eric"
-    enabled_at_start: true
-    pc_spawn_number: 0
+    team_id: "Civilians"
+    char_name: "GenericNPC1"
+    enabled_at_start: false
+    pc_spawn_number: -1
+    hiring_type: HiringType_None
+    portrait {
+      filename: "pc_humanmale_04_brawler"
+    }
+    karma: 6
+    hiring_cost_override: 3000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: 7
+    x: -110
     y: 0
-    z: 28
+    z: 63
   }
-  orientation: ORIENTATION_W
-  displayName: "Roamer"
+  orientation: ORIENTATION_S
   idRef {
-    id: "51f2962a336331d02d001c01"
+    id: "525234673363315c1e007335"
   }
   lod: 0
   character_instance {
-    prefab_name: "Wealthy/HumanMaleTurquoisePonyJacket"
+    prefab_name: "Seattle:Scientist/HumanMaleScientistCoat"
     character_sheet_id: "BaseCivilian"
     character_mod {
       stats {
-        body: 0
+        body: 19
         quickness: 0
         strength: 0
         charisma: 0
@@ -18797,51 +20015,47 @@ characters {
         perception: 0
         authority: 0
         protect_tether_range: 5
-        move_speed: -6
+        move_speed: 6
       }
       skills {
+        biotech: 4
       }
       specializations {
       }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "DocWagonBasic"
     }
     team_id: "Civilians"
-    char_name: "New Actor"
-    patrolRoute: "Patrol Route1"
-    enabled_at_start: true
+    char_name: "DocWagon Paramedic"
+    enabled_at_start: false
     pc_spawn_number: -1
-    karma: 6
+    ai_ignores: true
+    hiring_type: HiringType_None
+    portrait {
+      filename: "generic_humanmale_scientist01"
+    }
+    karma: 225
+    hiring_cost_override: 1000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: 14
+    x: -111
     y: 0
-    z: -4
+    z: 66
   }
-  orientation: ORIENTATION_E
-  GeneralTags: "way_ajp_Greely"
-  displayName: "Greely"
+  orientation: ORIENTATION_S
   idRef {
-    id: "51f296c0336331d02d001c08"
-  }
-  interactionRoot {
-    isEnabled: true
-    interactionRadius: 1
-    conversationPoint {
-      conversationID: "51fd7ea4336331605f0087cb"
-      turnToFace: true
-    }
+    id: "5252346c3363315c1e007336"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Standard/DwarfMaleBiker"
+    prefab_name: "Seattle:Objects/InvisibleActor"
     character_sheet_id: "BaseCivilian"
-    equipment_sheet_id: "SSC Outfits 6"
-    equipment_sheet_id: "Med Consumable"
-    equipment_sheet_id: "Med Grenade"
-    equipment_sheet_id: "Med Rigger"
-    equipment_sheet_id: "Med Weapon"
     character_mod {
       stats {
         body: 0
@@ -18852,103 +20066,200 @@ characters {
         willpower: 0
         essence: 0
         hp: 0
-        ap: 0
+        ap: -2
         morale: 24
         discipline: 0
         awareness: 24
         perception: 0
         authority: 0
         protect_tether_range: 5
-        move_speed: -6
+        move_speed: 6
       }
       skills {
       }
       specializations {
       }
+      archetypeName: "Player"
       vulnerabilities {
       }
     }
-    equipment {
-      prefab_name: "Outfit_Corporate Salaryman"
-    }
-    equipment {
-      prefab_name: "Berlin_Tb 2 Shuriken"
-    }
-    equipment {
-      prefab_name: "Berlin_Tb 1 Knife"
-    }
     team_id: "Civilians"
-    char_name: "Greely"
-    GeneralTags: "way_ajp_Greely"
+    char_name: "Invisible Runner"
+    pc_spawn_number: -1
+    ai_ignores: true
+    uninjurable: true
+    unkillable: true
+    hiring_type: HiringType_None
+    karma: 6
+    hiring_cost_override: 3000
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -114
+    y: 0
+    z: 74
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "Ricky"
+  idRef {
+    id: "5252339c336331541000441a"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Core/DwarfMale"
+    character_sheet_id: "runner Ricky"
+    equipment_sheet_id: "runner Ricky"
+    character_mod {
+      archetypeName: "Guard - Protect"
+      attitude: AttitudeAggressive
+      vulnerabilities {
+      }
+    }
+    team_id: "Shadowrunners"
+    char_name: "Ricky"
+    GeneralTags: "Ricky"
+    enabled_at_start: false
     pc_spawn_number: -1
+    hiring_type: HiringType_None
+    cyberware_jack: "Datajack"
     portrait {
-      filename: "backer_dwarfmale_alexanderfalk"
+      filename: "pc_dwarfmale_06_blackbeard"
     }
-    karma: 6
+    portrait_code_override: "s1h3b4"
+    karma: 51
+    hiring_cost_override: 1075
+    hiring_tag: "Shaman"
+    is_prop_character: false
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -15
+    x: -114
     y: 0
-    z: 40
+    z: 73
   }
-  orientation: ORIENTATION_W
-  displayName: "decker johnson"
+  orientation: ORIENTATION_S
+  GeneralTags: "Verum"
   idRef {
-    id: "51f94a9d336331584a0041c8"
+    id: "5252339f336331541000441b"
   }
-  interactionRoot {
-    isEnabled: true
-    interactionRadius: 1
-    conversationPoint {
-      conversationID: "51f94b80336331584a0041cf"
-      turnToFace: true
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Security/HumanMaleSecurity"
+    character_sheet_id: "Runner Verum Julos"
+    equipment_sheet_id: "runner Verum Julos"
+    character_mod {
+      archetypeName: "Player"
+      attitude: AttitudeAggressive
+      vulnerabilities {
+      }
+    }
+    team_id: "Shadowrunners"
+    char_name: "Verum Julos"
+    GeneralTags: "Verum"
+    enabled_at_start: false
+    pc_spawn_number: -1
+    hiring_type: HiringType_None
+    cyberware_eyes: "Vision Magnification Eyes"
+    cyberware_body: "Dermal Plating Mk 1"
+    cyberware_right_arm: "Obvious Cyberarm"
+    portrait {
+      filename: "backerpc_humanmale_rc_greymitigator"
     }
+    karma: 78
+    hiring_cost_override: 1000
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -109
+    y: 0
+    z: 65
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "Back-Up"
+  displayName: "Lonestar Swat"
+  idRef {
+    id: "526402143363311c21006779"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Extras/HumanFemaleJacketGoggles"
-    character_sheet_id: "BaseCivilian"
+    prefab_name: "Lonestar/HumanMaleLonestarGuard"
+    character_sheet_id: "Lonestar_Lv2_Captain"
+    equipment_sheet_id: "Lonestar_Captain_Low"
     character_mod {
       stats {
-        body: 3
+        body: 1
         quickness: 0
         strength: 0
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
+        magic: 0
         hp: 0
         ap: 0
-        morale: 24
+        armor: 0
+        force: 0
+        morale: 0
         discipline: 0
-        awareness: 24
+        awareness: 0
         perception: 0
         authority: 0
-        protect_tether_range: 5
-        move_speed: 6
+        protect_tether_range: 0
+        move_speed: 0
       }
       skills {
+        ranged_combat: 2
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 2
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
       }
       specializations {
+        pistol: 0
+        rifle: -1
+        shotgun: 0
+        smg: 0
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
       }
       archetypeName: "Guard - Seek And Destroy"
+      attitude: AttitudeAggressive
       vulnerabilities {
       }
     }
-    equipment {
-      prefab_name: "Pi 1 Fichetti Security 500"
-    }
-    team_id: "Shadowrunners"
-    char_name: "Ray Null"
+    team_id: "LoneStar"
+    char_name: "Lonestar"
+    GeneralTags: "Back-Up"
     enabled_at_start: false
     pc_spawn_number: -1
+    hiring_type: HiringType_None
     portrait {
-      filename: "backer_humanfemale_grahamwilliams_tsilonsiereht"
+      filename: "generic_humanmale_lonestarguard01"
     }
-    karma: 15
+    karma: 67
+    hiring_cost_override: 1000
   }
 }
 characters {
@@ -18956,18 +20267,17 @@ characters {
   gridPoint {
     x: -111
     y: 0
-    z: 68
+    z: 69
   }
   orientation: ORIENTATION_S
-  displayName: "Lonestar1"
+  displayName: "Swat 1"
   idRef {
-    id: "51f99e2c3363319c3e00157a"
+    id: "5263feab336331ec28002615"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Lonestar/HumanMaleLonestarSecurityGuard"
-    character_sheet_id: "BaseCivilian"
-    equipment_sheet_id: "Lonestar_Pistol_Low"
+    prefab_name: "Lonestar/HumanMaleLonestarGuard"
+    character_sheet_id: "Lonestar_Lv2_Captain"
     character_mod {
       stats {
         body: 1
@@ -18977,163 +20287,264 @@ characters {
         intelligence: 0
         willpower: 0
         essence: 0
+        magic: 0
         hp: 0
         ap: 0
-        morale: 24
+        armor: 0
+        force: 0
+        morale: 0
         discipline: 0
-        awareness: 24
+        awareness: 0
         perception: 0
         authority: 0
-        protect_tether_range: 5
-        move_speed: 6
+        protect_tether_range: 0
+        move_speed: 0
       }
       skills {
         ranged_combat: 2
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 2
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
       }
       specializations {
-        pistol: 2
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
       }
       archetypeName: "Guard - Seek And Destroy"
-      vulnerabilities {
-      }
+      attitude: AttitudeAggressive
+    }
+    equipment {
+      prefab_name: "Pi 2 Ares Predator"
     }
     team_id: "LoneStar"
     char_name: "Lonestar"
+    GeneralTags: "Back-Up"
     enabled_at_start: false
     pc_spawn_number: -1
     hiring_type: HiringType_None
     portrait {
-      filename: "backer_humanmale_levieranburks"
+      filename: "generic_humanmale_lonestarguard01"
     }
-    karma: 14
+    karma: 68
     hiring_cost_override: 1000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -116
+    x: -111
     y: 0
-    z: 23
+    z: 70
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Taxi"
+  displayName: "Swat 2"
   idRef {
-    id: "51f9c0743363319c3e00197d"
+    id: "5263feae336331ec28002616"
   }
   lod: 0
   character_instance {
-    prefab_name: "Story/Coroner"
-    character_sheet_id: "BaseCivilian"
+    prefab_name: "Lonestar/HumanMaleLonestarGuard"
+    character_sheet_id: "Lonestar_Lv2_Captain"
     character_mod {
       stats {
-        body: 0
+        body: 1
         quickness: 0
         strength: 0
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
+        magic: 0
         hp: 0
         ap: 0
-        morale: 24
+        armor: 0
+        force: 0
+        morale: 0
         discipline: 0
-        awareness: 24
+        awareness: 0
         perception: 0
         authority: 0
-        protect_tether_range: 5
-        move_speed: 6
+        protect_tether_range: 0
+        move_speed: 0
       }
       skills {
+        ranged_combat: 2
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 2
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
       }
       specializations {
+        pistol: 0
+        rifle: -1
+        shotgun: 2
+        smg: 0
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
       }
+      archetypeName: "Guard - Seek And Destroy"
+      attitude: AttitudeAggressive
     }
-    team_id: "Civilians"
-    char_name: "Taxi Driver"
-    GeneralTags: "Taxi"
+    equipment {
+      prefab_name: "Sh 1 Benelli Raffaello"
+    }
+    team_id: "LoneStar"
+    char_name: "Lonestar"
+    GeneralTags: "Back-Up"
+    enabled_at_start: false
     pc_spawn_number: -1
+    hiring_type: HiringType_None
     portrait {
-      filename: "backer_humanmale_andresguillermoaguirre"
+      filename: "generic_humanmale_lonestarguard01"
     }
-    karma: 6
+    karma: 70
+    hiring_cost_override: 1000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -115
+    x: -111
     y: 0
-    z: 73
+    z: 71
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Frosty"
-  GeneralTags: "isFrosty"
+  displayName: "Swat 3"
   idRef {
-    id: "520d1e0d336331640c005d80"
+    id: "5263feb0336331ec28002617"
   }
   lod: 0
   character_instance {
-    prefab_name: "Story/LynneTelestrian"
-    character_sheet_id: "BaseCivilian"
-    equipment_sheet_id: "Merchant_Tech_Mid"
+    prefab_name: "Lonestar/HumanMaleLonestarGuard"
+    character_sheet_id: "Lonestar_Lv2_Captain"
     character_mod {
       stats {
-        body: 0
+        body: 1
         quickness: 0
         strength: 0
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
+        magic: 0
         hp: 0
         ap: 0
-        morale: 24
+        armor: 0
+        force: 0
+        morale: 0
         discipline: 0
-        awareness: 24
+        awareness: 0
         perception: 0
         authority: 0
-        protect_tether_range: 5
+        protect_tether_range: 0
         move_speed: 0
       }
       skills {
+        ranged_combat: 2
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 2
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
       }
       specializations {
+        pistol: 0
+        rifle: -1
+        shotgun: 0
+        smg: 2
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
       }
+      archetypeName: "Guard - Seek And Destroy"
+      attitude: AttitudeAggressive
     }
-    team_id: "Civilians"
-    char_name: "Frosty"
-    GeneralTags: "Frosty"
-    GeneralTags: "isFrosty"
+    equipment {
+      prefab_name: "SMG 1 Beretta Model 70"
+    }
+    team_id: "LoneStar"
+    char_name: "Lonestar"
+    GeneralTags: "Back-Up"
+    enabled_at_start: false
     pc_spawn_number: -1
     hiring_type: HiringType_None
     portrait {
-      filename: "npc_elffemale_lynnetelestrian"
+      filename: "generic_humanmale_lonestarguard01"
     }
-    karma: 6
-    hiring_cost_override: 3000
+    karma: 70
+    hiring_cost_override: 1000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -115
+    x: -111
     y: 0
-    z: 74
+    z: 72
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Eric"
-  GeneralTags: "isEric"
+  displayName: "Swat 4"
   idRef {
-    id: "520d1e0f336331640c005d81"
+    id: "5263feb2336331ec28002618"
   }
   lod: 0
   character_instance {
-    prefab_name: "Core/OrkMale"
-    character_sheet_id: "BaseCivilian"
+    prefab_name: "Lonestar/HumanMaleLonestarGuard"
+    character_sheet_id: "Lonestar_Lv2_Captain"
     character_mod {
       stats {
-        body: 0
+        body: 1
         quickness: 0
         strength: 0
         charisma: 0
@@ -19154,7 +20565,7 @@ characters {
         move_speed: 0
       }
       skills {
-        ranged_combat: 0
+        ranged_combat: 2
         close_combat: 0
         throwing_weapons: 0
         spellcasting: 0
@@ -19163,7 +20574,7 @@ characters {
         spirit_summoning: 0
         drone_control: 0
         biotech: 0
-        dodge: 0
+        dodge: 2
         etiquette_corporate: 0
         etiquette_security: 0
         etiquette_gang: 0
@@ -19175,7 +20586,7 @@ characters {
       }
       specializations {
         pistol: 0
-        rifle: 0
+        rifle: 1
         shotgun: 0
         smg: 0
         edged: 0
@@ -19184,71 +20595,23 @@ characters {
         esp_control: 0
         drone_combat: 0
       }
-      archetypeName: "Guard - Protect"
+      archetypeName: "Guard - Seek And Destroy"
       attitude: AttitudeAggressive
     }
     equipment {
-      prefab_name: "DeckerJacket"
+      prefab_name: "AR 1 Semopal vz88v"
     }
-    team_id: "Civilians"
-    char_name: "Eric Gunderson"
-    GeneralTags: "Eric"
-    GeneralTags: "isEric"
+    team_id: "LoneStar"
+    char_name: "Lonestar"
+    GeneralTags: "Back-Up"
+    enabled_at_start: false
     pc_spawn_number: -1
-    spawn_type: SpawnType_Normal
     hiring_type: HiringType_None
     portrait {
-      filename: "Backer_OrkMale_EricMersmann"
-    }
-    portrait_code_override: "s3h3c4b0c0t0"
-    karma: 6
-    hiring_cost_override: 100
-  }
-}
-characters {
-  name: "chars_icon_playerIcon"
-  gridPoint {
-    x: -109
-    y: 0
-    z: 68
-  }
-  orientation: ORIENTATION_S
-  displayName: "VID"
-  idRef {
-    id: "39998c57336331902a001ad8"
-  }
-  lod: 0
-  character_instance {
-    prefab_name: "Story/Harlequin"
-    character_sheet_id: "BaseCivilian"
-    character_mod {
-      stats {
-        body: 0
-        quickness: 0
-        strength: 0
-        charisma: 0
-        intelligence: 0
-        willpower: 0
-        essence: 0
-        hp: 0
-        ap: 0
-        morale: 24
-        discipline: 0
-        awareness: 24
-        perception: 0
-        authority: 0
-        protect_tether_range: 5
-        move_speed: 6
-      }
-      skills {
-      }
-      specializations {
-      }
+      filename: "generic_humanmale_lonestarguard01"
     }
-    team_id: "Civilians"
-    char_name: "Public Vid-Phone"
-    pc_spawn_number: -1
-    karma: 6
+    karma: 70
+    hiring_cost_override: 1000
   }
 }
 characters {
@@ -19256,16 +20619,17 @@ characters {
   gridPoint {
     x: -111
     y: 0
-    z: 64
+    z: 70
   }
   orientation: ORIENTATION_S
+  GeneralTags: "Mars"
   idRef {
-    id: "5233d1b6336331dc0f004b19"
+    id: "52c188823363311c050085ca"
   }
   lod: 0
   character_instance {
-    prefab_name: "Story/RenrakuSamurai"
-    character_sheet_id: "Lvl6_Human_Samurai"
+    prefab_name: "Seattle:Core/TrollMale"
+    character_sheet_id: "Lvl6_Troll_Samurai"
     character_mod {
       stats {
         body: 0
@@ -19311,159 +20675,110 @@ characters {
       specializations {
         pistol: 0
         rifle: 0
-        shotgun: -5
-        smg: 5
+        shotgun: 0
+        smg: 0
         edged: 0
         unarmed: 0
         spirit_control: 0
         esp_control: 0
         drone_combat: 0
       }
-      archetypeName: "Guard - Seek And Destroy"
+      archetypeName: "Guard - Protect"
       attitude: AttitudeAggressive
+      vulnerabilities {
+      }
     }
     equipment {
-      prefab_name: "SMG 2 Colt TZ-110"
+      prefab_name: "AR 3 Colt M23"
     }
     equipment {
-      prefab_name: "Sword 2 Katana"
+      prefab_name: "Grenade (Phosphorus)"
     }
-    team_id: "Renraku"
-    char_name: "Renraku Samurai"
-    enabled_at_start: false
-    pc_spawn_number: -1
-    hiring_type: HiringType_None
-    cyberware_eyes: "Vision Magnification Eyes 2"
-    cyberware_body: "Dermal Plating Mk 2"
-    cyberware_left_arm: "Obvious Cyberarm 2"
-    cyberware_right_arm: "Obvious Cyberarm 2"
-    karma: 158
-    hiring_cost_override: 1000
-  }
-}
-characters {
-  name: "chars_icon_playerIcon"
-  gridPoint {
-    x: -108
-    y: 0
-    z: 67
-  }
-  orientation: ORIENTATION_S
-  idRef {
-    id: "5233d11b336331d41f0048a5"
-  }
-  lod: 0
-  character_instance {
-    prefab_name: "Homeless/DwarfMaleHomelessBald"
-    character_sheet_id: "BaseCivilian"
-    character_mod {
-      stats {
-        body: 0
-        quickness: 0
-        strength: 0
-        charisma: 0
-        intelligence: 0
-        willpower: 0
-        essence: 0
-        hp: 0
-        ap: 0
-        morale: 24
-        discipline: 0
-        awareness: 24
-        perception: 0
-        authority: 0
-        protect_tether_range: 5
-        move_speed: 6
-      }
-      skills {
-      }
-      specializations {
-      }
+    equipment {
+      prefab_name: "Sh 3 Defiance T-250"
+    }
+    equipment {
+      prefab_name: "Grenade 3 (Frag)"
+    }
+    equipment {
+      prefab_name: "HealthPack_hi"
+    }
+    equipment {
+      prefab_name: "Grenade 3 (Frag)"
+    }
+    equipment {
+      prefab_name: "Pi 3 Colt Manhunter"
+    }
+    equipment {
+      prefab_name: "HealthPack_med"
     }
     team_id: "Civilians"
-    char_name: "GenericNPC1"
-    enabled_at_start: false
+    char_name: "Mars"
+    GeneralTags: "Mars"
     pc_spawn_number: -1
-    hiring_type: HiringType_None
+    hiring_type: HiringType_Hireable
+    cyberware_eyes: "Vision Magnification Eyes 2"
+    cyberware_left_leg: "Obvious Cyberleg"
     portrait {
-      filename: "pc_humanmale_04_brawler"
+      filename: "backer_trollmale_tomwithuhn"
     }
     karma: 6
     hiring_cost_override: 3000
+    hiring_tag: "Samurai"
+    id: "Mars"
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -110
+    x: -114
     y: 0
-    z: 63
+    z: 72
   }
   orientation: ORIENTATION_S
+  GeneralTags: "Trent"
   idRef {
-    id: "525234673363315c1e007335"
+    id: "52c980163363311417000943"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Scientist/HumanMaleScientistCoat"
-    character_sheet_id: "BaseCivilian"
+    prefab_name: "Seattle:Core/HumanMale"
+    character_sheet_id: "runner Trent"
+    equipment_sheet_id: "runner Trent"
     character_mod {
-      stats {
-        body: 19
-        quickness: 0
-        strength: 0
-        charisma: 0
-        intelligence: 0
-        willpower: 0
-        essence: 0
-        hp: 0
-        ap: 0
-        morale: 24
-        discipline: 0
-        awareness: 24
-        perception: 0
-        authority: 0
-        protect_tether_range: 5
-        move_speed: 6
-      }
-      skills {
-        biotech: 4
-      }
-      specializations {
-      }
+      archetypeName: "Player"
+      attitude: AttitudeAggressive
       vulnerabilities {
       }
     }
-    equipment {
-      prefab_name: "DocWagonBasic"
-    }
-    team_id: "Civilians"
-    char_name: "DocWagon Paramedic"
+    team_id: "Shadowrunners"
+    char_name: "Trent"
+    GeneralTags: "Trent"
     enabled_at_start: false
     pc_spawn_number: -1
-    ai_ignores: true
     hiring_type: HiringType_None
     portrait {
-      filename: "generic_humanmale_scientist01"
+      filename: "backer_humanmale_alnur"
     }
-    karma: 225
+    karma: 89
     hiring_cost_override: 1000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -111
+    x: -115
     y: 0
-    z: 66
+    z: 72
   }
   orientation: ORIENTATION_S
+  GeneralTags: "Vigor"
   idRef {
-    id: "5252346c3363315c1e007336"
+    id: "52c980163363311417000944"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Objects/InvisibleActor"
+    prefab_name: "Seattle:Core/OrkMale"
     character_sheet_id: "BaseCivilian"
     character_mod {
       stats {
@@ -19475,7 +20790,7 @@ characters {
         willpower: 0
         essence: 0
         hp: 0
-        ap: -2
+        ap: 0
         morale: 24
         discipline: 0
         awareness: 24
@@ -19488,59 +20803,19 @@ characters {
       }
       specializations {
       }
-      archetypeName: "Player"
       vulnerabilities {
       }
     }
     team_id: "Civilians"
-    char_name: "Invisible Runner"
-    pc_spawn_number: -1
-    ai_ignores: true
-    uninjurable: true
-    unkillable: true
-    hiring_type: HiringType_None
-    karma: 6
-    hiring_cost_override: 3000
-  }
-}
-characters {
-  name: "chars_icon_playerIcon"
-  gridPoint {
-    x: -114
-    y: 0
-    z: 74
-  }
-  orientation: ORIENTATION_S
-  GeneralTags: "Ricky"
-  idRef {
-    id: "5252339c336331541000441a"
-  }
-  lod: 0
-  character_instance {
-    prefab_name: "Seattle:Core/DwarfMale"
-    character_sheet_id: "runner Ricky"
-    equipment_sheet_id: "runner Ricky"
-    character_mod {
-      archetypeName: "Guard - Protect"
-      attitude: AttitudeAggressive
-      vulnerabilities {
-      }
-    }
-    team_id: "Shadowrunners"
-    char_name: "Ricky"
-    GeneralTags: "Ricky"
-    enabled_at_start: false
+    char_name: "Vigor"
+    GeneralTags: "Vigor"
     pc_spawn_number: -1
     hiring_type: HiringType_None
-    cyberware_jack: "Datajack"
     portrait {
-      filename: "pc_dwarfmale_06_blackbeard"
+      filename: "pc_orkmale_04_slick"
     }
-    portrait_code_override: "s1h3b4"
-    karma: 51
-    hiring_cost_override: 1075
-    hiring_tag: "Shaman"
-    is_prop_character: false
+    karma: 6
+    hiring_cost_override: 3000
   }
 }
 characters {
@@ -19548,18 +20823,18 @@ characters {
   gridPoint {
     x: -114
     y: 0
-    z: 73
+    z: 71
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Verum"
+  GeneralTags: "Argyle"
   idRef {
-    id: "5252339f336331541000441b"
+    id: "52c980163363311417000945"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Security/HumanMaleSecurity"
-    character_sheet_id: "Runner Verum Julos"
-    equipment_sheet_id: "runner Verum Julos"
+    prefab_name: "Seattle:Creature/CreatureGhoulHumanMale"
+    character_sheet_id: "runner Argyle"
+    equipment_sheet_id: "runner Argyle"
     character_mod {
       archetypeName: "Player"
       attitude: AttitudeAggressive
@@ -19567,42 +20842,37 @@ characters {
       }
     }
     team_id: "Shadowrunners"
-    char_name: "Verum Julos"
-    GeneralTags: "Verum"
+    char_name: "Argyle"
+    GeneralTags: "Argyle"
     enabled_at_start: false
     pc_spawn_number: -1
     hiring_type: HiringType_None
-    cyberware_eyes: "Vision Magnification Eyes"
-    cyberware_body: "Dermal Plating Mk 1"
-    cyberware_right_arm: "Obvious Cyberarm"
     portrait {
-      filename: "backerpc_humanmale_rc_greymitigator"
+      filename: "pc_orkmale_00_faceless"
     }
-    karma: 78
+    karma: 82
     hiring_cost_override: 1000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -109
+    x: -115
     y: 0
-    z: 65
+    z: 71
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Back-Up"
-  displayName: "Lonestar Swat"
+  GeneralTags: "Caleb"
   idRef {
-    id: "526402143363311c21006779"
+    id: "52c980163363311417000946"
   }
   lod: 0
   character_instance {
-    prefab_name: "Lonestar/HumanMaleLonestarGuard"
-    character_sheet_id: "Lonestar_Lv2_Captain"
-    equipment_sheet_id: "Lonestar_Captain_Low"
+    prefab_name: "Seattle:Story/JamesTelestrian"
+    character_sheet_id: "Airstrike"
     character_mod {
       stats {
-        body: 1
+        body: 0
         quickness: 0
         strength: 0
         charisma: 0
@@ -19613,7 +20883,6 @@ characters {
         hp: 0
         ap: 0
         armor: 0
-        force: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -19623,73 +20892,44 @@ characters {
         move_speed: 0
       }
       skills {
-        ranged_combat: 2
-        close_combat: 0
-        throwing_weapons: 0
         spellcasting: 0
-        decking: 0
-        conjuring: 0
-        spirit_summoning: 0
-        drone_control: 0
-        biotech: 0
-        dodge: 2
-        etiquette_corporate: 0
-        etiquette_security: 0
-        etiquette_gang: 0
-        etiquette_socialite: 0
-        chi_casting: 0
-        etiquette_shadowrunner: 0
-        etiquette_street: 0
-        etiquette_academic: 0
       }
       specializations {
-        pistol: 0
-        rifle: -1
-        shotgun: 0
-        smg: 0
-        edged: 0
-        unarmed: 0
-        spirit_control: 0
-        esp_control: 0
-        drone_combat: 0
       }
-      archetypeName: "Guard - Seek And Destroy"
-      attitude: AttitudeAggressive
       vulnerabilities {
       }
     }
-    team_id: "LoneStar"
-    char_name: "Lonestar"
-    GeneralTags: "Back-Up"
-    enabled_at_start: false
+    team_id: "Civilians"
+    char_name: "Caleb Brightmore"
+    GeneralTags: "Caleb"
     pc_spawn_number: -1
     hiring_type: HiringType_None
     portrait {
-      filename: "generic_humanmale_lonestarguard01"
+      filename: "npc_elfmale_jamestelelstrian"
     }
-    karma: 67
+    karma: 77
     hiring_cost_override: 1000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -111
+    x: -115
     y: 0
-    z: 69
+    z: 70
   }
   orientation: ORIENTATION_S
-  displayName: "Swat 1"
+  GeneralTags: "Julias"
   idRef {
-    id: "5263feab336331ec28002615"
+    id: "52c980163363311417000948"
   }
   lod: 0
   character_instance {
-    prefab_name: "Lonestar/HumanMaleLonestarGuard"
-    character_sheet_id: "Lonestar_Lv2_Captain"
+    prefab_name: "Seattle:Core/DwarfMale"
+    character_sheet_id: "Airstrike"
     character_mod {
       stats {
-        body: 1
+        body: 0
         quickness: 0
         strength: 0
         charisma: 0
@@ -19700,7 +20940,6 @@ characters {
         hp: 0
         ap: 0
         armor: 0
-        force: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -19710,162 +20949,85 @@ characters {
         move_speed: 0
       }
       skills {
-        ranged_combat: 2
-        close_combat: 0
-        throwing_weapons: 0
         spellcasting: 0
-        decking: 0
-        conjuring: 0
-        spirit_summoning: 0
-        drone_control: 0
-        biotech: 0
-        dodge: 2
-        etiquette_corporate: 0
-        etiquette_security: 0
-        etiquette_gang: 0
-        etiquette_socialite: 0
-        chi_casting: 0
-        etiquette_shadowrunner: 0
-        etiquette_street: 0
-        etiquette_academic: 0
       }
       specializations {
-        pistol: 0
-        rifle: 0
-        shotgun: 0
-        smg: 0
-        edged: 0
-        unarmed: 0
-        spirit_control: 0
-        esp_control: 0
-        drone_combat: 0
       }
-      archetypeName: "Guard - Seek And Destroy"
-      attitude: AttitudeAggressive
+      vulnerabilities {
+      }
     }
     equipment {
-      prefab_name: "Pi 2 Ares Predator"
+      prefab_name: "RiggerTrenchcoat"
     }
-    team_id: "LoneStar"
-    char_name: "Lonestar"
-    GeneralTags: "Back-Up"
-    enabled_at_start: false
+    team_id: "Civilians"
+    char_name: "Julias Strouther"
+    GeneralTags: "Julias"
     pc_spawn_number: -1
     hiring_type: HiringType_None
     portrait {
-      filename: "generic_humanmale_lonestarguard01"
+      filename: "backer_dwarfmale_maxwellomdahl"
     }
-    karma: 68
+    karma: 77
     hiring_cost_override: 1000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -111
+    x: -114
     y: 0
-    z: 70
-  }
-  orientation: ORIENTATION_S
-  displayName: "Swat 2"
-  idRef {
-    id: "5263feae336331ec28002616"
+    z: 69
   }
-  lod: 0
-  character_instance {
-    prefab_name: "Lonestar/HumanMaleLonestarGuard"
-    character_sheet_id: "Lonestar_Lv2_Captain"
-    character_mod {
-      stats {
-        body: 1
-        quickness: 0
-        strength: 0
-        charisma: 0
-        intelligence: 0
-        willpower: 0
-        essence: 0
-        magic: 0
-        hp: 0
-        ap: 0
-        armor: 0
-        force: 0
-        morale: 0
-        discipline: 0
-        awareness: 0
-        perception: 0
-        authority: 0
-        protect_tether_range: 0
-        move_speed: 0
-      }
-      skills {
-        ranged_combat: 2
-        close_combat: 0
-        throwing_weapons: 0
-        spellcasting: 0
-        decking: 0
-        conjuring: 0
-        spirit_summoning: 0
-        drone_control: 0
-        biotech: 0
-        dodge: 2
-        etiquette_corporate: 0
-        etiquette_security: 0
-        etiquette_gang: 0
-        etiquette_socialite: 0
-        chi_casting: 0
-        etiquette_shadowrunner: 0
-        etiquette_street: 0
-        etiquette_academic: 0
-      }
-      specializations {
-        pistol: 0
-        rifle: -1
-        shotgun: 2
-        smg: 0
-        edged: 0
-        unarmed: 0
-        spirit_control: 0
-        esp_control: 0
-        drone_combat: 0
-      }
-      archetypeName: "Guard - Seek And Destroy"
+  orientation: ORIENTATION_S
+  GeneralTags: "Clockwork"
+  idRef {
+    id: "52c980163363311417000949"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Story/ThaddeusRyker"
+    character_sheet_id: "runner Clockwork"
+    equipment_sheet_id: "runner Clockwork"
+    character_mod {
+      archetypeName: "Player"
       attitude: AttitudeAggressive
+      vulnerabilities {
+      }
     }
-    equipment {
-      prefab_name: "Sh 1 Benelli Raffaello"
-    }
-    team_id: "LoneStar"
-    char_name: "Lonestar"
-    GeneralTags: "Back-Up"
+    team_id: "Shadowrunners"
+    char_name: "Clockwork"
+    GeneralTags: "Clockwork"
     enabled_at_start: false
     pc_spawn_number: -1
     hiring_type: HiringType_None
+    cyberware_eyes: "Vision Magnification Eyes 2"
+    cyberware_jack: "Datajack"
+    cyberware_right_arm: "Obvious Cyberarm"
     portrait {
-      filename: "generic_humanmale_lonestarguard01"
+      filename: "backer_humanmale_jamestbenton"
     }
-    karma: 70
+    karma: 77
     hiring_cost_override: 1000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -111
+    x: -115
     y: 0
-    z: 71
+    z: 69
   }
   orientation: ORIENTATION_S
-  displayName: "Swat 3"
   idRef {
-    id: "5263feb0336331ec28002617"
+    id: "52c98016336331141700094a"
   }
   lod: 0
   character_instance {
-    prefab_name: "Lonestar/HumanMaleLonestarGuard"
-    character_sheet_id: "Lonestar_Lv2_Captain"
+    prefab_name: "Seattle:Core/ElfMale"
+    character_sheet_id: "Airstrike"
     character_mod {
       stats {
-        body: 1
+        body: 0
         quickness: 0
         strength: 0
         charisma: 0
@@ -19876,7 +21038,6 @@ characters {
         hp: 0
         ap: 0
         armor: 0
-        force: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -19886,173 +21047,94 @@ characters {
         move_speed: 0
       }
       skills {
-        ranged_combat: 2
-        close_combat: 0
-        throwing_weapons: 0
         spellcasting: 0
-        decking: 0
-        conjuring: 0
-        spirit_summoning: 0
-        drone_control: 0
-        biotech: 0
-        dodge: 2
-        etiquette_corporate: 0
-        etiquette_security: 0
-        etiquette_gang: 0
-        etiquette_socialite: 0
-        chi_casting: 0
-        etiquette_shadowrunner: 0
-        etiquette_street: 0
-        etiquette_academic: 0
       }
       specializations {
-        pistol: 0
-        rifle: -1
-        shotgun: 0
-        smg: 2
-        edged: 0
-        unarmed: 0
-        spirit_control: 0
-        esp_control: 0
-        drone_combat: 0
       }
-      archetypeName: "Guard - Seek And Destroy"
-      attitude: AttitudeAggressive
+      vulnerabilities {
+      }
     }
     equipment {
-      prefab_name: "SMG 1 Beretta Model 70"
+      prefab_name: "DeckerFedora"
     }
-    team_id: "LoneStar"
-    char_name: "Lonestar"
-    GeneralTags: "Back-Up"
-    enabled_at_start: false
+    team_id: "Civilians"
+    char_name: "Mortimer Reed"
     pc_spawn_number: -1
     hiring_type: HiringType_None
     portrait {
-      filename: "generic_humanmale_lonestarguard01"
+      filename: "backer_elfmale_arttrebbel_art"
     }
-    karma: 70
+    karma: 77
     hiring_cost_override: 1000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -111
+    x: -114
     y: 0
-    z: 72
+    z: 70
   }
   orientation: ORIENTATION_S
-  displayName: "Swat 4"
+  GeneralTags: "Smash Jacker"
   idRef {
-    id: "5263feb2336331ec28002618"
+    id: "52e39c96336331f429002d15"
   }
   lod: 0
   character_instance {
-    prefab_name: "Lonestar/HumanMaleLonestarGuard"
-    character_sheet_id: "Lonestar_Lv2_Captain"
+    prefab_name: "Seattle:Core/TrollFemale"
+    character_sheet_id: "runner Smash Jacker"
+    equipment_sheet_id: "runner Smash Jacker"
     character_mod {
-      stats {
-        body: 1
-        quickness: 0
-        strength: 0
-        charisma: 0
-        intelligence: 0
-        willpower: 0
-        essence: 0
-        magic: 0
-        hp: 0
-        ap: 0
-        armor: 0
-        force: 0
-        morale: 0
-        discipline: 0
-        awareness: 0
-        perception: 0
-        authority: 0
-        protect_tether_range: 0
-        move_speed: 0
-      }
-      skills {
-        ranged_combat: 2
-        close_combat: 0
-        throwing_weapons: 0
-        spellcasting: 0
-        decking: 0
-        conjuring: 0
-        spirit_summoning: 0
-        drone_control: 0
-        biotech: 0
-        dodge: 2
-        etiquette_corporate: 0
-        etiquette_security: 0
-        etiquette_gang: 0
-        etiquette_socialite: 0
-        chi_casting: 0
-        etiquette_shadowrunner: 0
-        etiquette_street: 0
-        etiquette_academic: 0
-      }
-      specializations {
-        pistol: 0
-        rifle: 1
-        shotgun: 0
-        smg: 0
-        edged: 0
-        unarmed: 0
-        spirit_control: 0
-        esp_control: 0
-        drone_combat: 0
-      }
-      archetypeName: "Guard - Seek And Destroy"
+      archetypeName: "Player"
       attitude: AttitudeAggressive
+      vulnerabilities {
+      }
     }
-    equipment {
-      prefab_name: "AR 1 Semopal vz88v"
-    }
-    team_id: "LoneStar"
-    char_name: "Lonestar"
-    GeneralTags: "Back-Up"
+    team_id: "Shadowrunners"
+    char_name: "Smash Jacker"
+    GeneralTags: "Smash Jacker"
     enabled_at_start: false
     pc_spawn_number: -1
     hiring_type: HiringType_None
+    cyberware_jack: "Datajack"
+    cyberware_body: "Bone Lacing Kevlar 2"
     portrait {
-      filename: "generic_humanmale_lonestarguard01"
+      filename: "pc_trollfemale_04d_devil"
     }
-    karma: 70
+    karma: 119
     hiring_cost_override: 1000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -111
+    x: -108
     y: 0
-    z: 70
+    z: 63
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Mars"
+  GeneralTags: "Rescue"
+  displayName: "Hostage"
   idRef {
-    id: "52c188823363311c050085ca"
+    id: "545294d0363735f003005997"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Core/TrollMale"
-    character_sheet_id: "Lvl6_Troll_Samurai"
+    prefab_name: "Berlin:Humanis/HumanMaleHumanisLongSleeve_1"
+    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
     character_mod {
       stats {
-        body: 0
+        body: -3
         quickness: 0
-        strength: 0
+        strength: -5
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
-        magic: 0
         hp: 0
         ap: 0
         armor: 0
-        force: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -20060,235 +21142,271 @@ characters {
         authority: 0
         protect_tether_range: 0
         move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
       }
       skills {
-        ranged_combat: 0
-        close_combat: 0
-        throwing_weapons: 0
-        spellcasting: 0
-        decking: 0
-        conjuring: 0
-        spirit_summoning: 0
-        drone_control: 0
-        biotech: 0
+        ranged_combat: -1
+        close_combat: -3
         dodge: 0
-        etiquette_corporate: 0
-        etiquette_security: 0
-        etiquette_gang: 0
-        etiquette_socialite: 0
-        chi_casting: 0
-        etiquette_shadowrunner: 0
-        etiquette_street: 0
-        etiquette_academic: 0
       }
       specializations {
-        pistol: 0
-        rifle: 0
-        shotgun: 0
-        smg: 0
-        edged: 0
+        rifle: -1
+        edged: -3
         unarmed: 0
-        spirit_control: 0
-        esp_control: 0
-        drone_combat: 0
       }
-      archetypeName: "Guard - Protect"
-      attitude: AttitudeAggressive
       vulnerabilities {
       }
     }
     equipment {
-      prefab_name: "AR 3 Colt M23"
-    }
-    equipment {
-      prefab_name: "Grenade (Phosphorus)"
-    }
-    equipment {
-      prefab_name: "Sh 3 Defiance T-250"
-    }
-    equipment {
-      prefab_name: "Grenade 3 (Frag)"
-    }
-    equipment {
-      prefab_name: "HealthPack_hi"
-    }
-    equipment {
-      prefab_name: "Grenade 3 (Frag)"
-    }
-    equipment {
-      prefab_name: "Pi 3 Colt Manhunter"
-    }
-    equipment {
-      prefab_name: "HealthPack_med"
+      prefab_name: "Fist"
     }
-    team_id: "Civilians"
-    char_name: "Mars"
-    GeneralTags: "Mars"
+    team_id: "Shadowrunners"
+    char_name: "Secured Target"
+    GeneralTags: "Rescue"
+    enabled_at_start: false
     pc_spawn_number: -1
-    hiring_type: HiringType_Hireable
-    cyberware_eyes: "Vision Magnification Eyes 2"
-    cyberware_left_leg: "Obvious Cyberleg"
     portrait {
-      filename: "backer_trollmale_tomwithuhn"
+      filename: "pc_humanmale_06c_shavedhead"
     }
-    karma: 6
-    hiring_cost_override: 3000
-    hiring_tag: "Samurai"
-    id: "Mars"
+    karma: 86
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -114
+    x: -110
     y: 0
-    z: 72
+    z: 69
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Trent"
+  GeneralTags: "Escort"
+  GeneralTags: "A"
+  displayName: "Escort A"
   idRef {
-    id: "52c980163363311417000943"
+    id: "5455c8b4363735ac16003468"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Core/HumanMale"
-    character_sheet_id: "runner Trent"
-    equipment_sheet_id: "runner Trent"
+    prefab_name: "Seattle:Scientist/HumanMaleScientist"
+    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
     character_mod {
-      archetypeName: "Player"
-      attitude: AttitudeAggressive
+      stats {
+        body: -3
+        quickness: 0
+        strength: -5
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
+      }
+      skills {
+        ranged_combat: -1
+        close_combat: -3
+        dodge: 0
+      }
+      specializations {
+        rifle: -1
+        edged: -3
+        unarmed: 0
+      }
       vulnerabilities {
       }
     }
+    equipment {
+      prefab_name: "Fist"
+    }
     team_id: "Shadowrunners"
-    char_name: "Trent"
-    GeneralTags: "Trent"
+    char_name: "Secured Target"
+    GeneralTags: "Escort"
+    GeneralTags: "A"
     enabled_at_start: false
     pc_spawn_number: -1
-    hiring_type: HiringType_None
     portrait {
-      filename: "backer_humanmale_alnur"
+      filename: "pc_humanmale_06c_shavedhead"
     }
-    karma: 89
-    hiring_cost_override: 1000
+    karma: 86
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -115
+    x: -110
     y: 0
-    z: 72
+    z: 70
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Vigor"
+  GeneralTags: "Escort"
+  GeneralTags: "B"
+  displayName: "Escort B"
   idRef {
-    id: "52c980163363311417000944"
+    id: "5455c8b4363735ac16003469"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Core/OrkMale"
-    character_sheet_id: "BaseCivilian"
+    prefab_name: "Seattle:Scientist/HumanFemaleScientistCoat"
+    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
     character_mod {
       stats {
-        body: 0
+        body: -3
         quickness: 0
-        strength: 0
+        strength: -5
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
         hp: 0
         ap: 0
-        morale: 24
+        armor: 0
+        morale: 0
         discipline: 0
-        awareness: 24
+        awareness: 0
         perception: 0
         authority: 0
-        protect_tether_range: 5
-        move_speed: 6
+        protect_tether_range: 0
+        move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
       }
       skills {
+        ranged_combat: -1
+        close_combat: -3
+        dodge: 0
       }
       specializations {
+        rifle: -1
+        edged: -3
+        unarmed: 0
       }
       vulnerabilities {
       }
     }
-    team_id: "Civilians"
-    char_name: "Vigor"
-    GeneralTags: "Vigor"
+    equipment {
+      prefab_name: "Fist"
+    }
+    team_id: "Shadowrunners"
+    char_name: "Secured Target"
+    GeneralTags: "Escort"
+    GeneralTags: "B"
+    enabled_at_start: false
     pc_spawn_number: -1
-    hiring_type: HiringType_None
     portrait {
-      filename: "pc_orkmale_04_slick"
+      filename: "pc_humanmale_06c_shavedhead"
     }
-    karma: 6
-    hiring_cost_override: 3000
+    karma: 86
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -114
+    x: -110
     y: 0
     z: 71
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Argyle"
+  GeneralTags: "Escort"
+  GeneralTags: "C"
+  displayName: "Escort C"
   idRef {
-    id: "52c980163363311417000945"
+    id: "5455c8b4363735ac1600346a"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Creature/CreatureGhoulHumanMale"
-    character_sheet_id: "runner Argyle"
-    equipment_sheet_id: "runner Argyle"
+    prefab_name: "Berlin:Humanis/HumanMaleHumanisLongSleeve_1"
+    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
     character_mod {
-      archetypeName: "Player"
-      attitude: AttitudeAggressive
+      stats {
+        body: -3
+        quickness: 0
+        strength: -5
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
+      }
+      skills {
+        ranged_combat: -1
+        close_combat: -3
+        dodge: 0
+      }
+      specializations {
+        rifle: -1
+        edged: -3
+        unarmed: 0
+      }
       vulnerabilities {
       }
     }
+    equipment {
+      prefab_name: "Fist"
+    }
     team_id: "Shadowrunners"
-    char_name: "Argyle"
-    GeneralTags: "Argyle"
+    char_name: "Secured Target"
+    GeneralTags: "Escort"
+    GeneralTags: "C"
     enabled_at_start: false
     pc_spawn_number: -1
-    hiring_type: HiringType_None
     portrait {
-      filename: "pc_orkmale_00_faceless"
+      filename: "pc_humanmale_06c_shavedhead"
     }
-    karma: 82
-    hiring_cost_override: 1000
+    karma: 86
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -115
+    x: -110
     y: 0
-    z: 71
+    z: 72
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Caleb"
+  GeneralTags: "Escort"
+  GeneralTags: "D"
+  displayName: "Escort D"
   idRef {
-    id: "52c980163363311417000946"
+    id: "5455c8b4363735ac1600346b"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Story/JamesTelestrian"
-    character_sheet_id: "Airstrike"
+    prefab_name: "Seattle:Story/MaryLouiseTelestrian"
+    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
     character_mod {
       stats {
-        body: 0
+        body: -3
         quickness: 0
-        strength: 0
+        strength: -5
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
-        magic: 0
         hp: 0
         ap: 0
         armor: 0
@@ -20299,141 +21417,167 @@ characters {
         authority: 0
         protect_tether_range: 0
         move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
       }
       skills {
-        spellcasting: 0
+        ranged_combat: -1
+        close_combat: -3
+        dodge: 0
       }
       specializations {
+        rifle: -1
+        edged: -3
+        unarmed: 0
       }
       vulnerabilities {
       }
     }
-    team_id: "Civilians"
-    char_name: "Caleb Brightmore"
-    GeneralTags: "Caleb"
+    equipment {
+      prefab_name: "Fist"
+    }
+    team_id: "Shadowrunners"
+    char_name: "Secured Target"
+    GeneralTags: "Escort"
+    GeneralTags: "D"
+    enabled_at_start: false
     pc_spawn_number: -1
-    hiring_type: HiringType_None
     portrait {
-      filename: "npc_elfmale_jamestelelstrian"
+      filename: "pc_humanmale_06c_shavedhead"
     }
-    karma: 77
-    hiring_cost_override: 1000
+    karma: 86
   }
 }
 characters {
-  name: "chars_icon_playerIcon"
+  name: "system_spawner_playerSpawner"
   gridPoint {
-    x: -115
+    x: -14
+    y: 0
+    z: 41
+  }
+  orientation: ORIENTATION_S
+  idRef {
+    id: "58d2a5223037368247af1001"
+  }
+  lod: 0
+  character_instance {
+    character_mod {
+      archetypeName: "Player"
+    }
+    team_id: "Shadowrunners"
+    char_name: "New Actor"
+    enabled_at_start: true
+    pc_spawn_number: 1
+  }
+}
+characters {
+  name: "system_spawner_playerSpawner"
+  gridPoint {
+    x: -14
     y: 0
-    z: 70
+    z: 41
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Julias"
   idRef {
-    id: "52c980163363311417000948"
+    id: "58d2a5223037368247af1002"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Core/DwarfMale"
-    character_sheet_id: "Airstrike"
     character_mod {
-      stats {
-        body: 0
-        quickness: 0
-        strength: 0
-        charisma: 0
-        intelligence: 0
-        willpower: 0
-        essence: 0
-        magic: 0
-        hp: 0
-        ap: 0
-        armor: 0
-        morale: 0
-        discipline: 0
-        awareness: 0
-        perception: 0
-        authority: 0
-        protect_tether_range: 0
-        move_speed: 0
-      }
-      skills {
-        spellcasting: 0
-      }
-      specializations {
-      }
-      vulnerabilities {
-      }
-    }
-    equipment {
-      prefab_name: "RiggerTrenchcoat"
-    }
-    team_id: "Civilians"
-    char_name: "Julias Strouther"
-    GeneralTags: "Julias"
-    pc_spawn_number: -1
-    hiring_type: HiringType_None
-    portrait {
-      filename: "backer_dwarfmale_maxwellomdahl"
+      archetypeName: "Player"
     }
-    karma: 77
-    hiring_cost_override: 1000
+    team_id: "Shadowrunners"
+    char_name: "New Actor"
+    enabled_at_start: true
+    pc_spawn_number: 2
   }
 }
 characters {
-  name: "chars_icon_playerIcon"
+  name: "system_spawner_playerSpawner"
   gridPoint {
-    x: -114
+    x: -14
     y: 0
-    z: 69
+    z: 41
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Clockwork"
   idRef {
-    id: "52c980163363311417000949"
+    id: "58d2a5223037368247af1003"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Story/ThaddeusRyker"
-    character_sheet_id: "runner Clockwork"
-    equipment_sheet_id: "runner Clockwork"
     character_mod {
       archetypeName: "Player"
-      attitude: AttitudeAggressive
-      vulnerabilities {
-      }
     }
     team_id: "Shadowrunners"
-    char_name: "Clockwork"
-    GeneralTags: "Clockwork"
-    enabled_at_start: false
-    pc_spawn_number: -1
-    hiring_type: HiringType_None
-    cyberware_eyes: "Vision Magnification Eyes 2"
-    cyberware_jack: "Datajack"
-    cyberware_right_arm: "Obvious Cyberarm"
-    portrait {
-      filename: "backer_humanmale_jamestbenton"
-    }
-    karma: 77
-    hiring_cost_override: 1000
+    char_name: "New Actor"
+    enabled_at_start: true
+    pc_spawn_number: 3
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -115
+    x: -110
     y: 0
-    z: 69
+    z: 66
   }
-  orientation: ORIENTATION_S
+  orientation: ORIENTATION_E
+  displayName: "Mike Score"
   idRef {
-    id: "52c98016336331141700094a"
+    id: "5d1e7f6c396639fc27000a80"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Core/ElfMale"
-    character_sheet_id: "Airstrike"
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
     character_mod {
       stats {
         body: 0
@@ -20443,10 +21587,8 @@ characters {
         intelligence: 0
         willpower: 0
         essence: 0
-        magic: 0
         hp: 0
         ap: 0
-        armor: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -20456,7 +21598,6 @@ characters {
         move_speed: 0
       }
       skills {
-        spellcasting: 0
       }
       specializations {
       }
@@ -20464,86 +21605,49 @@ characters {
       }
     }
     equipment {
-      prefab_name: "DeckerFedora"
+      prefab_name: "Outfit_SINless"
     }
     team_id: "Civilians"
-    char_name: "Mortimer Reed"
-    pc_spawn_number: -1
-    hiring_type: HiringType_None
-    portrait {
-      filename: "backer_elfmale_arttrebbel_art"
-    }
-    karma: 77
-    hiring_cost_override: 1000
-  }
-}
-characters {
-  name: "chars_icon_playerIcon"
-  gridPoint {
-    x: -114
-    y: 0
-    z: 70
-  }
-  orientation: ORIENTATION_S
-  GeneralTags: "Smash Jacker"
-  idRef {
-    id: "52e39c96336331f429002d15"
-  }
-  lod: 0
-  character_instance {
-    prefab_name: "Seattle:Core/TrollFemale"
-    character_sheet_id: "runner Smash Jacker"
-    equipment_sheet_id: "runner Smash Jacker"
-    character_mod {
-      archetypeName: "Player"
-      attitude: AttitudeAggressive
-      vulnerabilities {
-      }
-    }
-    team_id: "Shadowrunners"
-    char_name: "Smash Jacker"
-    GeneralTags: "Smash Jacker"
-    enabled_at_start: false
+    char_name: "Mike Score"
     pc_spawn_number: -1
-    hiring_type: HiringType_None
-    cyberware_jack: "Datajack"
-    cyberware_body: "Bone Lacing Kevlar 2"
+    spawn_type: SpawnType_Avatar
     portrait {
-      filename: "pc_trollfemale_04d_devil"
+      filename: "pc_humanmale_00b"
     }
-    karma: 119
-    hiring_cost_override: 1000
+    karma: 6
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -108
+    x: -111
     y: 0
-    z: 63
+    z: 67
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Rescue"
-  displayName: "Hostage"
+  GeneralTags: "Gouhin"
+  displayName: "Informant Security"
   idRef {
-    id: "545294d0363735f003005997"
+    id: "5dfd53e33966397410003576"
   }
   lod: 0
   character_instance {
-    prefab_name: "Berlin:Humanis/HumanMaleHumanisLongSleeve_1"
-    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
+    prefab_name: "Seattle:Wealthy/HumanMaleAutumn"
+    character_sheet_id: "BaseCivilian"
     character_mod {
       stats {
-        body: -3
+        body: 0
         quickness: 0
-        strength: -5
+        strength: 0
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
+        magic: 0
         hp: 0
         ap: 0
         armor: 0
+        force: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -20556,62 +21660,129 @@ characters {
         vision_cone_angle: 0
       }
       skills {
-        ranged_combat: -1
-        close_combat: -3
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
         dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
       }
       specializations {
-        rifle: -1
-        edged: -3
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
         unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
       }
+      archetypeName: "Non-Combatant"
+      attitude: AttitudeCautious
       vulnerabilities {
       }
     }
-    equipment {
-      prefab_name: "Fist"
-    }
-    team_id: "Shadowrunners"
-    char_name: "Secured Target"
-    GeneralTags: "Rescue"
-    enabled_at_start: false
+    team_id: "Civilians"
+    char_name: "Gouhin"
+    GeneralTags: "Gouhin"
     pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    hiring_type: HiringType_None
     portrait {
-      filename: "pc_humanmale_06c_shavedhead"
+      filename: "pc_trollfemale_00b"
     }
-    karma: 86
+    karma: 6
+    hiring_cost_override: 3000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -110
+    x: -108
     y: 0
-    z: 69
+    z: 66
   }
-  orientation: ORIENTATION_S
-  GeneralTags: "Escort"
-  GeneralTags: "A"
-  displayName: "Escort A"
+  orientation: ORIENTATION_E
+  GeneralTags: "Mike_Score"
+  displayName: "Informant Corp"
   idRef {
-    id: "5455c8b4363735ac16003468"
+    id: "5dfd6904396639741000358b"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Scientist/HumanMaleScientist"
-    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
     character_mod {
       stats {
-        body: -3
+        body: 0
         quickness: 0
-        strength: -5
+        strength: 0
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
         hp: 0
         ap: 0
-        armor: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -20619,68 +21790,60 @@ characters {
         authority: 0
         protect_tether_range: 0
         move_speed: 0
-        vision_peripheral_distance: 0
-        vision_cone_distance: 0
-        vision_cone_angle: 0
       }
       skills {
-        ranged_combat: -1
-        close_combat: -3
-        dodge: 0
       }
       specializations {
-        rifle: -1
-        edged: -3
-        unarmed: 0
       }
       vulnerabilities {
       }
     }
     equipment {
-      prefab_name: "Fist"
+      prefab_name: "Outfit_SINless"
     }
-    team_id: "Shadowrunners"
-    char_name: "Secured Target"
-    GeneralTags: "Escort"
-    GeneralTags: "A"
-    enabled_at_start: false
+    team_id: "Civilians"
+    char_name: "Mike Score"
+    GeneralTags: "Mike_Score"
     pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
     portrait {
-      filename: "pc_humanmale_06c_shavedhead"
+      filename: "pc_humanmale_00b"
     }
-    karma: 86
+    karma: 6
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -110
+    x: -57
     y: 0
-    z: 70
+    z: 2
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Escort"
-  GeneralTags: "B"
-  displayName: "Escort B"
+  GeneralTags: "JohnsonStep25"
+  displayName: "JohsonStep25"
   idRef {
-    id: "5455c8b4363735ac16003469"
+    id: "5e027a853966394c110009d1"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Scientist/HumanFemaleScientistCoat"
-    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
+    prefab_name: "Berlin:Business/ElfMaleBusinessMan"
+    character_sheet_id: "Lvl6_Elf_Mage"
+    equipment_sheet_id: "Vanguard_Lv6_AudransMage_Gear"
     character_mod {
       stats {
-        body: -3
+        body: 0
         quickness: 0
-        strength: -5
+        strength: 0
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
+        magic: 0
         hp: 0
         ap: 0
         armor: 0
+        force: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -20693,63 +21856,89 @@ characters {
         vision_cone_angle: 0
       }
       skills {
-        ranged_combat: -1
-        close_combat: -3
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
         dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
       }
       specializations {
-        rifle: -1
-        edged: -3
+        pistol: 4
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
         unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
       }
+      archetypeName: "Guard - Protect"
+      attitude: AttitudeAggressive
       vulnerabilities {
       }
     }
     equipment {
-      prefab_name: "Fist"
+      prefab_name: "Berlin_Pi 2 Savalette Guardian"
     }
-    team_id: "Shadowrunners"
-    char_name: "Secured Target"
-    GeneralTags: "Escort"
-    GeneralTags: "B"
+    team_id: "Civilians"
+    char_name: "New Civilian"
+    GeneralTags: "JohnsonStep25"
     enabled_at_start: false
     pc_spawn_number: -1
+    hiring_type: HiringType_None
     portrait {
-      filename: "pc_humanmale_06c_shavedhead"
+      filename: "npc_elfmale_ehranthescribe"
     }
-    karma: 86
+    karma: 156
+    hiring_cost_override: 3000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -110
+    x: -59
     y: 0
-    z: 71
+    z: 0
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Escort"
-  GeneralTags: "C"
-  displayName: "Escort C"
+  GeneralTags: "JohnsonStep25"
+  displayName: "JohnsonStep25_Bodyguard"
   idRef {
-    id: "5455c8b4363735ac1600346a"
+    id: "5e027e993966394c110009d2"
   }
   lod: 0
   character_instance {
-    prefab_name: "Berlin:Humanis/HumanMaleHumanisLongSleeve_1"
-    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
+    prefab_name: "Seattle:Security/ElfMaleSecurity"
+    character_sheet_id: "Lvl4_Elf_Mage"
+    equipment_sheet_id: "Vanguard_Lv6_Mage_Gear"
     character_mod {
       stats {
-        body: -3
+        body: 0
         quickness: 0
-        strength: -5
+        strength: 0
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
+        magic: 0
         hp: 0
         ap: 0
         armor: 0
+        force: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -20762,63 +21951,95 @@ characters {
         vision_cone_angle: 0
       }
       skills {
-        ranged_combat: -1
-        close_combat: -3
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
         dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
       }
       specializations {
-        rifle: -1
-        edged: -3
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
         unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
       }
+      archetypeName: "Guard - Protect"
+      attitude: AttitudeAggressive
       vulnerabilities {
       }
     }
     equipment {
-      prefab_name: "Fist"
+      prefab_name: "AdeptCombatvest"
     }
-    team_id: "Shadowrunners"
-    char_name: "Secured Target"
-    GeneralTags: "Escort"
-    GeneralTags: "C"
+    equipment {
+      prefab_name: "SMG 1 Beretta Model 70"
+    }
+    team_id: "Civilians"
+    char_name: "Bodyguard"
+    GeneralTags: "JohnsonStep25"
     enabled_at_start: false
     pc_spawn_number: -1
+    hiring_type: HiringType_None
     portrait {
-      filename: "pc_humanmale_06c_shavedhead"
+      filename: "backer_trollmale_isaacnagellightner_bryanlite"
     }
-    karma: 86
+    description_bio: ""
+    karma: 92
+    hiring_cost_override: 1800
+    hiring_tag: "Brute"
+    is_backer: true
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -110
+    x: -59
     y: 0
-    z: 72
+    z: 3
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Escort"
-  GeneralTags: "D"
-  displayName: "Escort D"
+  GeneralTags: "JohnsonStep25"
+  displayName: "JohnsonStep25_Bodyguard"
   idRef {
-    id: "5455c8b4363735ac1600346b"
+    id: "5e02802b3966394c110009d3"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Story/MaryLouiseTelestrian"
-    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
+    prefab_name: "Seattle:Security/ElfMaleSecurity"
+    character_sheet_id: "Lvl4_Elf_Mage"
+    equipment_sheet_id: "Vanguard_Lv6_Mage_Gear"
     character_mod {
       stats {
-        body: -3
+        body: 0
         quickness: 0
-        strength: -5
+        strength: 0
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
+        magic: 0
         hp: 0
         ap: 0
         armor: 0
+        force: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -20831,97 +22052,61 @@ characters {
         vision_cone_angle: 0
       }
       skills {
-        ranged_combat: -1
-        close_combat: -3
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
         dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
       }
       specializations {
-        rifle: -1
-        edged: -3
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
         unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
       }
+      archetypeName: "Guard - Protect"
+      attitude: AttitudeAggressive
       vulnerabilities {
       }
     }
     equipment {
-      prefab_name: "Fist"
+      prefab_name: "AdeptCombatvest"
     }
-    team_id: "Shadowrunners"
-    char_name: "Secured Target"
-    GeneralTags: "Escort"
-    GeneralTags: "D"
+    equipment {
+      prefab_name: "SMG 1 Beretta Model 70"
+    }
+    team_id: "Civilians"
+    char_name: "Bodyguard"
+    GeneralTags: "JohnsonStep25"
     enabled_at_start: false
     pc_spawn_number: -1
+    hiring_type: HiringType_None
     portrait {
-      filename: "pc_humanmale_06c_shavedhead"
-    }
-    karma: 86
-  }
-}
-characters {
-  name: "system_spawner_playerSpawner"
-  gridPoint {
-    x: -14
-    y: 0
-    z: 41
-  }
-  orientation: ORIENTATION_S
-  idRef {
-    id: "58d2a5223037368247af1001"
-  }
-  lod: 0
-  character_instance {
-    character_mod {
-      archetypeName: "Player"
-    }
-    team_id: "Shadowrunners"
-    char_name: "New Actor"
-    enabled_at_start: true
-    pc_spawn_number: 1
-  }
-}
-characters {
-  name: "system_spawner_playerSpawner"
-  gridPoint {
-    x: -14
-    y: 0
-    z: 41
-  }
-  orientation: ORIENTATION_S
-  idRef {
-    id: "58d2a5223037368247af1002"
-  }
-  lod: 0
-  character_instance {
-    character_mod {
-      archetypeName: "Player"
-    }
-    team_id: "Shadowrunners"
-    char_name: "New Actor"
-    enabled_at_start: true
-    pc_spawn_number: 2
-  }
-}
-characters {
-  name: "system_spawner_playerSpawner"
-  gridPoint {
-    x: -14
-    y: 0
-    z: 41
-  }
-  orientation: ORIENTATION_S
-  idRef {
-    id: "58d2a5223037368247af1003"
-  }
-  lod: 0
-  character_instance {
-    character_mod {
-      archetypeName: "Player"
+      filename: "backer_trollmale_isaacnagellightner_bryanlite"
     }
-    team_id: "Shadowrunners"
-    char_name: "New Actor"
-    enabled_at_start: true
-    pc_spawn_number: 3
+    description_bio: ""
+    karma: 92
+    hiring_cost_override: 1800
+    hiring_tag: "Brute"
+    is_backer: true
   }
 }
 variables {
diff --git a/SR-Unlimited/data/scenes/run location-Mitsuhama HQ.srt.txt b/SR-Unlimited/data/scenes/run location-Mitsuhama HQ.srt.txt
index ec95819..e0dbefe 100644
--- a/SR-Unlimited/data/scenes/run location-Mitsuhama HQ.srt.txt	
+++ b/SR-Unlimited/data/scenes/run location-Mitsuhama HQ.srt.txt	
@@ -39742,7 +39742,7 @@ mapName: "mizmitsuhamahq"
 parentStory: ""
 scene_title: "MegaCorporate RHQ"
 scene_subtitle: ""
-scene_synopsis: ""
+scene_synopsis: "A tower of glass aerves as the regional HQ of Mitsuhama. Unlike the arcology almost none live here."
 scene_image: "Loading_Screen__JB192"
 scene_continue_button_skip: true
 scene_restore_runner_health: false
diff --git a/SR-Unlimited/data/scenes/the barrens.srt.txt b/SR-Unlimited/data/scenes/the barrens.srt.txt
index 4908523..2b048e8 100644
--- a/SR-Unlimited/data/scenes/the barrens.srt.txt	
+++ b/SR-Unlimited/data/scenes/the barrens.srt.txt	
@@ -790,18 +790,32 @@ triggers {
   }
   conditions {
     ops {
-      functionName: "Evaluate Turn Mode"
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
       args {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "TurnBasedOrFreeMove"
+            string_value: "Comparison Ops"
           }
           args {
             int_value: 1
           }
         }
       }
+      args {
+        int_value: 18
+      }
     }
   }
   actions {
@@ -839,6 +853,50 @@ triggers {
     id: "51f45c09336331981b00054e"
   }
   elseActions {
+    ops {
+      functionName: "Trigger: Run Alternate Trigger"
+      args {
+        call_value {
+          functionName: "Get Map Item (Trigger)"
+          args {
+            string_value: "5d042ab3396639380d0017be"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WaitOrNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
   }
   is_oneshot: false
 }
@@ -1032,18 +1090,32 @@ triggers {
   }
   conditions {
     ops {
-      functionName: "Evaluate Turn Mode"
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
       args {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "TurnBasedOrFreeMove"
+            string_value: "Comparison Ops"
           }
           args {
             int_value: 1
           }
         }
       }
+      args {
+        int_value: 18
+      }
     }
   }
   actions {
@@ -1064,6 +1136,50 @@ triggers {
     id: "520d20b4336331241b000e0d"
   }
   elseActions {
+    ops {
+      functionName: "Trigger: Run Alternate Trigger"
+      args {
+        call_value {
+          functionName: "Get Map Item (Trigger)"
+          args {
+            string_value: "5d042177396639380d0017b9"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WaitOrNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
   }
   is_oneshot: false
 }
@@ -1326,18 +1442,32 @@ triggers {
   }
   conditions {
     ops {
-      functionName: "Evaluate Turn Mode"
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
       args {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "TurnBasedOrFreeMove"
+            string_value: "Comparison Ops"
           }
           args {
             int_value: 1
           }
         }
       }
+      args {
+        int_value: 18
+      }
     }
   }
   actions {
@@ -1375,6 +1505,50 @@ triggers {
     id: "5233c9d8336331b40c00831c"
   }
   elseActions {
+    ops {
+      functionName: "Trigger: Run Alternate Trigger"
+      args {
+        call_value {
+          functionName: "Get Map Item (Trigger)"
+          args {
+            string_value: "5d0423f5396639380d0017bb"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WaitOrNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
   }
   is_oneshot: false
 }
@@ -24422,38 +24596,466 @@ triggers {
   }
   is_oneshot: true
 }
-regions {
-  name: "Camera_Boundaries"
-  position {
-    x: -63
-    y: 224
-    width: 101
-    height: -69
+triggers {
+  name: "Runs_Vigor"
+  events {
   }
-  enabledAtStart: true
-  is_camera_region: true
-  idRef {
-    id: "51f3f32b336331b439001904"
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Fixer"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Vigor"
+      }
+    }
   }
-  highlight_color {
-    r: 0
-    g: 0
-    b: 0
-    a: 1
+  actions {
+    ops {
+      functionName: "Add To Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        int_value: 1
+      }
+    }
   }
-  visible_at_start: false
-  is_closet: false
-  is_teleporter_region: false
-  directional_light_dir {
-    x: -0.5
-    y: -1
-    z: -0.75
+  isActive: true
+  idRef {
+    id: "5cf9d3e239663998390063ee"
   }
-  directional_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+  elseActions {
+  }
+  is_oneshot: true
+}
+triggers {
+  name: "Story_18to19_Call_From_Vigor"
+  events {
+  }
+  conditions {
+  }
+  actions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c979b9336331280d00751e"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cf9c93d396639983900603c"
+  }
+  elseActions {
+  }
+  is_oneshot: true
+}
+triggers {
+  name: "Redmond Transition-Wyvern2"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "51f52810336331c41c00155e"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 4
+          }
+        }
+      }
+      args {
+        int_value: 2
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Open Scene"
+      args {
+        call_value {
+          functionName: "Get Map Item (Scene)"
+          args {
+            string_value: "Raven\'s Nest"
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5d042177396639380d0017b9"
+  }
+  elseActions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c979b9336331280d00751e"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+  }
+  is_oneshot: false
+}
+triggers {
+  name: "Redmond Transition-Coffin2"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "51f5663f336331181d003fe0"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 4
+          }
+        }
+      }
+      args {
+        int_value: 2
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Open Scene"
+      args {
+        call_value {
+          functionName: "Get Map Item (Scene)"
+          args {
+            string_value: "Coffin Motel"
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Travel"
+          }
+        }
+      }
+      args {
+        int_value: 6
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5d0423f5396639380d0017bb"
+  }
+  elseActions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c979b9336331280d00751e"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+  }
+  is_oneshot: false
+}
+triggers {
+  name: "Redmond Transition-Albino2"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "51f425ca336331981b000546"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 4
+          }
+        }
+      }
+      args {
+        int_value: 2
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f169b733633124330018bf"
+          }
+          args {
+            string_value: "Travel"
+          }
+        }
+      }
+      args {
+        int_value: 5
+      }
+    }
+    ops {
+      functionName: "Open Scene"
+      args {
+        call_value {
+          functionName: "Get Map Item (Scene)"
+          args {
+            string_value: "Low-Lifestyle_Apt"
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5d042ab3396639380d0017be"
+  }
+  elseActions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c979b9336331280d00751e"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+  }
+  is_oneshot: false
+}
+regions {
+  name: "Camera_Boundaries"
+  position {
+    x: -63
+    y: 224
+    width: 101
+    height: -69
+  }
+  enabledAtStart: true
+  is_camera_region: true
+  idRef {
+    id: "51f3f32b336331b439001904"
+  }
+  highlight_color {
+    r: 0
+    g: 0
+    b: 0
+    a: 1
+  }
+  visible_at_start: false
+  is_closet: false
+  is_teleporter_region: false
+  directional_light_dir {
+    x: -0.5
+    y: -1
+    z: -0.75
+  }
+  directional_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
   }
   ambient_light_color {
     r: 0.50196081
@@ -28865,15 +29467,105 @@ characters {
     z: 213
   }
   orientation: ORIENTATION_S
-  GeneralTags: "summonFail_3_1"
+  GeneralTags: "summonFail_3_1"
+  idRef {
+    id: "5b3d1dfc343032f02d001bc8"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Spirit/SpiritFire"
+    character_sheet_id: "Spirit Fire"
+    equipment_sheet_id: "Spirit Fire F1 Gear"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        magic: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        force: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
+      }
+      skills {
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
+      }
+      specializations {
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
+      }
+      archetypeName: "Guard - Seek And Destroy"
+      attitude: AttitudeAggressive
+      vulnerabilities {
+      }
+    }
+    team_id: "LoneStar"
+    char_name: "Fire Elemental"
+    GeneralTags: "summonFail_3_1"
+    enabled_at_start: false
+    pc_spawn_number: -1
+    ai_ignores: true
+    portrait {
+      filename: "Generic_Spirit_Fire"
+    }
+    karma: 242
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: 35
+    y: 0
+    z: 214
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "summonFail_3_2"
   idRef {
-    id: "5b3d1dfc343032f02d001bc8"
+    id: "5b3d1ed0343032f02d001bc9"
   }
   lod: 0
   character_instance {
     prefab_name: "Seattle:Spirit/SpiritFire"
     character_sheet_id: "Spirit Fire"
-    equipment_sheet_id: "Spirit Fire F1 Gear"
+    equipment_sheet_id: "Spirit Fire F2 Gear"
     character_mod {
       stats {
         body: 0
@@ -28937,7 +29629,7 @@ characters {
     }
     team_id: "LoneStar"
     char_name: "Fire Elemental"
-    GeneralTags: "summonFail_3_1"
+    GeneralTags: "summonFail_3_2"
     enabled_at_start: false
     pc_spawn_number: -1
     ai_ignores: true
@@ -28952,18 +29644,18 @@ characters {
   gridPoint {
     x: 35
     y: 0
-    z: 214
+    z: 215
   }
   orientation: ORIENTATION_S
-  GeneralTags: "summonFail_3_2"
+  GeneralTags: "summonFail_3_3"
   idRef {
-    id: "5b3d1ed0343032f02d001bc9"
+    id: "5b3d1ed1343032f02d001bca"
   }
   lod: 0
   character_instance {
     prefab_name: "Seattle:Spirit/SpiritFire"
     character_sheet_id: "Spirit Fire"
-    equipment_sheet_id: "Spirit Fire F2 Gear"
+    equipment_sheet_id: "Spirit Fire F3 Gear"
     character_mod {
       stats {
         body: 0
@@ -29027,7 +29719,7 @@ characters {
     }
     team_id: "LoneStar"
     char_name: "Fire Elemental"
-    GeneralTags: "summonFail_3_2"
+    GeneralTags: "summonFail_3_3"
     enabled_at_start: false
     pc_spawn_number: -1
     ai_ignores: true
@@ -29040,20 +29732,20 @@ characters {
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: 35
+    x: 36
     y: 0
-    z: 215
+    z: 213
   }
   orientation: ORIENTATION_S
-  GeneralTags: "summonFail_3_3"
+  GeneralTags: "summonFail_3_4"
   idRef {
-    id: "5b3d1ed1343032f02d001bca"
+    id: "5b3d1ed4343032f02d001bcb"
   }
   lod: 0
   character_instance {
     prefab_name: "Seattle:Spirit/SpiritFire"
     character_sheet_id: "Spirit Fire"
-    equipment_sheet_id: "Spirit Fire F3 Gear"
+    equipment_sheet_id: "Spirit Fire F4 Gear"
     character_mod {
       stats {
         body: 0
@@ -29117,7 +29809,7 @@ characters {
     }
     team_id: "LoneStar"
     char_name: "Fire Elemental"
-    GeneralTags: "summonFail_3_3"
+    GeneralTags: "summonFail_3_4"
     enabled_at_start: false
     pc_spawn_number: -1
     ai_ignores: true
@@ -29132,18 +29824,18 @@ characters {
   gridPoint {
     x: 36
     y: 0
-    z: 213
+    z: 214
   }
   orientation: ORIENTATION_S
-  GeneralTags: "summonFail_3_4"
+  GeneralTags: "summonFail_3_5"
   idRef {
-    id: "5b3d1ed4343032f02d001bcb"
+    id: "5b3d1ed6343032f02d001bcc"
   }
   lod: 0
   character_instance {
     prefab_name: "Seattle:Spirit/SpiritFire"
     character_sheet_id: "Spirit Fire"
-    equipment_sheet_id: "Spirit Fire F4 Gear"
+    equipment_sheet_id: "Spirit Fire F5 Gear"
     character_mod {
       stats {
         body: 0
@@ -29207,7 +29899,7 @@ characters {
     }
     team_id: "LoneStar"
     char_name: "Fire Elemental"
-    GeneralTags: "summonFail_3_4"
+    GeneralTags: "summonFail_3_5"
     enabled_at_start: false
     pc_spawn_number: -1
     ai_ignores: true
@@ -29222,18 +29914,18 @@ characters {
   gridPoint {
     x: 36
     y: 0
-    z: 214
+    z: 215
   }
   orientation: ORIENTATION_S
-  GeneralTags: "summonFail_3_5"
+  GeneralTags: "summonFail_3_6"
   idRef {
-    id: "5b3d1ed6343032f02d001bcc"
+    id: "5b3d1edb343032f02d001bcd"
   }
   lod: 0
   character_instance {
     prefab_name: "Seattle:Spirit/SpiritFire"
     character_sheet_id: "Spirit Fire"
-    equipment_sheet_id: "Spirit Fire F5 Gear"
+    equipment_sheet_id: "Spirit Fire F6 Gear"
     character_mod {
       stats {
         body: 0
@@ -29297,7 +29989,7 @@ characters {
     }
     team_id: "LoneStar"
     char_name: "Fire Elemental"
-    GeneralTags: "summonFail_3_5"
+    GeneralTags: "summonFail_3_6"
     enabled_at_start: false
     pc_spawn_number: -1
     ai_ignores: true
@@ -29310,20 +30002,122 @@ characters {
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: 36
+    x: -37
     y: 0
-    z: 215
+    z: 94
+  }
+  orientation: ORIENTATION_E
+  displayName: "Mike Score"
+  idRef {
+    id: "5d1e7fd8396639fc27000a81"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+      }
+      specializations {
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Outfit_SINless"
+    }
+    team_id: "Civilians"
+    char_name: "Mike Score"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    portrait {
+      filename: "pc_humanmale_00b"
+    }
+    karma: 6
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -47
+    y: 0
+    z: 95
   }
   orientation: ORIENTATION_S
-  GeneralTags: "summonFail_3_6"
+  GeneralTags: "Gouhin"
+  displayName: "Informant Security"
   idRef {
-    id: "5b3d1edb343032f02d001bcd"
+    id: "5dfd5584396639741000357a"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Spirit/SpiritFire"
-    character_sheet_id: "Spirit Fire"
-    equipment_sheet_id: "Spirit Fire F6 Gear"
+    prefab_name: "Seattle:Wealthy/HumanMaleAutumn"
+    character_sheet_id: "BaseCivilian"
     character_mod {
       stats {
         body: 0
@@ -29380,21 +30174,126 @@ characters {
         esp_control: 0
         drone_combat: 0
       }
-      archetypeName: "Guard - Seek And Destroy"
-      attitude: AttitudeAggressive
+      archetypeName: "Non-Combatant"
+      attitude: AttitudeCautious
       vulnerabilities {
       }
     }
-    team_id: "LoneStar"
-    char_name: "Fire Elemental"
-    GeneralTags: "summonFail_3_6"
-    enabled_at_start: false
+    team_id: "Civilians"
+    char_name: "Gouhin"
+    GeneralTags: "Gouhin"
     pc_spawn_number: -1
-    ai_ignores: true
+    spawn_type: SpawnType_Avatar
+    hiring_type: HiringType_None
     portrait {
-      filename: "Generic_Spirit_Fire"
+      filename: "pc_trollfemale_00b"
     }
-    karma: 242
+    karma: 6
+    hiring_cost_override: 3000
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -40
+    y: 0
+    z: 95
+  }
+  orientation: ORIENTATION_E
+  GeneralTags: "Mike_Score"
+  displayName: "Informant Corp"
+  idRef {
+    id: "5dfd6a37396639741000358f"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+      }
+      specializations {
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Outfit_SINless"
+    }
+    team_id: "Civilians"
+    char_name: "Mike Score"
+    GeneralTags: "Mike_Score"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    portrait {
+      filename: "pc_humanmale_00b"
+    }
+    karma: 6
   }
 }
 variables {
diff --git a/SR-Unlimited/data/scenes/the puyullup barrens.srt.txt b/SR-Unlimited/data/scenes/the puyullup barrens.srt.txt
index 02a4b50..d41f26d 100644
--- a/SR-Unlimited/data/scenes/the puyullup barrens.srt.txt	
+++ b/SR-Unlimited/data/scenes/the puyullup barrens.srt.txt	
@@ -5891,6 +5891,34 @@ triggers {
     }
   }
   conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        int_value: 18
+      }
+    }
   }
   actions {
     ops {
@@ -5958,6 +5986,50 @@ triggers {
     id: "52c5a2863363315c17001394"
   }
   elseActions {
+    ops {
+      functionName: "Trigger: Run Alternate Trigger"
+      args {
+        call_value {
+          functionName: "Get Map Item (Trigger)"
+          args {
+            string_value: "5d04331f396639941d00206a"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WaitOrNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
   }
   is_oneshot: true
 }
@@ -17531,139 +17603,408 @@ triggers {
   }
   is_oneshot: true
 }
-regions {
-  name: "CameraBind"
-  position {
-    x: 114
-    y: 192
-    width: 58
-    height: 123
-  }
-  enabledAtStart: true
-  is_camera_region: true
-  idRef {
-    id: "523b0b373363313424005009"
-  }
-  highlight_color {
-    r: 0
-    g: 0
-    b: 0
-    a: 1
-  }
-  visible_at_start: false
-  is_closet: false
-  is_teleporter_region: false
-  directional_light_dir {
-    x: -0.5
-    y: -1
-    z: -0.75
-  }
-  directional_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+triggers {
+  name: "Runs_Vigor"
+  events {
   }
-  ambient_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Fixer"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Vigor"
+      }
+    }
   }
-  ambience_template: ""
-  combat_music: ""
-  default_music: ""
-  loop_combat_music: true
-  loop_default_music: false
-  no_fow_in_region: false
-}
-regions {
-  name: "Car Collsion South"
-  position {
-    x: 45
-    y: 244
-    width: 1
-    height: 2
+  actions {
+    ops {
+      functionName: "Add To Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        int_value: 1
+      }
+    }
   }
-  enabledAtStart: true
-  is_camera_region: false
+  isActive: true
   idRef {
-    id: "53369d8433633104180048ca"
-  }
-  highlight_color {
-    r: 0
-    g: 0
-    b: 0
-    a: 1
+    id: "5cf9cb7b39663998390060e7"
   }
-  visible_at_start: false
-  is_closet: false
-  is_teleporter_region: false
-  directional_light_dir {
-    x: -0.5
-    y: -1
-    z: -0.75
-  }
-  directional_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
-  }
-  ambient_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+  elseActions {
   }
-  ambience_template: ""
-  combat_music: ""
-  default_music: ""
-  loop_combat_music: true
-  loop_default_music: false
-  no_fow_in_region: false
+  is_oneshot: true
 }
-regions {
-  name: "Car Collsion East"
-  position {
-    x: 43
-    y: 249
-    width: 2
-    height: 1
-  }
-  enabledAtStart: true
-  is_camera_region: false
-  idRef {
-    id: "53369d8433633104180048cb"
-  }
-  highlight_color {
-    r: 0
-    g: 0
-    b: 0
-    a: 1
-  }
-  visible_at_start: false
-  is_closet: false
-  is_teleporter_region: false
-  directional_light_dir {
-    x: -0.5
-    y: -1
-    z: -0.75
-  }
-  directional_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
-  }
-  ambient_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+triggers {
+  name: "Story_18to19_Call_From_Vigor"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "5284170b336331902a001fbe"
+          }
+        }
+      }
+    }
   }
-  ambience_template: ""
-  combat_music: ""
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 18
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 2
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c98c063363311417000934"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cf9c93d396639983900603c"
+  }
+  elseActions {
+  }
+  is_oneshot: true
+}
+triggers {
+  name: "Warehouse Enter2"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "5284170b336331902a001fbe"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 4
+          }
+        }
+      }
+      args {
+        int_value: 2
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Open Scene"
+      args {
+        call_value {
+          functionName: "Get Map Item (Scene)"
+          args {
+            string_value: "Warehouse Safehouse Pre-SetUp"
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5d04331f396639941d00206a"
+  }
+  elseActions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c98c063363311417000934"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
+  is_oneshot: true
+}
+regions {
+  name: "CameraBind"
+  position {
+    x: 114
+    y: 192
+    width: 58
+    height: 123
+  }
+  enabledAtStart: true
+  is_camera_region: true
+  idRef {
+    id: "523b0b373363313424005009"
+  }
+  highlight_color {
+    r: 0
+    g: 0
+    b: 0
+    a: 1
+  }
+  visible_at_start: false
+  is_closet: false
+  is_teleporter_region: false
+  directional_light_dir {
+    x: -0.5
+    y: -1
+    z: -0.75
+  }
+  directional_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambient_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambience_template: ""
+  combat_music: ""
+  default_music: ""
+  loop_combat_music: true
+  loop_default_music: false
+  no_fow_in_region: false
+}
+regions {
+  name: "Car Collsion South"
+  position {
+    x: 45
+    y: 244
+    width: 1
+    height: 2
+  }
+  enabledAtStart: true
+  is_camera_region: false
+  idRef {
+    id: "53369d8433633104180048ca"
+  }
+  highlight_color {
+    r: 0
+    g: 0
+    b: 0
+    a: 1
+  }
+  visible_at_start: false
+  is_closet: false
+  is_teleporter_region: false
+  directional_light_dir {
+    x: -0.5
+    y: -1
+    z: -0.75
+  }
+  directional_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambient_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambience_template: ""
+  combat_music: ""
+  default_music: ""
+  loop_combat_music: true
+  loop_default_music: false
+  no_fow_in_region: false
+}
+regions {
+  name: "Car Collsion East"
+  position {
+    x: 43
+    y: 249
+    width: 2
+    height: 1
+  }
+  enabledAtStart: true
+  is_camera_region: false
+  idRef {
+    id: "53369d8433633104180048cb"
+  }
+  highlight_color {
+    r: 0
+    g: 0
+    b: 0
+    a: 1
+  }
+  visible_at_start: false
+  is_closet: false
+  is_teleporter_region: false
+  directional_light_dir {
+    x: -0.5
+    y: -1
+    z: -0.75
+  }
+  directional_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambient_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
+  }
+  ambience_template: ""
+  combat_music: ""
   default_music: ""
   loop_combat_music: true
   loop_default_music: false
@@ -19813,30 +20154,254 @@ characters {
         }
       }
     }
-    conversationPoint {
-      conversationID: "52c9805333633114170007b9"
-      turnToFace: true
+    conversationPoint {
+      conversationID: "52c9805333633114170007b9"
+      turnToFace: true
+    }
+    interaction_info_text: ""
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Core/TrollFemale"
+    character_sheet_id: "CG Troll Decker"
+    character_mod {
+      stats {
+        body: 1
+        quickness: 1
+        strength: 1
+        charisma: 0
+        intelligence: 3
+        willpower: 0
+        essence: 0
+        magic: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        force: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+        ranged_combat: 0
+        close_combat: 4
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 6
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
+      }
+      specializations {
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 4
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
+      }
+      archetypeName: "Guard - Protect"
+      attitude: AttitudeAggressive
+      vulnerabilities {
+      }
+    }
+    team_id: "Civilians"
+    char_name: "Smash Jacker"
+    enabled_at_start: false
+    pc_spawn_number: -1
+    hiring_type: HiringType_None
+    cyberware_jack: "Datajack"
+    cyberware_body: "Bone Lacing Kevlar 2"
+    portrait {
+      filename: "pc_trollfemale_04d_devil"
+    }
+    karma: 119
+    hiring_cost_override: 1000
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: 75
+    y: 0
+    z: 299
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "Rescue"
+  displayName: "Hostage"
+  idRef {
+    id: "54529379363735f003005992"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Berlin:Humanis/HumanMaleHumanisLongSleeve_1"
+    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
+    character_mod {
+      stats {
+        body: -3
+        quickness: 0
+        strength: -5
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
+      }
+      skills {
+        ranged_combat: -1
+        close_combat: -3
+        dodge: 0
+      }
+      specializations {
+        rifle: -1
+        edged: -3
+        unarmed: 0
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Fist"
+    }
+    team_id: "Shadowrunners"
+    char_name: "Secured Target"
+    GeneralTags: "Rescue"
+    enabled_at_start: false
+    pc_spawn_number: -1
+    portrait {
+      filename: "pc_humanmale_06c_shavedhead"
+    }
+    karma: 86
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: 53
+    y: 0
+    z: 228
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "Escort"
+  GeneralTags: "A"
+  displayName: "Escort A"
+  idRef {
+    id: "5455c898363735ac16003464"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Scientist/HumanMaleScientist"
+    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
+    character_mod {
+      stats {
+        body: -3
+        quickness: 0
+        strength: -5
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
+      }
+      skills {
+        ranged_combat: -1
+        close_combat: -3
+        dodge: 0
+      }
+      specializations {
+        rifle: -1
+        edged: -3
+        unarmed: 0
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Fist"
     }
-    interaction_info_text: ""
+    team_id: "Shadowrunners"
+    char_name: "Secured Target"
+    GeneralTags: "Escort"
+    GeneralTags: "A"
+    enabled_at_start: false
+    pc_spawn_number: -1
+    portrait {
+      filename: "pc_humanmale_06c_shavedhead"
+    }
+    karma: 86
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: 53
+    y: 0
+    z: 229
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "Escort"
+  GeneralTags: "B"
+  displayName: "Escort B"
+  idRef {
+    id: "5455c898363735ac16003465"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Core/TrollFemale"
-    character_sheet_id: "CG Troll Decker"
+    prefab_name: "Seattle:Scientist/HumanFemaleScientistCoat"
+    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
     character_mod {
       stats {
-        body: 1
-        quickness: 1
-        strength: 1
+        body: -3
+        quickness: 0
+        strength: -5
         charisma: 0
-        intelligence: 3
+        intelligence: 0
         willpower: 0
         essence: 0
-        magic: 0
         hp: 0
         ap: 0
         armor: 0
-        force: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -19844,69 +20409,51 @@ characters {
         authority: 0
         protect_tether_range: 0
         move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
       }
       skills {
-        ranged_combat: 0
-        close_combat: 4
-        throwing_weapons: 0
-        spellcasting: 0
-        decking: 6
-        conjuring: 0
-        spirit_summoning: 0
-        drone_control: 0
-        biotech: 0
+        ranged_combat: -1
+        close_combat: -3
         dodge: 0
-        etiquette_corporate: 0
-        etiquette_security: 0
-        etiquette_gang: 0
-        etiquette_socialite: 0
-        chi_casting: 0
-        etiquette_shadowrunner: 0
-        etiquette_street: 0
-        etiquette_academic: 0
       }
       specializations {
-        pistol: 0
-        rifle: 0
-        shotgun: 0
-        smg: 0
-        edged: 4
+        rifle: -1
+        edged: -3
         unarmed: 0
-        spirit_control: 0
-        esp_control: 0
-        drone_combat: 0
       }
-      archetypeName: "Guard - Protect"
-      attitude: AttitudeAggressive
       vulnerabilities {
       }
     }
-    team_id: "Civilians"
-    char_name: "Smash Jacker"
+    equipment {
+      prefab_name: "Fist"
+    }
+    team_id: "Shadowrunners"
+    char_name: "Secured Target"
+    GeneralTags: "Escort"
+    GeneralTags: "B"
     enabled_at_start: false
     pc_spawn_number: -1
-    hiring_type: HiringType_None
-    cyberware_jack: "Datajack"
-    cyberware_body: "Bone Lacing Kevlar 2"
     portrait {
-      filename: "pc_trollfemale_04d_devil"
+      filename: "pc_humanmale_06c_shavedhead"
     }
-    karma: 119
-    hiring_cost_override: 1000
+    karma: 86
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: 75
+    x: 53
     y: 0
-    z: 299
+    z: 230
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Rescue"
-  displayName: "Hostage"
+  GeneralTags: "Escort"
+  GeneralTags: "C"
+  displayName: "Escort C"
   idRef {
-    id: "54529379363735f003005992"
+    id: "5455c898363735ac16003466"
   }
   lod: 0
   character_instance {
@@ -19953,7 +20500,8 @@ characters {
     }
     team_id: "Shadowrunners"
     char_name: "Secured Target"
-    GeneralTags: "Rescue"
+    GeneralTags: "Escort"
+    GeneralTags: "C"
     enabled_at_start: false
     pc_spawn_number: -1
     portrait {
@@ -19967,18 +20515,18 @@ characters {
   gridPoint {
     x: 53
     y: 0
-    z: 228
+    z: 231
   }
   orientation: ORIENTATION_S
   GeneralTags: "Escort"
-  GeneralTags: "A"
-  displayName: "Escort A"
+  GeneralTags: "D"
+  displayName: "Escort D"
   idRef {
-    id: "5455c898363735ac16003464"
+    id: "5455c898363735ac16003467"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Scientist/HumanMaleScientist"
+    prefab_name: "Seattle:Story/MaryLouiseTelestrian"
     character_sheet_id: "AGChemie_Cyberzombie_Lv1"
     character_mod {
       stats {
@@ -20022,7 +20570,7 @@ characters {
     team_id: "Shadowrunners"
     char_name: "Secured Target"
     GeneralTags: "Escort"
-    GeneralTags: "A"
+    GeneralTags: "D"
     enabled_at_start: false
     pc_spawn_number: -1
     portrait {
@@ -20031,36 +20579,164 @@ characters {
     karma: 86
   }
 }
+characters {
+  name: "system_spawner_playerSpawner"
+  gridPoint {
+    x: 167
+    y: 0
+    z: 309
+  }
+  orientation: ORIENTATION_W
+  GeneralTags: "isPlayer"
+  GeneralTags: "way_ajp_Private Hanger"
+  GeneralTags: "way_ajs_Eric"
+  idRef {
+    id: "58d2a5223037368247af1001"
+  }
+  lod: 0
+  character_instance {
+    character_mod {
+      archetypeName: "Player"
+    }
+    team_id: "Shadowrunners"
+    char_name: "New Actor"
+    GeneralTags: "isPlayer"
+    GeneralTags: "way_ajp_Private Hanger"
+    GeneralTags: "way_ajs_Eric"
+    enabled_at_start: true
+    pc_spawn_number: 1
+  }
+}
+characters {
+  name: "system_spawner_playerSpawner"
+  gridPoint {
+    x: 167
+    y: 0
+    z: 309
+  }
+  orientation: ORIENTATION_W
+  GeneralTags: "isPlayer"
+  GeneralTags: "way_ajp_Private Hanger"
+  GeneralTags: "way_ajs_Eric"
+  idRef {
+    id: "58d2a5223037368247af1002"
+  }
+  lod: 0
+  character_instance {
+    character_mod {
+      archetypeName: "Player"
+    }
+    team_id: "Shadowrunners"
+    char_name: "New Actor"
+    GeneralTags: "isPlayer"
+    GeneralTags: "way_ajp_Private Hanger"
+    GeneralTags: "way_ajs_Eric"
+    enabled_at_start: true
+    pc_spawn_number: 2
+  }
+}
+characters {
+  name: "system_spawner_playerSpawner"
+  gridPoint {
+    x: 167
+    y: 0
+    z: 309
+  }
+  orientation: ORIENTATION_W
+  GeneralTags: "isPlayer"
+  GeneralTags: "way_ajp_Private Hanger"
+  GeneralTags: "way_ajs_Eric"
+  idRef {
+    id: "58d2a5223037368247af1003"
+  }
+  lod: 0
+  character_instance {
+    character_mod {
+      archetypeName: "Player"
+    }
+    team_id: "Shadowrunners"
+    char_name: "New Actor"
+    GeneralTags: "isPlayer"
+    GeneralTags: "way_ajp_Private Hanger"
+    GeneralTags: "way_ajs_Eric"
+    enabled_at_start: true
+    pc_spawn_number: 3
+  }
+}
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
     x: 53
     y: 0
-    z: 229
+    z: 221
   }
-  orientation: ORIENTATION_S
-  GeneralTags: "Escort"
-  GeneralTags: "B"
-  displayName: "Escort B"
+  orientation: ORIENTATION_E
+  displayName: "Mike Score"
   idRef {
-    id: "5455c898363735ac16003465"
+    id: "5d1e801a396639fc27000a82"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Scientist/HumanFemaleScientistCoat"
-    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
     character_mod {
       stats {
-        body: -3
+        body: 0
         quickness: 0
-        strength: -5
+        strength: 0
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
         hp: 0
         ap: 0
-        armor: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -20068,68 +20744,58 @@ characters {
         authority: 0
         protect_tether_range: 0
         move_speed: 0
-        vision_peripheral_distance: 0
-        vision_cone_distance: 0
-        vision_cone_angle: 0
       }
       skills {
-        ranged_combat: -1
-        close_combat: -3
-        dodge: 0
       }
       specializations {
-        rifle: -1
-        edged: -3
-        unarmed: 0
       }
       vulnerabilities {
       }
     }
     equipment {
-      prefab_name: "Fist"
+      prefab_name: "Outfit_SINless"
     }
-    team_id: "Shadowrunners"
-    char_name: "Secured Target"
-    GeneralTags: "Escort"
-    GeneralTags: "B"
-    enabled_at_start: false
+    team_id: "Civilians"
+    char_name: "Mike Score"
     pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
     portrait {
-      filename: "pc_humanmale_06c_shavedhead"
+      filename: "pc_humanmale_00b"
     }
-    karma: 86
+    karma: 6
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: 53
+    x: 52
     y: 0
-    z: 230
+    z: 226
   }
   orientation: ORIENTATION_S
-  GeneralTags: "Escort"
-  GeneralTags: "C"
-  displayName: "Escort C"
+  GeneralTags: "Gouhin"
+  displayName: "Informant Security"
   idRef {
-    id: "5455c898363735ac16003466"
+    id: "5dfd55d1396639741000357b"
   }
   lod: 0
   character_instance {
-    prefab_name: "Berlin:Humanis/HumanMaleHumanisLongSleeve_1"
-    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
+    prefab_name: "Seattle:Wealthy/HumanMaleAutumn"
+    character_sheet_id: "BaseCivilian"
     character_mod {
       stats {
-        body: -3
+        body: 0
         quickness: 0
-        strength: -5
+        strength: 0
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
+        magic: 0
         hp: 0
         ap: 0
         armor: 0
+        force: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -20142,63 +20808,129 @@ characters {
         vision_cone_angle: 0
       }
       skills {
-        ranged_combat: -1
-        close_combat: -3
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
         dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
       }
       specializations {
-        rifle: -1
-        edged: -3
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
         unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
       }
+      archetypeName: "Non-Combatant"
+      attitude: AttitudeCautious
       vulnerabilities {
       }
     }
-    equipment {
-      prefab_name: "Fist"
-    }
-    team_id: "Shadowrunners"
-    char_name: "Secured Target"
-    GeneralTags: "Escort"
-    GeneralTags: "C"
-    enabled_at_start: false
+    team_id: "Civilians"
+    char_name: "Gouhin"
+    GeneralTags: "Gouhin"
     pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    hiring_type: HiringType_None
     portrait {
-      filename: "pc_humanmale_06c_shavedhead"
+      filename: "pc_trollfemale_00b"
     }
-    karma: 86
+    karma: 6
+    hiring_cost_override: 3000
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: 53
+    x: 54
     y: 0
-    z: 231
+    z: 224
   }
-  orientation: ORIENTATION_S
-  GeneralTags: "Escort"
-  GeneralTags: "D"
-  displayName: "Escort D"
+  orientation: ORIENTATION_E
+  GeneralTags: "Mike_Score"
+  displayName: "Informant Corp"
   idRef {
-    id: "5455c898363735ac16003467"
+    id: "5dfd6ab83966397410003591"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
   }
   lod: 0
   character_instance {
-    prefab_name: "Seattle:Story/MaryLouiseTelestrian"
-    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
     character_mod {
       stats {
-        body: -3
+        body: 0
         quickness: 0
-        strength: -5
+        strength: 0
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
         hp: 0
         ap: 0
-        armor: 0
         morale: 0
         discipline: 0
         awareness: 0
@@ -20206,120 +20938,26 @@ characters {
         authority: 0
         protect_tether_range: 0
         move_speed: 0
-        vision_peripheral_distance: 0
-        vision_cone_distance: 0
-        vision_cone_angle: 0
       }
       skills {
-        ranged_combat: -1
-        close_combat: -3
-        dodge: 0
       }
       specializations {
-        rifle: -1
-        edged: -3
-        unarmed: 0
       }
       vulnerabilities {
       }
     }
     equipment {
-      prefab_name: "Fist"
+      prefab_name: "Outfit_SINless"
     }
-    team_id: "Shadowrunners"
-    char_name: "Secured Target"
-    GeneralTags: "Escort"
-    GeneralTags: "D"
-    enabled_at_start: false
+    team_id: "Civilians"
+    char_name: "Mike Score"
+    GeneralTags: "Mike_Score"
     pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
     portrait {
-      filename: "pc_humanmale_06c_shavedhead"
-    }
-    karma: 86
-  }
-}
-characters {
-  name: "system_spawner_playerSpawner"
-  gridPoint {
-    x: 167
-    y: 0
-    z: 309
-  }
-  orientation: ORIENTATION_W
-  GeneralTags: "isPlayer"
-  GeneralTags: "way_ajp_Private Hanger"
-  GeneralTags: "way_ajs_Eric"
-  idRef {
-    id: "58d2a5223037368247af1001"
-  }
-  lod: 0
-  character_instance {
-    character_mod {
-      archetypeName: "Player"
+      filename: "pc_humanmale_00b"
     }
-    team_id: "Shadowrunners"
-    char_name: "New Actor"
-    GeneralTags: "isPlayer"
-    GeneralTags: "way_ajp_Private Hanger"
-    GeneralTags: "way_ajs_Eric"
-    enabled_at_start: true
-    pc_spawn_number: 1
-  }
-}
-characters {
-  name: "system_spawner_playerSpawner"
-  gridPoint {
-    x: 167
-    y: 0
-    z: 309
-  }
-  orientation: ORIENTATION_W
-  GeneralTags: "isPlayer"
-  GeneralTags: "way_ajp_Private Hanger"
-  GeneralTags: "way_ajs_Eric"
-  idRef {
-    id: "58d2a5223037368247af1002"
-  }
-  lod: 0
-  character_instance {
-    character_mod {
-      archetypeName: "Player"
-    }
-    team_id: "Shadowrunners"
-    char_name: "New Actor"
-    GeneralTags: "isPlayer"
-    GeneralTags: "way_ajp_Private Hanger"
-    GeneralTags: "way_ajs_Eric"
-    enabled_at_start: true
-    pc_spawn_number: 2
-  }
-}
-characters {
-  name: "system_spawner_playerSpawner"
-  gridPoint {
-    x: 167
-    y: 0
-    z: 309
-  }
-  orientation: ORIENTATION_W
-  GeneralTags: "isPlayer"
-  GeneralTags: "way_ajp_Private Hanger"
-  GeneralTags: "way_ajs_Eric"
-  idRef {
-    id: "58d2a5223037368247af1003"
-  }
-  lod: 0
-  character_instance {
-    character_mod {
-      archetypeName: "Player"
-    }
-    team_id: "Shadowrunners"
-    char_name: "New Actor"
-    GeneralTags: "isPlayer"
-    GeneralTags: "way_ajp_Private Hanger"
-    GeneralTags: "way_ajs_Eric"
-    enabled_at_start: true
-    pc_spawn_number: 3
+    karma: 6
   }
 }
 variables {
diff --git a/SR-Unlimited/data/scenes/the rat's nest.srt.txt b/SR-Unlimited/data/scenes/the rat's nest.srt.txt
index 256c84f..979a76b 100644
--- a/SR-Unlimited/data/scenes/the rat's nest.srt.txt	
+++ b/SR-Unlimited/data/scenes/the rat's nest.srt.txt	
@@ -584,35 +584,46 @@ triggers {
         }
       }
     }
+  }
+  conditions {
     ops {
-      functionName: "On Item Interaction"
+      functionName: "Comparison (bool)"
       args {
         call_value {
-          functionName: "Get Map Item (InteractableObject)"
+          functionName: "Get Story Variable (bool)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
           args {
-            string_value: "53e136733864616811004190"
+            string_value: "Called_Andy"
           }
         }
       }
-    }
-  }
-  conditions {
-    ops {
-      functionName: "Comparison (int)"
       args {
-        int_value: 19
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
       }
       args {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "Comparison Ops"
+            string_value: "bool"
           }
           args {
-            int_value: 1
+            int_value: 0
           }
         }
       }
+    }
+    ops {
+      functionName: "Comparison (int)"
       args {
         call_value {
           functionName: "Get Story Variable (int)"
@@ -624,6 +635,20 @@ triggers {
           }
         }
       }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 21
+      }
     }
   }
   actions {
@@ -13115,15 +13140,23 @@ triggers {
   }
   conditions {
     ops {
-      functionName: "Comparison (int)"
+      functionName: "Comparison (bool)"
       args {
-        int_value: 19
+        call_value {
+          functionName: "Get Story Variable (bool)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Called_Andy"
+          }
+        }
       }
       args {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "Comparison Ops"
+            string_value: "IsOrIsNot"
           }
           args {
             int_value: 1
@@ -13132,12 +13165,12 @@ triggers {
       }
       args {
         call_value {
-          functionName: "Get Story Variable (int)"
+          functionName: "Get Preset Value (int)"
           args {
-            string_value: "51f15c62336331d02c00440e"
+            string_value: "bool"
           }
           args {
-            string_value: "StoryStep"
+            int_value: 0
           }
         }
       }
@@ -13323,38 +13356,168 @@ triggers {
   }
   conditions {
     ops {
-      functionName: "Comparison (Actor)"
+      functionName: "Evaluate Team Survival Percentage"
       args {
         call_value {
-          functionName: "Triggering Target Actor"
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 100
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (string)"
+          args {
+            string_value: "FactionList"
+          }
+          args {
+            int_value: 2
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (SceneDimension)"
+          args {
+            string_value: "Default"
+          }
+        }
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Add Item to Team"
+      args {
+        call_value {
+          functionName: "Get Map Item (Item)"
+          args {
+            string_value: "Soka_Recording"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (string)"
+          args {
+            string_value: "FactionList"
+          }
+          args {
+            int_value: 0
+          }
         }
       }
       args {
         call_value {
           functionName: "Get Preset Value (int)"
           args {
-            string_value: "IsOrIsNot"
+            string_value: "WithOrWithout"
           }
           args {
             int_value: 1
           }
         }
       }
+      args {
+        call_value {
+          functionName: "Get Map Item (SceneDimension)"
+          args {
+            string_value: "Default"
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Set Variable (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "PlotInformation"
+          }
+        }
+      }
+      args {
+        string_value: "Give Piper his recording."
+      }
+    }
+    ops {
+      functionName: "Set Screen Label"
+      args {
+        string_value: "Plot Information"
+      }
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "PlotInformation"
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5d0eec30396639001f0010a2"
+          }
+        }
+      }
       args {
         call_value {
           functionName: "Get Map Item (Actor)"
           args {
-            string_value: "5a46b4bc653737342c002e41"
+            string_value: "58dbf37d303736104a89d1b0"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
           }
         }
       }
     }
-  }
-  actions {
     ops {
-      functionName: "End Story With Epilogue"
+      functionName: "Enable/Disable Trigger"
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "EnableOrDisable"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
       args {
-        string_value: "vSoka"
+        call_value {
+          functionName: "Get Map Item (Trigger)"
+          args {
+            string_value: "58de4c2e303736f53bb68215"
+          }
+        }
       }
     }
   }
@@ -14809,6 +14972,66 @@ triggers {
   }
   is_oneshot: true
 }
+triggers {
+  name: "Runs_Vigor"
+  events {
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (string)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (string)"
+          args {
+          }
+          args {
+            string_value: "Current_Fixer"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        string_value: "Vigor"
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Add To Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        int_value: 1
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cf9cb7b39663998390060e7"
+  }
+  elseActions {
+  }
+  is_oneshot: true
+}
 regions {
   name: "Main Camera Bind"
   position {
@@ -19324,7 +19547,7 @@ characters {
   gridPoint {
     x: -62.270004
     y: 0
-    z: -84.380005
+    z: -89.380005
   }
   orientation: ORIENTATION_E
   GeneralTags: "step20"
@@ -19379,11 +19602,11 @@ characters {
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -62
+    x: -68
     y: 0
-    z: -87
+    z: -82
   }
-  orientation: ORIENTATION_E
+  orientation: ORIENTATION_S
   GeneralTags: "step20"
   displayName: "red sam"
   idRef {
@@ -19392,8 +19615,7 @@ characters {
   lod: 0
   character_instance {
     prefab_name: "Seattle:Story/RenrakuSamurai"
-    character_sheet_id: "Lonestar_Lv6_Heavy_SMG"
-    equipment_sheet_id: "Lonestar_Lv6_SMG_Gear"
+    character_sheet_id: "Lonestar_Lv5_Captain"
     equipment_sheet_id: "Lonestar_Lv6_Captain_Gear"
     character_mod {
       stats {
@@ -19456,26 +19678,33 @@ characters {
       vulnerabilities {
       }
     }
+    equipment {
+      prefab_name: "Berlin_Ex 2 ArmTech MGL-6"
+    }
+    equipment {
+      prefab_name: "Berlin_AR 2 FN HAR"
+    }
     team_id: "LoneStar"
-    char_name: "New Actor"
+    char_name: "Renraku Samuri Heavy Weapons"
     GeneralTags: "step20"
     enabled_at_start: false
     pc_spawn_number: -1
-    cyberware_body: "tattoo_body_earth"
+    cyberware_body: "Dermal Plating Mk 2"
+    cyberware_left_arm: "Muscle Augmentation"
     portrait {
       filename: ""
     }
-    karma: 105
+    karma: 98
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -61
+    x: -68
     y: 0
-    z: -87
+    z: -80
   }
-  orientation: ORIENTATION_E
+  orientation: ORIENTATION_S
   GeneralTags: "step20"
   displayName: "red sam"
   idRef {
@@ -19484,8 +19713,7 @@ characters {
   lod: 0
   character_instance {
     prefab_name: "Seattle:Story/RenrakuSamurai"
-    character_sheet_id: "Lonestar_Lv6_Heavy_SMG"
-    equipment_sheet_id: "Lonestar_Lv6_SMG_Gear"
+    character_sheet_id: "Lonestar_Lv5_Human_Mage"
     equipment_sheet_id: "Lonestar_Lv6_Captain_Gear"
     character_mod {
       stats {
@@ -19497,9 +19725,9 @@ characters {
         willpower: 0
         essence: 0
         magic: 0
-        hp: 0
+        hp: 10
         ap: 0
-        armor: 0
+        armor: 3
         force: 0
         morale: 0
         discipline: 0
@@ -19516,10 +19744,10 @@ characters {
         ranged_combat: 0
         close_combat: 0
         throwing_weapons: 0
-        spellcasting: 0
+        spellcasting: -4
         decking: 0
-        conjuring: 0
-        spirit_summoning: 0
+        conjuring: 5
+        spirit_summoning: 4
         drone_control: 0
         biotech: 0
         dodge: 0
@@ -19539,7 +19767,7 @@ characters {
         smg: 0
         edged: 0
         unarmed: 0
-        spirit_control: 0
+        spirit_control: 4
         esp_control: 0
         drone_combat: 0
       }
@@ -19548,100 +19776,20 @@ characters {
       vulnerabilities {
       }
     }
-    team_id: "LoneStar"
-    char_name: "New Actor"
-    GeneralTags: "step20"
-    enabled_at_start: false
-    pc_spawn_number: -1
-    cyberware_body: "tattoo_body_earth"
-    portrait {
-      filename: ""
+    equipment {
+      prefab_name: "Berlin_IdolDragonslayer"
     }
-    karma: 105
-  }
-}
-characters {
-  name: "chars_icon_playerIcon"
-  gridPoint {
-    x: -62
-    y: 0
-    z: -88
-  }
-  orientation: ORIENTATION_E
-  GeneralTags: "step20"
-  displayName: "red sam"
-  idRef {
-    id: "58de2f2c303736f53bb681f3"
-  }
-  lod: 0
-  character_instance {
-    prefab_name: "Seattle:Story/RenrakuSamurai"
-    character_sheet_id: "Lonestar_Lv6_Heavy_SMG"
-    equipment_sheet_id: "Lonestar_Lv6_SMG_Gear"
-    equipment_sheet_id: "Lonestar_Lv6_Captain_Gear"
-    character_mod {
-      stats {
-        body: 0
-        quickness: 0
-        strength: 0
-        charisma: 0
-        intelligence: 0
-        willpower: 0
-        essence: 0
-        magic: 0
-        hp: 0
-        ap: 0
-        armor: 0
-        force: 0
-        morale: 0
-        discipline: 0
-        awareness: 0
-        perception: 0
-        authority: 0
-        protect_tether_range: 0
-        move_speed: 0
-        vision_peripheral_distance: 0
-        vision_cone_distance: 0
-        vision_cone_angle: 0
-      }
-      skills {
-        ranged_combat: 0
-        close_combat: 0
-        throwing_weapons: 0
-        spellcasting: 0
-        decking: 0
-        conjuring: 0
-        spirit_summoning: 0
-        drone_control: 0
-        biotech: 0
-        dodge: 0
-        etiquette_corporate: 0
-        etiquette_security: 0
-        etiquette_gang: 0
-        etiquette_socialite: 0
-        chi_casting: 0
-        etiquette_shadowrunner: 0
-        etiquette_street: 0
-        etiquette_academic: 0
-      }
-      specializations {
-        pistol: 0
-        rifle: 0
-        shotgun: 0
-        smg: 0
-        edged: 0
-        unarmed: 0
-        spirit_control: 0
-        esp_control: 0
-        drone_combat: 0
-      }
-      archetypeName: "Guard - Seek And Destroy"
-      attitude: AttitudeAggressive
-      vulnerabilities {
-      }
+    equipment {
+      prefab_name: "Berlin_Spell Toxic Bolt 2"
+    }
+    equipment {
+      prefab_name: "Spell Slow 2"
+    }
+    equipment {
+      prefab_name: "Berlin_Spell Slow 1"
     }
     team_id: "LoneStar"
-    char_name: "New Actor"
+    char_name: "Red Samuri Shaman"
     GeneralTags: "step20"
     enabled_at_start: false
     pc_spawn_number: -1
@@ -19649,28 +19797,26 @@ characters {
     portrait {
       filename: ""
     }
-    karma: 105
+    karma: 114
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -61
+    x: -63
     y: 0
-    z: -88
+    z: -94
   }
   orientation: ORIENTATION_E
   GeneralTags: "step20"
   displayName: "red sam"
   idRef {
-    id: "58de2f2e303736f53bb681f4"
+    id: "58de2f2c303736f53bb681f3"
   }
   lod: 0
   character_instance {
     prefab_name: "Seattle:Story/RenrakuSamurai"
     character_sheet_id: "Lonestar_Lv6_Heavy_SMG"
-    equipment_sheet_id: "Lonestar_Lv6_SMG_Gear"
-    equipment_sheet_id: "Lonestar_Lv6_Captain_Gear"
     character_mod {
       stats {
         body: 0
@@ -19718,9 +19864,9 @@ characters {
       }
       specializations {
         pistol: 0
-        rifle: 0
+        rifle: 1
         shotgun: 0
-        smg: 0
+        smg: -2
         edged: 0
         unarmed: 0
         spirit_control: 0
@@ -19732,26 +19878,29 @@ characters {
       vulnerabilities {
       }
     }
+    equipment {
+      prefab_name: "Berlin_SR 2 Walther MA-2100"
+    }
     team_id: "LoneStar"
-    char_name: "New Actor"
+    char_name: "Red Samuri Sniper"
     GeneralTags: "step20"
     enabled_at_start: false
     pc_spawn_number: -1
-    cyberware_body: "tattoo_body_earth"
+    cyberware_eyes: "Vision Magnification Eyes 2"
     portrait {
       filename: ""
     }
-    karma: 105
+    karma: 103
   }
 }
 characters {
   name: "chars_icon_playerIcon"
   gridPoint {
-    x: -61
+    x: -68
     y: 0
-    z: -86
+    z: -84
   }
-  orientation: ORIENTATION_E
+  orientation: ORIENTATION_S
   GeneralTags: "step20"
   displayName: "red mage"
   idRef {
@@ -19761,7 +19910,6 @@ characters {
   character_instance {
     prefab_name: "Seattle:Story/RenrakuSamurai"
     character_sheet_id: "Lonestar_Lv5_Human_Mage"
-    equipment_sheet_id: "Lonestar_Lv6_SMG_Gear"
     equipment_sheet_id: "Lonestar_Lv6_Captain_Gear"
     equipment_sheet_id: "Lonestar_Lv6_Mage_Gear"
     character_mod {
@@ -19826,7 +19974,7 @@ characters {
       }
     }
     team_id: "LoneStar"
-    char_name: "New Actor"
+    char_name: "Red Samuri Mage"
     GeneralTags: "step20"
     enabled_at_start: false
     pc_spawn_number: -1
@@ -20798,7 +20946,7 @@ characters {
   gridPoint {
     x: -61
     y: 0
-    z: -84
+    z: -89
   }
   orientation: ORIENTATION_E
   GeneralTags: "step20"
@@ -20814,14 +20962,14 @@ characters {
     character_mod {
       stats {
         body: 0
-        quickness: 0
-        strength: 0
+        quickness: 1
+        strength: 1
         charisma: 0
         intelligence: 0
         willpower: 0
         essence: 0
         magic: 0
-        hp: 0
+        hp: 10
         ap: 0
         armor: 0
         force: 0
@@ -20862,7 +21010,7 @@ characters {
         pistol: 0
         rifle: 0
         shotgun: 0
-        smg: 0
+        smg: 2
         edged: 6
         unarmed: 0
         spirit_control: 0
@@ -20886,7 +21034,304 @@ characters {
     portrait {
       filename: "backerpc_humanmale_davidfry_joshuamorgan"
     }
-    karma: 147
+    karma: 166
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -84
+    y: 0
+    z: -20
+  }
+  orientation: ORIENTATION_E
+  displayName: "Mike Score"
+  idRef {
+    id: "5d1e807f396639fc27000a83"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+      }
+      specializations {
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Outfit_SINless"
+    }
+    team_id: "Civilians"
+    char_name: "Mike Score"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    portrait {
+      filename: "pc_humanmale_00b"
+    }
+    karma: 6
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -86
+    y: 0
+    z: -16
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "Gouhin"
+  displayName: "Informant Security"
+  idRef {
+    id: "5dfd5661396639741000357d"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Wealthy/HumanMaleAutumn"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        magic: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        force: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
+      }
+      skills {
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
+      }
+      specializations {
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
+      }
+      archetypeName: "Non-Combatant"
+      attitude: AttitudeCautious
+      vulnerabilities {
+      }
+    }
+    team_id: "Civilians"
+    char_name: "Gouhin"
+    GeneralTags: "Gouhin"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    hiring_type: HiringType_None
+    portrait {
+      filename: "pc_trollfemale_00b"
+    }
+    karma: 6
+    hiring_cost_override: 3000
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -83
+    y: 0
+    z: -21
+  }
+  orientation: ORIENTATION_E
+  GeneralTags: "Mike_Score"
+  displayName: "Informant Corp"
+  idRef {
+    id: "5dfd6b013966397410003592"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+      }
+      specializations {
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Outfit_SINless"
+    }
+    team_id: "Civilians"
+    char_name: "Mike Score"
+    GeneralTags: "Mike_Score"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Matrix
+    portrait {
+      filename: "pc_humanmale_00b"
+    }
+    karma: 6
   }
 }
 variables {
diff --git a/SR-Unlimited/data/scenes/underground 93.srt.txt b/SR-Unlimited/data/scenes/underground 93.srt.txt
index 34fed82..2c9db7e 100644
--- a/SR-Unlimited/data/scenes/underground 93.srt.txt	
+++ b/SR-Unlimited/data/scenes/underground 93.srt.txt	
@@ -540,6 +540,34 @@ triggers {
     }
   }
   conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        int_value: 21
+      }
+    }
   }
   actions {
     ops {
@@ -576,8 +604,52 @@ triggers {
     id: "399994163363315801000f71"
   }
   elseActions {
+    ops {
+      functionName: "Trigger: Run Alternate Trigger"
+      args {
+        call_value {
+          functionName: "Get Map Item (Trigger)"
+          args {
+            string_value: "5d02e7e83966397015005455"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WaitOrNot"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
   }
-  is_oneshot: true
+  is_oneshot: false
 }
 triggers {
   name: "RizerTalk"
@@ -9470,84 +9542,395 @@ triggers {
   }
   is_oneshot: true
 }
-regions {
-  name: "New Region"
-  position {
-    x: -10
-    y: -20
-    width: 15
-    height: 25
-  }
-  enabledAtStart: true
-  is_camera_region: true
-  idRef {
-    id: "399994563363315801000d61"
-  }
-  highlight_color {
-    r: 0
-    g: 0
-    b: 0
-    a: 1
-  }
-  visible_at_start: false
-  is_closet: false
-  is_teleporter_region: false
-  directional_light_dir {
-    x: -0.5
-    y: -1
-    z: -0.75
-  }
-  directional_light_color {
-    r: 0.31764707
-    g: 0.31764707
-    b: 0.31764707
-    a: 1
+triggers {
+  name: "Story_18to19_Call_From_Vigor"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "399994113363315801000f70"
+          }
+        }
+      }
+    }
   }
-  ambient_light_color {
-    r: 0.31764707
-    g: 0.31764707
-    b: 0.31764707
-    a: 0.82352942
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 18
+      }
+    }
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Runs_Vigor"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 3
+          }
+        }
+      }
+      args {
+        int_value: 2
+      }
+    }
   }
-  ambience_template: "bar-busy"
-  combat_music: ""
-  default_music: "Seattle-Bar07"
-  loop_combat_music: true
-  loop_default_music: true
-  no_fow_in_region: false
-}
-regions {
-  name: "RizeCheck"
-  position {
-    x: -8
-    y: -8
-    width: 1
-    height: 3
+  actions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5cf0c4b03966391c14003a20"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "52c9819a33633160150046ef"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
   }
-  enabledAtStart: true
-  is_camera_region: false
+  isActive: true
   idRef {
-    id: "399993db3363315801000f6a"
+    id: "5cf9c93d396639983900603c"
   }
-  highlight_color {
-    r: 0
-    g: 0
-    b: 0
-    a: 1
+  elseActions {
   }
-  visible_at_start: false
-  is_closet: false
-  is_teleporter_region: false
-  directional_light_dir {
-    x: -0.5
-    y: -1
-    z: -0.75
+  is_oneshot: true
+}
+triggers {
+  name: "In_Person"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "399990773363315801000e97"
+          }
+        }
+      }
+    }
   }
-  directional_light_color {
-    r: 0.50196081
-    g: 0.50196081
-    b: 0.50196081
-    a: 1
+  conditions {
+  }
+  actions {
+    ops {
+      functionName: "Set Variable (bool)"
+      args {
+        call_value {
+          functionName: "Get Variable (bool)"
+          args {
+            string_value: "In_Person"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5cfedcb439663914090008b8"
+  }
+  elseActions {
+  }
+  is_oneshot: true
+}
+triggers {
+  name: "Story_21_Piper_Call"
+  events {
+    ops {
+      functionName: "On Item Interaction"
+      args {
+        call_value {
+          functionName: "Get Map Item (InteractableObject)"
+          args {
+            string_value: "399994113363315801000f70"
+          }
+        }
+      }
+    }
+  }
+  conditions {
+    ops {
+      functionName: "Comparison (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "StoryStep"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "Comparison Ops"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+      args {
+        int_value: 21
+      }
+    }
+    ops {
+      functionName: "Comparison (bool)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (bool)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Piper_Called"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "IsOrIsNot"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "bool"
+          }
+          args {
+            int_value: 0
+          }
+        }
+      }
+    }
+  }
+  actions {
+    ops {
+      functionName: "Start Conversation"
+      args {
+        call_value {
+          functionName: "Get Map Item (Conversation)"
+          args {
+            string_value: "5d02e80a3966397015005456"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Map Item (Actor)"
+          args {
+            string_value: "5d02ecf5396639701500547f"
+          }
+        }
+      }
+      args {
+        call_value {
+          functionName: "Get Preset Value (int)"
+          args {
+            string_value: "WithOrWithout"
+          }
+          args {
+            int_value: 1
+          }
+        }
+      }
+    }
+  }
+  isActive: true
+  idRef {
+    id: "5d02e7e83966397015005455"
+  }
+  elseActions {
+    ops {
+      functionName: "Open Scene"
+      args {
+        call_value {
+          functionName: "Get Map Item (Scene)"
+          args {
+            string_value: "northcity"
+          }
+        }
+      }
+    }
+    ops {
+      functionName: "Set Variable (int)"
+      args {
+        call_value {
+          functionName: "Get Story Variable (int)"
+          args {
+            string_value: "51f15c62336331d02c00440e"
+          }
+          args {
+            string_value: "Travel"
+          }
+        }
+      }
+      args {
+        int_value: 3
+      }
+    }
+  }
+  is_oneshot: false
+}
+regions {
+  name: "New Region"
+  position {
+    x: -10
+    y: -20
+    width: 15
+    height: 25
+  }
+  enabledAtStart: true
+  is_camera_region: true
+  idRef {
+    id: "399994563363315801000d61"
+  }
+  highlight_color {
+    r: 0
+    g: 0
+    b: 0
+    a: 1
+  }
+  visible_at_start: false
+  is_closet: false
+  is_teleporter_region: false
+  directional_light_dir {
+    x: -0.5
+    y: -1
+    z: -0.75
+  }
+  directional_light_color {
+    r: 0.31764707
+    g: 0.31764707
+    b: 0.31764707
+    a: 1
+  }
+  ambient_light_color {
+    r: 0.31764707
+    g: 0.31764707
+    b: 0.31764707
+    a: 0.82352942
+  }
+  ambience_template: "bar-busy"
+  combat_music: ""
+  default_music: "Seattle-Bar07"
+  loop_combat_music: true
+  loop_default_music: true
+  no_fow_in_region: false
+}
+regions {
+  name: "RizeCheck"
+  position {
+    x: -8
+    y: -8
+    width: 1
+    height: 3
+  }
+  enabledAtStart: true
+  is_camera_region: false
+  idRef {
+    id: "399993db3363315801000f6a"
+  }
+  highlight_color {
+    r: 0
+    g: 0
+    b: 0
+    a: 1
+  }
+  visible_at_start: false
+  is_closet: false
+  is_teleporter_region: false
+  directional_light_dir {
+    x: -0.5
+    y: -1
+    z: -0.75
+  }
+  directional_light_color {
+    r: 0.50196081
+    g: 0.50196081
+    b: 0.50196081
+    a: 1
   }
   ambient_light_color {
     r: 0.50196081
@@ -9565,9 +9948,9 @@ regions {
 regions {
   name: "New Region"
   position {
-    x: -60
+    x: -61
     y: 9
-    width: 4
+    width: 9
     height: 8
   }
   enabledAtStart: true
@@ -11414,6 +11797,285 @@ characters {
     hiring_cost_override: 1000
   }
 }
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: 17
+    y: 0
+    z: -19
+  }
+  orientation: ORIENTATION_S
+  displayName: "Piper"
+  idRef {
+    id: "5d02ecf5396639701500547f"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Story/Coroner"
+    character_sheet_id: "Lvl6_Dwarf_Decker"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        magic: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        force: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
+      }
+      specializations {
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
+      }
+      archetypeName: "Guard - Protect"
+      attitude: AttitudeAggressive
+    }
+    team_id: "Civilians"
+    char_name: "Piper"
+    pc_spawn_number: -1
+    hiring_type: HiringType_None
+    portrait {
+      filename: "npc_dwarfmale_coroner"
+    }
+    portrait_code_override: ""
+    karma: 156
+    hiring_cost_override: 1000
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -58
+    y: 0
+    z: 13
+  }
+  orientation: ORIENTATION_S
+  GeneralTags: "Gouhin"
+  displayName: "Informant Security"
+  idRef {
+    id: "5dfd56f7396639741000357e"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Seattle:Wealthy/HumanMaleAutumn"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        magic: 0
+        hp: 0
+        ap: 0
+        armor: 0
+        force: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+        vision_peripheral_distance: 0
+        vision_cone_distance: 0
+        vision_cone_angle: 0
+      }
+      skills {
+        ranged_combat: 0
+        close_combat: 0
+        throwing_weapons: 0
+        spellcasting: 0
+        decking: 0
+        conjuring: 0
+        spirit_summoning: 0
+        drone_control: 0
+        biotech: 0
+        dodge: 0
+        etiquette_corporate: 0
+        etiquette_security: 0
+        etiquette_gang: 0
+        etiquette_socialite: 0
+        chi_casting: 0
+        etiquette_shadowrunner: 0
+        etiquette_street: 0
+        etiquette_academic: 0
+      }
+      specializations {
+        pistol: 0
+        rifle: 0
+        shotgun: 0
+        smg: 0
+        edged: 0
+        unarmed: 0
+        spirit_control: 0
+        esp_control: 0
+        drone_combat: 0
+      }
+      archetypeName: "Non-Combatant"
+      attitude: AttitudeCautious
+      vulnerabilities {
+      }
+    }
+    team_id: "Civilians"
+    char_name: "Gouhin"
+    GeneralTags: "Gouhin"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    hiring_type: HiringType_None
+    portrait {
+      filename: "pc_trollfemale_00b"
+    }
+    karma: 6
+    hiring_cost_override: 3000
+  }
+}
+characters {
+  name: "chars_icon_playerIcon"
+  gridPoint {
+    x: -56
+    y: 0
+    z: 12
+  }
+  orientation: ORIENTATION_E
+  GeneralTags: "Mike_Score"
+  displayName: "Informant Corp"
+  idRef {
+    id: "5dfd6b433966397410003593"
+  }
+  interactionRoot {
+    isEnabled: true
+    interactionRadius: 1
+    prerequisites {
+      ops {
+        functionName: "Comparison (bool)"
+        args {
+          call_value {
+            functionName: "Get Story Variable (bool)"
+            args {
+              string_value: "51f15c62336331d02c00440e"
+            }
+            args {
+              string_value: "Informant_Corp"
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "IsOrIsNot"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+        args {
+          call_value {
+            functionName: "Get Preset Value (int)"
+            args {
+              string_value: "bool"
+            }
+            args {
+              int_value: 1
+            }
+          }
+        }
+      }
+    }
+    conversationPoint {
+      conversationID: "5cfb0f85396639e01e002442"
+      turnToFace: true
+    }
+    interaction_info_text: "Mike Score"
+  }
+  lod: 0
+  character_instance {
+    prefab_name: "Berlin:Business/HumanMaleBusinessMan"
+    character_sheet_id: "BaseCivilian"
+    character_mod {
+      stats {
+        body: 0
+        quickness: 0
+        strength: 0
+        charisma: 0
+        intelligence: 0
+        willpower: 0
+        essence: 0
+        hp: 0
+        ap: 0
+        morale: 0
+        discipline: 0
+        awareness: 0
+        perception: 0
+        authority: 0
+        protect_tether_range: 0
+        move_speed: 0
+      }
+      skills {
+      }
+      specializations {
+      }
+      vulnerabilities {
+      }
+    }
+    equipment {
+      prefab_name: "Outfit_SINless"
+    }
+    team_id: "Civilians"
+    char_name: "Mike Score"
+    GeneralTags: "Mike_Score"
+    pc_spawn_number: -1
+    spawn_type: SpawnType_Avatar
+    portrait {
+      filename: "pc_humanmale_00b"
+    }
+    karma: 6
+  }
+}
 variables {
   int_value: 0
   variableref_value {
@@ -11422,6 +12084,14 @@ variables {
     typeName: "int"
   }
 }
+variables {
+  bool_value: false
+  variableref_value {
+    scope: TsVariableScope_Scene
+    name: "In_Person"
+    typeName: "bool"
+  }
+}
 mapEvents: "MoveRizer"
 mapEvents: "MainDelayCancel"
 mapEvents: "HealthPact"
diff --git a/SR-Unlimited/project.cpack.txt b/SR-Unlimited/project.cpack.txt
index 8a981d3..c103afc 100644
--- a/SR-Unlimited/project.cpack.txt
+++ b/SR-Unlimited/project.cpack.txt
@@ -4,7 +4,7 @@ project_version: "2019j Oct 14 2000z -- Bolivar"
 author_name: "the SR Unlimited team"
 synopsis: "SR Unlimited"
 has_story: true
-read_only: false
+read_only: true
 preview_image: "preview"
 game_version_required: 1.26
 content_pack_dependencies {
