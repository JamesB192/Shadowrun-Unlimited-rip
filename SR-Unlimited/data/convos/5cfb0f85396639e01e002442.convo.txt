idRef {
  id: "5cfb0f85396639e01e002442"
}
ui_name: "Informant Corp"
nodes {
  idRef {
    id: "5cfb1031396639e01e002452"
  }
  index: 0
  text: "Why yes I am? I assume you\'re the one Frosty sent?"
  branches {
    responseText: "I\'m $(s.name).I understand you know about corporations."
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cfb1403396639e01e002502"
  }
  index: 1
  text: "Yes, and I\'ll part with it for free the first time as a favor to Frosty. After that, it isn\'t free."
  branches {
    responseText: "A Mtsuhama RHQ employee has a sculpture I need.\n\n{{GM}}You give him a description.{{/GM}}"
    nextNodeIndex: 2
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cfb14f3396639e01e002537"
  }
  index: 2
  text: "I know the item in question. It\'s not on the top floor of the building as you\'d expect. It\'s actually in the \"wellness center\". It can only be reached from the right elevator. The manager of it keeps it in his desk most of the time. His office is on the west side. There is new security to worry about, including card readers that you can\'t go anyplace without beating."
  branches {
    responseText: "Have anything else for me?"
    nextNodeIndex: 3
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cfc0cf9396639a42e00451b"
  }
  index: 3
  text: "What else do you want to know?"
  branches {
    responseText: "Is there a quick way out?"
    nextNodeIndex: 4
  }
  branches {
    responseText: "Have they installed new security hardware?"
    nextNodeIndex: 5
  }
  branches {
    responseText: "Is the security force itself any different."
    nextNodeIndex: 12
  }
  branches {
    responseText: "Nothing more."
    nextNodeIndex: 16
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cfc0e0c396639a42e004547"
  }
  index: 4
  text: "There is a helicopter on the roof. The Executive has a cover over the controls. As a favor to Frosty, I can give you today\'s code."
  branches {
    responseText: "I\'ve already got them."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Elev_Codes_1"
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  branches {
    responseText: "Thank you."
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Elev_Codes_1"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add Item to Team"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Elev_Codes_1"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cfc2161396639a42e004641"
  }
  index: 5
  text: "Yes. Code readers on the elevators. "
  branches {
    responseText: "Any way you can think of to get past the code readers?"
    nextNodeIndex: 6
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cfc2221396639a42e004675"
  }
  index: 6
  text: "Four ways I can think of. Fool the guards, disable the readers, the Matrix, or just get a real one. "
  branches {
    responseText: "How would you fool the guards?"
    nextNodeIndex: 7
  }
  branches {
    responseText: "How would I disable the card readers?"
    nextNodeIndex: 8
  }
  branches {
    responseText: "For the Matrix I assume just download a code."
    nextNodeIndex: 10
  }
  branches {
    responseText: "How would I get a real one?"
    nextNodeIndex: 11
  }
  branches {
    responseText: "No more questions about the code readers."
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cfc22d5396639a42e004699"
  }
  index: 7
  text: "On the bottom floor on the right is a maintenance room locked with magic. Get past it and grab some uniforms, there should be ones with cards. If an alarm is sounded you should be able to convince the guards it wasn\'t you."
  branches {
    responseText: "Solid plan. Even if the alarm sounds if you can fast-talk well you\'ll still be fine. Any other ways?"
    nextNodeIndex: 6
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cfc2538396639a42e004710"
  }
  index: 8
  text: "They are on a separate power system. In the garage level to the right is a room with a system for controlling power and a jack point. The power system can be shut down there without jacking in."
  branches {
    responseText: "Seems like a dumb way to do things. What keeps people out of the room."
    nextNodeIndex: 9
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cfc26b9396639a42e004735"
  }
  index: 9
  text: "The job was given to someones\' nephew. They got the obvious result of that kind of nepotism. The only thing between you and it is a regular locked door, like many others in the building."
  branches {
    responseText: "Nepotism like that is great for me. Any other ideas?"
    nextNodeIndex: 6
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cfc28fa396639a42e00476d"
  }
  index: 10
  text: "Yes, it\'s kept the same place as the door lock overrides. But it can only be downloaded from outside, guess they don\'t want their employees to let friends in."
  branches {
    responseText: "Easy if you are or have a decker. Any other ideas."
    nextNodeIndex: 6
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d02aa1e3966397015004cbb"
  }
  index: 11
  text: "I don\'t know. How do you usually get security cards? Just steal one from an employee or kill a guard."
  branches {
    responseText: "Simple enough. What are my other options?"
    nextNodeIndex: 6
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d04934739663984100045c1"
  }
  index: 12
  text: "Yes. They add a few roof guards. The alarm reinforcements now include a Knight-Errant Captain, Magical Support, and someone on loan from a source I don\'t know yet. But that\'s not the worst part."
  branches {
    responseText: "Yeah. What is?"
    nextNodeIndex: 13
  }
  branches {
    responseText: "Well, don\'t keep me in suspense."
    nextNodeIndex: 14
  }
  branches {
    responseText: "Unless you\'re about to say they have a nuke it won\'t be a problem for me."
    nextNodeIndex: 15
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d0528173966398410004731"
  }
  index: 13
  text: "They installed a rapid response system. So they will get to wherever the elevator is quite quickly."
  branches {
    responseText: "Great so I\'ll only have a little time once the alarm goes off. So what else?"
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d0529453966398410004800"
  }
  index: 14
  text: "As I was going to the worst is the rapid response system. So they will get to wherever the elevator is quite quickly."
  branches {
    responseText: "Yeah for me. Guess I better avoid setting off alarms then. Anything else?"
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d052a853966398410004910"
  }
  index: 15
  text: "You might change your tune when you hear about the rapid response system. They can get to where the elevator is quite quickly."
  branches {
    responseText: "That will complicate things. Thanks for the heads up. What else you got?"
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  branches {
    responseText: "That just means they\'ll die faster. Anything else?"
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d00b445396639fc29001aa6"
  }
  index: 16
  text: "If you need me in the future you can reach me the same way."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corp_Number"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Information"
          }
        }
      }
      args {
        string_value: "Time to break into Mitsuhama RHQ in the Northside."
      }
    }
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Journal"
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "text"
          }
          args {
            string_value: "Information"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5cfb12c0396639e01e00246e"
  }
  index: 17
  text: "Yes, I am, and I assume you\'re from Frosty. I wish she had told me how frightfully rude you are."
  branches {
    responseText: "She said you had info on the megacorps."
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: "Are you Mike Score?"
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corp_Number"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corps_Approval"
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  nextNodeIndex: 0
  hideIfUnavailable: true
}
roots {
  responseText: "Mister Score, I presume?"
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corp_Number"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corps_Approval"
          }
        }
      }
      args {
        int_value: 10
      }
    }
  }
  nextNodeIndex: 0
  hideIfUnavailable: true
  auxiliaryLink: true
}
roots {
  responseText: "Oi frag face, you Mike Score?"
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corp_Number"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corps_Approval"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Informant_Corps_Approval"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            int_value: 10
          }
        }
      }
    }
  }
  nextNodeIndex: 17
  hideIfUnavailable: true
}
roots {
  responseText: "Still willing to do Frosty that favor and tell me about Mitsuhama?"
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Story_Mission"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 10
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corp_Number"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corps_Approval"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  nextNodeIndex: 2
  hideIfUnavailable: true
  auxiliaryLink: true
}
roots {
  responseText: "Sir can I still use the favor you owe Frosty to get information on Mitsuhama?"
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Story_Mission"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 10
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corp_Number"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corps_Approval"
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  nextNodeIndex: 2
  hideIfUnavailable: true
  auxiliaryLink: true
}
roots {
  responseText: "Oi, fragface. I\'m here to collect for Frosty in information."
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Story_Mission"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 10
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corp_Number"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corps_Approval"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            int_value: 0
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            int_value: 8
          }
        }
      }
    }
  }
  nextNodeIndex: 2
  hideIfUnavailable: true
  auxiliaryLink: true
}
roots {
  responseText: "Oi, fragface. I\'m here to collect for Frosty in information."
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Story_Mission"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 10
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corp_Number"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corps_Approval"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            int_value: 0
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            int_value: 8
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corps_Approval"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Informant_Corps_Approval"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
  nextNodeIndex: 2
  hideIfUnavailable: true
  auxiliaryLink: true
}
roots {
  responseText: "Nothing right now."
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Informant_Corp_Number"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: -1
}
