idRef {
  id: "5cf09ba53966391c14002de3"
}
ui_name: "Story-Piper"
nodes {
  idRef {
    id: "5cf0a2c93966391c14002e15"
  }
  index: 0
  text: "Whiz chummer, thanks for the save."
  branches {
    responseText: "Whiz chummer was no real effort."
    nextNodeIndex: 1
  }
  branches {
    responseText: "Well, now you owe me dwarf!"
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 4
            }
          }
        }
      }
    }
    nextNodeIndex: 31
    hideIfUnavailable: true
  }
  branches {
    responseText: "Well, now you owe me you, puny little dwarf!"
    conditions {
      ops {
        functionName: "Compare Actor Race"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Race"
            }
            args {
              int_value: 4
            }
          }
        }
      }
    }
    nextNodeIndex: 32
    hideIfUnavailable: true
  }
  branches {
    responseText: "I didn\'t do it for you. We need to talk about my brother."
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0a3183966391c14002e1d"
  }
  index: 1
  text: "Then you must have some arctic blood in those veins."
  branches {
    responseText: "It gets a little colder every day. Now we need to talk about my brother."
    nextNodeIndex: 2
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0a4c23966391c14002e67"
  }
  index: 2
  text: "Sure. Why not? Who\'s your brother?"
  branches {
    responseText: "An infiltration specialist that used to run with you and your crew. His name was Joshua."
    nextNodeIndex: 3
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0a4f43966391c14002e6b"
  }
  index: 3
  text: "No fraggin\' way! Sorry, no offense, but I don\'t see the family resemblance."
  branches {
    responseText: "Yeah we got that a lot, but trust me, he was my blood and now I need information."
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0afc83966391c14003241"
  }
  index: 4
  text: "Whatever I can do to help, Joshua was a good friend."
  branches {
    responseText: "Why don\'t you give me a run-down of what happened that night?"
    nextNodeIndex: 5
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b01d3966391c1400325c"
  }
  index: 5
  text: "Do you want the quick version or the whole story?"
  branches {
    responseText: "This is kind of important Piper, give me the details."
    nextNodeIndex: 6
  }
  branches {
    responseText: "I kinda pieced most of it together, I just need to know the important stuff."
    nextNodeIndex: 27
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b0f13966391c14003298"
  }
  index: 6
  text: "Okay, from the top. We were hired by a Johnson no one had ever worked with before. Even our usual fixer was a little leery of him, but the creds were good and no one\'s ever on the up-and-up in our line of work. So we figured \"what the heck?\"."
  branches {
    responseText: ""
    nextNodeIndex: 7
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b3333966391c140033fa"
  }
  index: 7
  text: "The job was relatively simple, albeit dangerous as all hell. We were hired to break into a lab in the Renraku Arcology and retrieve some package held in a small wood box."
  branches {
    responseText: ""
    nextNodeIndex: 8
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b3643966391c14003424"
  }
  index: 8
  text: "The run was weeks in the planning. It was the usual team, the Four Horsemen as Joshua liked to call us. I never liked horses, and Raven said it sounded sexist. Henry, of course, could care less what we called ourselves as long as the creds were flowing."
  branches {
    responseText: "You\'re rambling Piper."
    nextNodeIndex: 9
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b3973966391c14003450"
  }
  index: 9
  text: "Sorry, terrible attention span. Anyway so the plan was straightforward, I would run Matrix overwatch remotely. Joshua would infiltrate the compound and disable the hard-wired security I couldn\'t reach via the matrix, and Raven and Henry would follow him inside once the coast was clear."
  branches {
    responseText: ""
    nextNodeIndex: 10
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b3db3966391c1400347f"
  }
  index: 10
  text: "Between Raven\'s magic and Henry\'s guns, they made it to the target with little trouble. The box was right where the Johnson said it would be, so Joshua just scooped it up and stuffed it into his bag. Of course, the alarm would have tripped right then and there if I hadn\'t had the forethought to disable the sensor."
  branches {
    responseText: "What was in the box?!"
    nextNodeIndex: 11
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b4003966391c14003483"
  }
  index: 11
  text: "Hold on. You wanted the story, now let me finish. Anyways, there was a little extra looting to be done, and then the team slipped back out an emergency exit. The alarm sensor disabled, once again, by me. Yup, I\'m pretty good at what I do."
  branches {
    responseText: "Focus Piper."
    nextNodeIndex: 12
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b44f3966391c140034e4"
  }
  index: 12
  text: "Oh ya, anyways. So we head back to the safe house and get ready for the meet. We decided to try and dig up some intel on the box before we called the contact and let him know we had the goods. Joshua wanted to get it done right away because he had family coming in from out of town... I\'m guessing that\'s you."
  branches {
    responseText: ""
    nextNodeIndex: 13
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b4953966391c14003518"
  }
  index: 13
  text: "So I spent hours scouring for intel on this thing, and there was not a lick of info on it. And did I mention we couldn\'t get the damn thing to open? We tried everything but blowtorches and dynamite. Eventually, we just gave in and called the contact and set up the meet."
  branches {
    responseText: ""
    nextNodeIndex: 14
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b4b93966391c1400354e"
  }
  index: 14
  text: "The night Joshua died, everything went wrong. Raven said Joshua didn\'t have to attend the meet because Mr. Johnson had chosen a public place, with lots of people around. Little chance of a double-cross. So Joshua went to pick you up and give you some grand tour of the city."
  branches {
    responseText: ""
    nextNodeIndex: 15
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b5043966391c14003551"
  }
  index: 15
  text: "A few hours before the meet the safe house was attacked. I and Henry were out because one of his contacts had come back to him with some info on the box, and we had a little time to kill. Poor Raven didn\'t have a chance.\n\n{{GM}}Piper looks like he\'s choking back some tears{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 16
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b5853966391c140035c7"
  }
  index: 16
  text: "I picked it up from the camera footage. The damn Johnson double-crossed us in our home! He came in with a fire team and trashed the place. Raven tried to get out the back and was gunned down like a dog. He must have spent his time gathering intel on us and waited \'til he got the call to strike."
  branches {
    responseText: ""
    nextNodeIndex: 17
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b59e3966391c140035ca"
  }
  index: 17
  text: "But the joke was on him. Henry had taken the box with us when we left. So that son-of-a-bitch got nothing! I just wished Raven had decided to come with us instead of doing last-minute preparations."
  branches {
    responseText: "I\'m sorry Piper, that was a terrible night for everyone it would seem."
    nextNodeIndex: 18
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b5c83966391c140035cd"
  }
  index: 18
  text: "Henry was devastated, and when we tried to find Joshua that\'s when we got the second bad news of the night. Henry roared at the sky like a wild animal and swore revenge on anyone and everything, then just sat down in the street and got real quiet..."
  branches {
    responseText: "Whatever happened to the box?"
    nextNodeIndex: 19
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b6193966391c1400360e"
  }
  index: 19
  text: "Good question. Last I saw it, Henry said he was gonna bury it somewhere that \"Johnson bastard would never find it.\""
  branches {
    responseText: "Great. So where the hell do we find this Henry guy?"
    nextNodeIndex: 20
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b65c3966391c14003651"
  }
  index: 20
  text: "So the only guy who actually knows where this damn box is... is not only crazy? But locked up?"
  branches {
    responseText: "Don\'t tell me..."
    nextNodeIndex: 21
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b80a3966391c140036dd"
  }
  index: 21
  text: "Yup, Henry is currently renting a padded room off the United Canadian and American States. But don\'t get me wrong it ain\'t by choice."
  branches {
    responseText: "So the only guy who actually knows where this damn box is... is not only crazy? But locked up?"
    nextNodeIndex: 22
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b8b03966391c14003723"
  }
  index: 22
  text: "And why do you want the box so bad? You don\'t even know what\'s in it."
  branches {
    responseText: "Maybe not. And in truth, I don\'t care beyond curiosity\'s sake. What I do know is that Renraku and Soka want it bad. I\'m guessing if I can get my hands on it, I can lure Soka out personally and with any luck get some payback for what he did to Joshua."
    nextNodeIndex: 23
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0ba7e3966391c14003809"
  }
  index: 23
  text: "Have you tried just heading to Soka\'s house and shooting him when he opens the door? Seems simple enough."
  branches {
    responseText: "I spent six months after Joshua\'s death researching Renraku and Soka. There\'s pretty much no getting to the guy short of storming the Arcology. Maybe someday if it comes to that, but I\'ve learned a few things since I started this shadowrunning gig, and nothing beats a solid plan. Right now that plan is to pull Soka out of his comfort zone and out into the open. I might be able to walk away from this if I play my cards right."
    nextNodeIndex: 24
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0bae73966391c1400389b"
  }
  index: 24
  text: "Why not just drop a line at Renraku saying you recovered the box that was stolen a while back. Tell \'em to send Soka or no deal. See? That\'s a solid plan."
  branches {
    responseText: "Wow, Piper. That might work. All I have to do is describe the box, and that should be enough to convince them I have it."
    nextNodeIndex: 25
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0bb433966391c140038e8"
  }
  index: 25
  text: "{{GM}}Piper chuckles a little{{/GM}}\n\nAnd you thought this was gonna be hard. I\'ll see if I have something in my old files. One condition I want a recording of that drekhead going down."
  branches {
    responseText: "Deal. You find a picture of the box, and I get you a recording."
    actions {
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "StoryStep"
            }
          }
        }
        args {
          int_value: 18
        }
      }
    }
    nextNodeIndex: 26
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0bbc03966391c14003936"
  }
  index: 26
  text: "No problem. If you need anything else, just let me know."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b0bd3966391c14003279"
  }
  index: 27
  text: "Okay, just the highlights. So I and Joshua were on a team with two other \'runners, Raven and Henry. We were hired by some Mr. Johnson no one had ever worked with before. We were supposed to break into some lab in the Renraku Arcology and steal some mystery box they had under lock and key. The team went in while I worked matrix overwatch and pilfered the item easy."
  branches {
    responseText: "Except they saw Joshua\'s reflection on a camera feed after the fact. That\'s how they knew he was involved."
    nextNodeIndex: 28
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0ba1b3966391c14003775"
  }
  index: 28
  text: "A reflection? Stupid rookie mistake. Anyways, we made a meeting with the Johnson to drop off the goods the same night you showed up in the city. Raven said it would be okay because it was a public meet with the Johnson. While I and Henry were out running an errand, the bastard Johnson double-crossed us at our safe house a few hours before the meet, killing Raven and trashing the place. They were looking for the chrome box we stole, but Henry had taken it with him when we left."
  branches {
    responseText: "Okay, so where\'s the box now?"
    nextNodeIndex: 29
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b1273966391c140032b9"
  }
  index: 29
  text: "Henry buried it somewhere, then got himself locked up in the nuthouse."
  branches {
    responseText: "What?!"
    nextNodeIndex: 30
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0b18c3966391c140032fa"
  }
  index: 30
  text: "Well, there\'s more to it than that, but you wanted the short version."
  branches {
    responseText: "Whatever. I just care about that box."
    nextNodeIndex: 22
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0a4283966391c14002e54"
  }
  index: 31
  text: "Simmer down, I\'ll help ya. I\'m guessing it\'s why you sprung me."
  branches {
    responseText: "Good call. I need some information about my brother."
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0a6fa3966391c14003196"
  }
  index: 32
  text: "Simmer down greenskin, I\'ll help ya. I\'m guessing it\'s why you sprung me."
  branches {
    responseText: "Good call. I need some information about my brother."
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5cf0d5ea3966391c14003c5b"
  }
  index: 33
  text: "Hey $(l.name)! I\'m still working on finding a picture of the box so you can lure Soka out and frag him good, and of course, get a recording for me."
  branches {
    responseText: "Nothing I guess. Talk to you later."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d02f4363966397015005663"
  }
  index: 34
  text: "{{GM}}Piper beams at you excitedly with a huge smile.{{/GM}}\n\nI finally found a picture of the box. I also found this.\n\n{{GM}}He hands you small brooch. It\'s a white flower with green petals.{{/GM}}"
  branches {
    responseText: "This is lovely, thank you, but why?"
    nextNodeIndex: 35
  }
  branches {
    responseText: "Why the jewelry?"
    nextNodeIndex: 37
  }
  branches {
    responseText: "Maybe I can pawn this. Thanks for the pocket change."
    nextNodeIndex: 39
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Team"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Hidden_Camera"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Call_Andy"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d02f6a6396639701500570f"
  }
  index: 35
  text: "It belonged to Joshua. It\'s a concealed camera. Most security looks for small black specs in jewelry, but cameras don\'t have to have black lenses anymore. I thought it appropriate that something of Joshua\'s capture Soka\'s last moments.\n\n{{GM}}His eyes are suspiciously bright, and he wipes something from the corner of them."
  branches {
    responseText: "I think that\'s perfect.\n\n{{GM}}Your own eyes get suspiciously wet as well.{{/GM}}"
    nextNodeIndex: 36
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d02faa13966397015005814"
  }
  index: 36
  text: "Just call someone who can get in contact with Soka. Maybe someone from your old life. You can use the payphone by the penumbra clinic. Payphones without jack points are rare but almost impossible to trace."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "PlotInformation"
          }
        }
      }
      args {
        string_value: "Call a \"friend\" from your past so you can meet Soka and end this. Use the pay phone by the penumbra clinic."
      }
    }
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Plot Information"
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "PlotInformation"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d02f6a6396639701500570f"
  }
  index: 37
  text: "It belonged to Joshua. It\'s a concealed camera. Most security looks for small black specs in jewelry, but cameras don\'t have to have black lenses anymore. I thought it appropriate that something of Joshua\'s capture Soka\'s last moments.\n\n{{GM}}His eyes are suspiciously bright, and he wipes something from the corner of them."
  branches {
    responseText: "At least it\'s a camera Soka doesn\'t know."
    nextNodeIndex: 38
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d02faa13966397015005814"
  }
  index: 38
  text: "Just call someone who can get in contact with Soka. Maybe someone from your old life. You can use the payphone by the penumbra clinic. Payphones without jack points are rare but almost impossible to trace."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "PlotInformation"
          }
        }
      }
      args {
        string_value: "Call a \"friend\" from your past so you can meet Soka and end this. Use the pay phone by the penumbra clinic."
      }
    }
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Plot Information"
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "PlotInformation"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d02f6a6396639701500570f"
  }
  index: 39
  text: "Don\'t do that! It\'s a concealed camera that used to be Joshua\'s.\n\n{{GM}}He seems legitimately upset by your suggestion "
  branches {
    responseText: "Jeez. Calm chummer. I didn\'t know."
    nextNodeIndex: 40
  }
  branches {
    responseText: "I guess we do have a deal. You\'ll get your recording."
    nextNodeIndex: 41
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d02faa13966397015005814"
  }
  index: 40
  text: "{{GM}}He looks relieved.{{/GM}}\n\nJust call someone who can get in contact with Soka. Maybe someone from your old life. You can use the payphone by the penumbra clinic. Payphones without jack points are rare but almost impossible to trace."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "PlotInformation"
          }
        }
      }
      args {
        string_value: "Call a \"friend\" from your past so you can meet Soka and end this. Use the pay phone by the penumbra clinic."
      }
    }
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Plot Information"
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "PlotInformation"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d02faa13966397015005814"
  }
  index: 41
  text: "{{GM}}He looks resigned.{{/GM}}\n\nJust call someone who can get in contact with Soka. Maybe someone from your old life. You can use the payphone by the penumbra clinic. Payphones without jack points are rare but almost impossible to trace."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "PlotInformation"
          }
        }
      }
      args {
        string_value: "Call a \"friend\" from your past so you can meet Soka and end this. Use the pay phone by the penumbra clinic."
      }
    }
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Plot Information"
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "PlotInformation"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d0323e63966397015005c87"
  }
  index: 42
  text: "Do you have the recording?\n\n{{GM}}Piper looks crestfallen when you shake your head no.{{/GM}}"
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d0324d73966397015005cf0"
  }
  index: 43
  text: "Do you have the recording?"
  branches {
    responseText: "Yes."
    nextNodeIndex: 44
  }
  branches {
    responseText: "Of course."
    nextNodeIndex: 46
  }
  branches {
    responseText: "Nothing there was even close to a match for me."
    nextNodeIndex: 48
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5d0325a13966397015005d5e"
  }
  index: 44
  text: "Well, don\'t just stand there give it to me.\n\n{{GM}}Piper excitedly takes it from you.{{/GM}}"
  branches {
    responseText: "Enjoy. And goodbye. Hopefully for the last time."
    nextNodeIndex: 45
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Team"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Soka_Recording"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d03266c3966397015005e31"
  }
  index: 45
  text: "{{GM}}He vaguely waves you goodbye as he turns back to hi prize.{{/GM}}"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 8
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "StoryStep"
          }
        }
      }
      args {
        int_value: 22
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "PlotInformation"
          }
        }
      }
      args {
      }
    }
    ops {
      functionName: "Remove Screen Label"
      args {
        string_value: "Plot Information"
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Alarm_Already_Active"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d0326cd3966397015005e33"
  }
  index: 46
  text: "Icy as ever I see.\n\n{{GM}}He smiles as he takes the recording from you.{{/GM}}"
  branches {
    responseText: "Goodbye. Now I\'ll return to my true home."
    nextNodeIndex: 47
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Team"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Soka_Recording"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d0327683966397015005ea1"
  }
  index: 47
  text: "Where\'s that?\n\n{{GM}}You just give him an enigmatic smile as you leave.{{/GM}}"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 8
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "StoryStep"
          }
        }
      }
      args {
        int_value: 22
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "PlotInformation"
          }
        }
      }
      args {
      }
    }
    ops {
      functionName: "Remove Screen Label"
      args {
        string_value: "Plot Information"
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Alarm_Already_Active"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d0327fa3966397015005ea3"
  }
  index: 48
  text: "{{GM}}He whistles appreciatively as he takes the recording from you.{{/GM}}\n\nSounds like you were made for this life."
  branches {
    responseText: "Maybe I was."
    nextNodeIndex: 49
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Team"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Soka_Recording"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5d03292d3966397015005f85"
  }
  index: 49
  text: "Well, don\'t forget me when you\'re famous, or rather infamous.\n\n{{GM}}He turns back to his prize as you exit.{{/GM}}"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 8
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "StoryStep"
          }
        }
      }
      args {
        int_value: 22
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "PlotInformation"
          }
        }
      }
      args {
      }
    }
    ops {
      functionName: "Remove Screen Label"
      args {
        string_value: "Plot Information"
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Alarm_Already_Active"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5e0692ce396639a03a00143c"
  }
  index: 50
  text: "Hi $(l.name). I was just about to call you. {{GM}}Piper looks nervous and sweat.{{/GM}}"
  branches {
    responseText: "Just calm down. Tell me why you were going to call me."
    nextNodeIndex: 51
  }
  branches {
    responseText: "People know that you know something. I need to know it too."
    nextNodeIndex: 52
    auxiliaryLink: true
  }
  branches {
    responseText: "You got something to tell me, then spit it out."
    nextNodeIndex: 52
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5e069428396639a03a00152b"
  }
  index: 51
  text: "{{GM}}He takes a visible breath to calm his nerves.{{/GM}} Okay. No easy way to say this you didn\'t kill Soka.{{GM}}He tenses for an explosion from you.{{/GM}}"
  branches {
    responseText: "What do you mean?"
    nextNodeIndex: 52
  }
  branches {
    responseText: "What!? I totally that guy good."
    nextNodeIndex: 52
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5e0694e6396639a03a00161d"
  }
  index: 52
  text: "I\'ve looked over the recording you gave me. The guy in it is good, but he isn\'t as good as Soka supposed to be. More importantly, while he could kill Joshua, there is no way he\'d do it as easily as you describe. {{GM}}He looks sad and angry talking about Joshua\'s death.{{/GM}}"
  branches {
    responseText: "So it wasn\'t him. What does that mean?"
    nextNodeIndex: 53
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5e069d05396639a03a00178e"
  }
  index: 53
  text: "Well, two things come to mind. First, what was Soka doing that was so important? Second, he had other Red Samurai there so Renraku new about what was happening. So what will it take to finally get them to send him for real? {{GM}}Piper starts to regain his usual energy as he talks.{{/GM}}"
  branches {
    responseText: "Okay, so what do we do to answer those."
    nextNodeIndex: 54
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5e069eae396639a03a00180d"
  }
  index: 54
  text: "Well not sure as to the first one, but the second has an obvious answer. Go meet Henry and find the box. They may not believe a picture, but a live video is another matter. {{GM}}He looks almost excited to send you on this mission.{{/GM}}"
  branches {
    responseText: "Okay. Any thoughts as to how?"
    nextNodeIndex: 55
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5e06a234396639a03a00198c"
  }
  index: 55
  text: "Yeah, I know an informant. I\'ll text you his info."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "StoryStep"
          }
        }
      }
      args {
        int_value: 27
      }
    }
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "StoryStep"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 17
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "StoryStep"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 18
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "StoryStep"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        int_value: 20
      }
    }
  }
  nextNodeIndex: 33
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "StoryStep"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 21
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Piper_Called"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Call_Andy"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Hidden_Camera"
          }
        }
      }
    }
  }
  nextNodeIndex: 34
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Soka_Recording"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "StoryStep"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 21
      }
    }
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Hidden_Camera"
          }
        }
      }
    }
  }
  nextNodeIndex: 42
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Soka_Recording"
          }
        }
      }
    }
  }
  nextNodeIndex: 43
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "StoryStep"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 26
      }
    }
  }
  nextNodeIndex: 50
  hideIfUnavailable: true
}
