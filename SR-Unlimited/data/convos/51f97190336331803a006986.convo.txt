idRef {
  id: "51f97190336331803a006986"
}
ui_name: "Merchant-Quick_Jack"
nodes {
  idRef {
    id: "51f971b4336331803a00698d"
  }
  index: 0
  text: "Let me show you my wares..."
  branches {
    responseText: ""
    actions {
      ops {
        functionName: "Open Store Screen From Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "51f970d3336331803a006985"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0ac46336331640d006fe4"
  }
  index: 1
  text: "Okay, the going rate is 10 MP of storage for 500\302\245."
  branches {
    responseText: "Yeah, I want to upgrade my storage."
    nextNodeIndex: 2
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0ac46336331640d006fed"
  }
  index: 2
  text: "Okay, let\'s see what you have."
  branches {
    responseText: ""
    nextNodeIndex: 3
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a23b336331640d00771e"
  }
  index: 3
  text: "Just a basic Sony unit. You currently have $(story.Deck_Total_Storage) MP."
  branches {
    responseText: "I want an additional 10 MP of storage."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 500
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Deck_Storage_Upgrade"
            }
          }
        }
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Deck_Total_Storage"
            }
          }
        }
        args {
          call_value {
            functionName: "Arithmetic (int)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Deck_Storage"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Arithmetic Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Deck_Storage_Upgrade"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 500
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "Sorry chummer, I can\'t afford it."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 500
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a4fd336331640d00780f"
  }
  index: 4
  text: "Okay, the going rate is 10 MP of storage for 500\302\245."
  branches {
    responseText: "Yeah, I want to upgrade my storage."
    nextNodeIndex: 5
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a4fd336331640d007818"
  }
  index: 5
  text: "Okay, let\'s see what you have."
  branches {
    responseText: ""
    nextNodeIndex: 6
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a4fd336331640d007823"
  }
  index: 6
  text: "Just a basic Sony unit. You currently have $(story.Deck_Total_Storage) MP."
  branches {
    responseText: "I want an additional 10 MP of storage."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 500
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Deck_Storage_Upgrade"
            }
          }
        }
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Deck_Total_Storage"
            }
          }
        }
        args {
          call_value {
            functionName: "Arithmetic (int)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Deck_Storage"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Arithmetic Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Deck_Storage_Upgrade"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 500
        }
      }
      ops {
        functionName: "No Effect"
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "Sorry chummer, I can\'t afford it."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 500
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a4fe336331640d007843"
  }
  index: 7
  text: "Okay, the going rate is 10 MP of storage for 500\302\245."
  branches {
    responseText: "Yeah, I want to upgrade my storage."
    nextNodeIndex: 8
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a4fe336331640d00784c"
  }
  index: 8
  text: "Okay, let\'s see what you have."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC CyberdeckKraftwerk1"
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a4fe336331640d00785f"
  }
  index: 9
  text: "I see you have a Kraftwerks deck. Not great, but not terrible... You\'re currently running with $(story.Deck_Total_Storage) MP worth of storage space."
  branches {
    responseText: "I want an additional 10 MP of storage."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 500
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Deck_Storage_Upgrade"
            }
          }
        }
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Deck_Total_Storage"
            }
          }
        }
        args {
          call_value {
            functionName: "Arithmetic (int)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Deck_Storage"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Arithmetic Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Deck_Storage_Upgrade"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 500
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  branches {
    responseText: "Sorry chummer, I can\'t afford it."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 500
        }
      }
    }
    nextNodeIndex: 10
    hideIfUnavailable: true
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0aadc336331b8280001ec"
  }
  index: 10
  text: ""
}
nodes {
  idRef {
    id: "52e0a4fe336331640d007877"
  }
  index: 11
  text: "Okay, the going rate is 10 MP of storage for 500\302\245."
  branches {
    responseText: "Yeah, I want to upgrade my storage."
    nextNodeIndex: 12
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a4fe336331640d007880"
  }
  index: 12
  text: "Okay, let\'s see what you have."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC CyberdeckVirtuaX"
            }
          }
        }
      }
    }
    nextNodeIndex: 13
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a4fe336331640d00789b"
  }
  index: 13
  text: "Oh, a VirtuaX. That\'s a pretty sweet deck. You\'re currently running with $(story.Deck_Total_Storage) MP worth of storage space."
  branches {
    responseText: "I want an additional 10 MP of storage."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 500
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Deck_Storage_Upgrade"
            }
          }
        }
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Deck_Total_Storage"
            }
          }
        }
        args {
          call_value {
            functionName: "Arithmetic (int)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Deck_Storage"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Arithmetic Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Deck_Storage_Upgrade"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 500
        }
      }
    }
    nextNodeIndex: 13
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  branches {
    responseText: "Sorry chummer, I can\'t afford it."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 500
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a4ff336331640d0078ab"
  }
  index: 14
  text: "Okay, the going rate is 10 MP of storage for 500\302\245."
  branches {
    responseText: "Yeah, I want to upgrade my storage."
    nextNodeIndex: 15
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a4ff336331640d0078b4"
  }
  index: 15
  text: "Okay, let\'s see what you have."
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC CyberdeckExcalibur"
            }
          }
        }
      }
    }
    nextNodeIndex: 16
    hideIfUnavailable: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52e0a4ff336331640d0078d7"
  }
  index: 16
  text: "Wow is this a Fairlight Excalibur?! You\'re currently running with $(story.Deck_Total_Storage) MP worth of storage space."
  branches {
    responseText: "I want an additional 10 MP of storage."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 500
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Deck_Storage_Upgrade"
            }
          }
        }
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Set Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Deck_Total_Storage"
            }
          }
        }
        args {
          call_value {
            functionName: "Arithmetic (int)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Deck_Storage"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Arithmetic Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Deck_Storage_Upgrade"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 500
        }
      }
    }
    nextNodeIndex: 16
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  branches {
    responseText: "Sorry chummer, I can\'t afford it."
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 500
        }
      }
    }
    nextNodeIndex: -1
    hideIfUnavailable: true
  }
  branches {
    responseText: "Nevermind."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: "I need some Decking equipment."
  nextNodeIndex: 0
}
roots {
  responseText: "I need to upgrade my deck\'s storage capacity.\n\n{{GM}}Current Storage Capacity: $(story.Deck_Total_Storage) MP{{/GM}}"
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "CyberdeckSony"
          }
        }
      }
    }
  }
  nextNodeIndex: 1
  hideIfUnavailable: true
}
roots {
  responseText: "I need to upgrade my deck\'s storage capacity.\n\n{{GM}}Current Storage Capacity: $(story.Deck_Total_Storage) MP{{/GM}}"
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "SSC CyberdeckSony"
          }
        }
      }
    }
  }
  nextNodeIndex: 4
  hideIfUnavailable: true
}
roots {
  responseText: "I need to upgrade my deck\'s storage capacity.\n\n{{GM}}Current Storage Capacity: $(story.Deck_Total_Storage) MP{{/GM}}"
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "SSC CyberdeckKraftwerk1"
          }
        }
      }
    }
  }
  nextNodeIndex: 7
  hideIfUnavailable: true
}
roots {
  responseText: "I need to upgrade my deck\'s storage capacity.\n\n{{GM}}Current Storage Capacity: $(story.Deck_Total_Storage) MP{{/GM}}"
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "SSC CyberdeckVirtuaX"
          }
        }
      }
    }
  }
  nextNodeIndex: 11
  hideIfUnavailable: true
}
roots {
  responseText: "I need to upgrade my deck\'s storage capacity.\n\n{{GM}}Current Storage Capacity: $(story.Deck_Total_Storage) MP{{/GM}}"
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "SSC CyberdeckExcalibur"
          }
        }
      }
    }
  }
  nextNodeIndex: 14
  hideIfUnavailable: true
}
roots {
  responseText: "Nevermind."
  nextNodeIndex: -1
}
