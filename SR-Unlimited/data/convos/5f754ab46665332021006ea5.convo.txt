idRef {
  id: "5f754ab46665332021006ea5"
}
ui_name: "Monster Bait"
nodes {
  idRef {
    id: "5f754b036665332021006eab"
  }
  index: 0
  text: "Set bait?"
  branches {
    responseText: "Yes."
    actions {
      ops {
        functionName: "Remove Item from Team"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Monster Bait"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Trigger: Wait for Rounds"
        args {
          int_value: 5
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "60184a50666533ec28004861"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Delete Prop"
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "5f6ea7556665333c1e004ebf"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "No."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Wilderness_Type"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  nextNodeIndex: 0
  hideIfUnavailable: true
}
