idRef {
  id: "58e04fad3037363b6789d1a7"
}
ui_name: "ratsNest-MacCabe terminal"
nodes {
  idRef {
    id: "58e04fb13037363b6789d1ad"
  }
  index: 0
  text: "McCabe limited Acorn\302\256 gambling terminal\n\n"
  branches {
    responseText: "Roulette {{CC}}10+\302\245{{/CC}}"
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 1
  }
  branches {
    responseText: "War {{CC}}10+\302\245{{/CC}}"
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 6
  }
  branches {
    responseText: "Cultists vs Bums"
    conditions {
      ops {
        functionName: "Invert Bool"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 11
    hideIfUnavailable: true
  }
  branches {
    responseText: "Leave"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58e0509d3037363b6789d1b2"
  }
  index: 1
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: -1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Green"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Neither"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          string_value: "00"
        }
      }
    }
    nextNodeIndex: 2
    comment: "00"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Green"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Neither"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          string_value: "0"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "0"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "1"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "2"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "3"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "4"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 5
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "5"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 6
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "6"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 7
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "7"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 8
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "8"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 9
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "9"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "10"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 11
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "11"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 12
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "12"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 13
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "13"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 14
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "14"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 15
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "15"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 16
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "16"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 17
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "17"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 18
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "18"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 19
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "19"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 20
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "20"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 21
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "21"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 22
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "22"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 23
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "23"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 24
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "24"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 25
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "25"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 26
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "26"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 27
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "27"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 28
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "28"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 29
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "29"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 30
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "30"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 31
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "31"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 32
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "32"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 33
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "33"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 34
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "34"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 35
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Odd"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Black"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "35"
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 36
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Even"
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Red"
        }
      }
    }
    nextNodeIndex: 2
    auxiliaryLink: true
    comment: "36"
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Genera_Use"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: -1
          }
          args {
            int_value: 36
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "58e051bc3037363b6789d1b5"
  }
  index: 2
  text: "American style roulette\n\nvalid calls are 00, 0, high, low, odd, even, red, black and 1-36"
  branches {
    responseText: "00"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "00"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    comment: "00"
  }
  branches {
    responseText: "00"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "00"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    comment: "! 00"
  }
  branches {
    responseText: "0"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "0"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "0"
  }
  branches {
    responseText: "0"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "0"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 0"
  }
  branches {
    responseText: "low"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          int_value: 18
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          int_value: 1
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 5
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 20
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "low"
  }
  branches {
    responseText: "high"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          int_value: 36
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          int_value: 19
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 5
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 20
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "high"
  }
  branches {
    responseText: "low"
    conditions {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Comparison (int)"
            args {
              int_value: 0
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 3
                }
              }
            }
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (int)"
            args {
              int_value: 19
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 5
                }
              }
            }
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! low"
  }
  branches {
    responseText: "high"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          int_value: 18
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! high"
  }
  branches {
    responseText: "even"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          string_value: "Even"
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 20
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "even"
  }
  branches {
    responseText: "odd"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          string_value: "Odd"
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 20
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "odd"
  }
  branches {
    responseText: "even"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          string_value: "Even"
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! even"
  }
  branches {
    responseText: "odd"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          string_value: "Odd"
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! odd"
  }
  branches {
    responseText: "red"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          string_value: "Red"
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 20
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "red"
  }
  branches {
    responseText: "black"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          string_value: "Black"
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 20
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "black"
  }
  branches {
    responseText: "red"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          string_value: "Red"
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! red"
  }
  branches {
    responseText: "black"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          string_value: "Black"
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! black"
  }
  branches {
    responseText: "1"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "1"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "1"
  }
  branches {
    responseText: "1"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "1"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 1"
  }
  branches {
    responseText: "2"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "2"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "2"
  }
  branches {
    responseText: "2"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "2"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 2"
  }
  branches {
    responseText: "3"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "3"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "3"
  }
  branches {
    responseText: "3"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "3"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 3"
  }
  branches {
    responseText: "4"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "4"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "4"
  }
  branches {
    responseText: "4"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "4"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 4"
  }
  branches {
    responseText: "5"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "5"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "5"
  }
  branches {
    responseText: "5"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "5"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 5"
  }
  branches {
    responseText: "6"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "6"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "6"
  }
  branches {
    responseText: "6"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "6"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 6"
  }
  branches {
    responseText: "7"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "7"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "7"
  }
  branches {
    responseText: "7"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "7"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 7"
  }
  branches {
    responseText: "8"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "8"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "8"
  }
  branches {
    responseText: "8"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "8"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 8"
  }
  branches {
    responseText: "9"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "9"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "9"
  }
  branches {
    responseText: "9"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "9"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 9"
  }
  branches {
    responseText: "10"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "10"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "10"
  }
  branches {
    responseText: "10"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "10"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 10"
  }
  branches {
    responseText: "11"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "11"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "11"
  }
  branches {
    responseText: "11"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "11"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 11"
  }
  branches {
    responseText: "12"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "12"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "12"
  }
  branches {
    responseText: "12"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "12"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 12"
  }
  branches {
    responseText: "13"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "13"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "13"
  }
  branches {
    responseText: "13"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "13"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 13"
  }
  branches {
    responseText: "14"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "14"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "14"
  }
  branches {
    responseText: "14"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "14"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 14"
  }
  branches {
    responseText: "15"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "15"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "15"
  }
  branches {
    responseText: "15"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "15"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 15"
  }
  branches {
    responseText: "16"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "16"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "16"
  }
  branches {
    responseText: "16"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "16"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 16"
  }
  branches {
    responseText: "17"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "17"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "17"
  }
  branches {
    responseText: "17"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "17"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 17"
  }
  branches {
    responseText: "18"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "18"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "18"
  }
  branches {
    responseText: "18"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "18"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 18"
  }
  branches {
    responseText: "19"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "19"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "19"
  }
  branches {
    responseText: "19"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "19"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 19"
  }
  branches {
    responseText: "20"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "20"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "20"
  }
  branches {
    responseText: "20"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "20"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 20"
  }
  branches {
    responseText: "21"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "21"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "21"
  }
  branches {
    responseText: "21"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "21"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 21"
  }
  branches {
    responseText: "22"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "22"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "22"
  }
  branches {
    responseText: "22"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "22"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 22"
  }
  branches {
    responseText: "23"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "23"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "23"
  }
  branches {
    responseText: "23"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "23"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 23"
  }
  branches {
    responseText: "24"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "24"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "24"
  }
  branches {
    responseText: "24"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "24"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 24"
  }
  branches {
    responseText: "25"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "25"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "25"
  }
  branches {
    responseText: "25"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "25"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 25"
  }
  branches {
    responseText: "26"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "26"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "26"
  }
  branches {
    responseText: "26"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "26"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 26"
  }
  branches {
    responseText: "27"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "27"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "27"
  }
  branches {
    responseText: "27"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "27"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 27"
  }
  branches {
    responseText: "28"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "28"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "28"
  }
  branches {
    responseText: "28"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "28"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 28"
  }
  branches {
    responseText: "29"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "29"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "29"
  }
  branches {
    responseText: "29"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "29"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 29"
  }
  branches {
    responseText: "30"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "30"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "30"
  }
  branches {
    responseText: "30"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "30"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 30"
  }
  branches {
    responseText: "31"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "31"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "31"
  }
  branches {
    responseText: "31"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "31"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 31"
  }
  branches {
    responseText: "32"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "32"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "32"
  }
  branches {
    responseText: "32"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "32"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 32"
  }
  branches {
    responseText: "33"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "33"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "33"
  }
  branches {
    responseText: "33"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "33"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 33"
  }
  branches {
    responseText: "34"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "34"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "34"
  }
  branches {
    responseText: "34"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "34"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 34"
  }
  branches {
    responseText: "35"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "35"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "35"
  }
  branches {
    responseText: "35"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "35"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 35"
  }
  branches {
    responseText: "36"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          string_value: "36"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 360
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
    comment: "36"
  }
  branches {
    responseText: "36"
    conditions {
      ops {
        functionName: "Comparison (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-number"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          string_value: "36"
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
    comment: "! 36"
  }
  branches {
    responseText: "abbacab"
    nextNodeIndex: 5
  }
  nodeType: ConversationNodeType_InputKeyboard
}
nodes {
  idRef {
    id: "58e07546303736506d674011"
  }
  index: 3
  text: "$(scene.MacCabe-color) $(scene.MacCabe-number) $(scene.MacCabe-evens)\nYou win!"
  branches {
    responseText: ""
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58e07546303736506d674011"
  }
  index: 4
  text: "$(scene.MacCabe-color) $(scene.MacCabe-number) $(scene.MacCabe-evens)\nBetter Luck Next Time!"
  branches {
    responseText: ""
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5ef8bc2b64343152023e1b3f"
  }
  index: 5
  text: "The cheats menu..."
  branches {
    responseText: "Parent"
    nextNodeIndex: 2
    auxiliaryLink: true
  }
  branches {
    responseText: "G - Body"
    actions {
      ops {
        functionName: "Set Actor Base Attribute"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Arithmetic (int)"
            args {
              int_value: 1
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Arithmetic Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Actor Attribute"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorAttributes"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "G - Quickness"
    actions {
      ops {
        functionName: "Set Actor Base Attribute"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Arithmetic (int)"
            args {
              int_value: 1
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Arithmetic Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Actor Attribute"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorAttributes"
                    }
                    args {
                      int_value: 1
                    }
                  }
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "G - Charisma"
    actions {
      ops {
        functionName: "Set Actor Base Attribute"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Arithmetic (int)"
            args {
              int_value: 1
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Arithmetic Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Actor Attribute"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorAttributes"
                    }
                    args {
                      int_value: 3
                    }
                  }
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 3
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "G - Firearms"
    actions {
      ops {
        functionName: "Set Actor Base Skill"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Arithmetic (int)"
            args {
              int_value: 1
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Arithmetic Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Actor Skill"
                args {
                  call_value {
                    functionName: "Get Map Item (Player)"
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "BaseOrCurrent"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
                args {
                  call_value {
                    functionName: "Get Preset Value (int)"
                    args {
                      string_value: "ActorSkills"
                    }
                    args {
                      int_value: 0
                    }
                  }
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "G - Negotiation"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Custom_Skill-Negotiation"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          call_value {
            functionName: "Get Actor Attribute"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "BaseOrCurrent"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "ActorAttributes"
                }
                args {
                  int_value: 3
                }
              }
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Custom_Skill-Negotiation"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "A - Nuyen"
    actions {
      ops {
        functionName: "Add Nuyen"
        args {
          int_value: 250000
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "A - Spells"
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Weaken Armor 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Stunbolt 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Stunball 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Powerbolt 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Petrify"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Mind Wipe"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Manabolt 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Manaball 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Lightning Bolt 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Heal Wound"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Heal 4"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Glue"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Flamethrower 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Fireball 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Distraction 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Dispel Magic 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Confusion"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Blindness"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Ball Lightning 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Armor 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Aim 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC Spell Acid Stream 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "A - Test Deck"
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC PR Supression 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC PR Sniffer 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC PR Slow 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC PR Shield 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC PR Medic 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC PR Killjoy 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC PR Killer 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC PR Firewall 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC PR Erosion 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC PR Degrade 2"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "SSC PR Black Hammer 1"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "A - Karma"
    actions {
      ops {
        functionName: "Add Actor Karma"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "A - Heal All"
    actions {
      ops {
        functionName: "Revive Actor"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          int_value: 100
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Remove All Status Effects from Actor"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "A - Walk Fast"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "SuperSpeed"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    actions {
      ops {
        functionName: "Add To Variable (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "SuperSpeed"
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 5
    hideIfUnavailable: true
    auxiliaryLink: true
  }
  branches {
    responseText: "Power of Friendship"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Ganger Friendship Bracelet"
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Ganger Friendship Bracelet"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58e115c5303736282e674260"
  }
  index: 6
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "Genera_Use"
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 7
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Jack"
        }
      }
    }
    nextNodeIndex: 7
    auxiliaryLink: true
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 11
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "Queen"
        }
      }
    }
    nextNodeIndex: 7
    auxiliaryLink: true
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 12
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-color"
            }
          }
        }
        args {
          string_value: "King"
        }
      }
    }
    nextNodeIndex: 7
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "General_Use2"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 2
          }
          args {
            int_value: 12
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Genera_Use"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 2
          }
          args {
            int_value: 12
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5b57594e3430324819001315"
  }
  index: 7
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "General_Use2"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          call_value {
            functionName: "Convert (int) to (string)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "51f15c62336331d02c00440e"
                }
                args {
                  string_value: "General_Use2"
                }
              }
            }
          }
        }
      }
    }
    nextNodeIndex: 8
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "General_Use2"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Jack"
        }
      }
    }
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "General_Use2"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 11
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "Queen"
        }
      }
    }
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "General_Use2"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 12
        }
      }
    }
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "MacCabe-evens"
            }
          }
        }
        args {
          string_value: "King"
        }
      }
    }
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5b57594e3430324819001315"
  }
  index: 8
  text: ""
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "General_Use2"
            }
          }
        }
      }
    }
    nextNodeIndex: 9
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "General_Use2"
            }
          }
        }
      }
    }
    nextNodeIndex: 10
  }
  branches {
    responseText: ""
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "Genera_Use"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Story Variable (int)"
            args {
              string_value: "51f15c62336331d02c00440e"
            }
            args {
              string_value: "General_Use2"
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58e117be303736282e67426e"
  }
  index: 9
  text: "$(scene.MacCabe-color) vs $(scene.MacCabe-evens)\nYou Win!"
  branches {
    responseText: ""
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Nuyen"
      args {
        int_value: 10
      }
    }
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 20
      }
    }
  }
}
nodes {
  idRef {
    id: "58e117c1303736282e674270"
  }
  index: 10
  text: "$(scene.MacCabe-color) vs $(scene.MacCabe-evens)\nBetter Luck Next Time!"
  branches {
    responseText: ""
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Nuyen"
      args {
        int_value: 10
      }
    }
  }
}
nodes {
  idRef {
    id: "58e387f5303736ac57b357e2"
  }
  index: 11
  text: "Wager on a fight between a bum and a cultist?"
  branches {
    responseText: "Wager on the cultist. {{CC}}10+\302\245{{/CC}}"
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "Gladiator_chit"
            }
          }
        }
        args {
          string_value: "nord"
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Battle"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 12
  }
  branches {
    responseText: "Wager on the bum. {{CC}}10+\302\245{{/CC}}"
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 10
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 10
        }
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Variable (string)"
            args {
              string_value: "Gladiator_chit"
            }
          }
        }
        args {
          string_value: "sud"
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Battle"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 13
  }
  branches {
    responseText: "Just watch {{CC}}1+\302\245{{/CC}}"
    conditions {
      ops {
        functionName: "Evaluate Nuyen"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    actions {
      ops {
        functionName: "Remove Nuyen"
        args {
          int_value: 1
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "Battle"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 14
  }
  branches {
    responseText: "No"
    nextNodeIndex: 0
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "58e388ad303736ac57b35a82"
  }
  index: 12
  text: "whatevs"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Random (int)"
                      args {
                        int_value: 1
                      }
                      args {
                        int_value: 5
                      }
                    }
                  }
                }
              }
              args {
                string_value: "nord"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Random (int)"
                      args {
                        int_value: 1
                      }
                      args {
                        int_value: 5
                      }
                    }
                  }
                }
              }
              args {
                string_value: "sud"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Point)"
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "53e1367338646168110040af"
              }
            }
          }
        }
      }
      args {
        float_value: -1
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "58e3ca3a30373667665408f9"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "58e388ad303736ac57b35a82"
  }
  index: 13
  text: "whatevs"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Random (int)"
                      args {
                        int_value: 1
                      }
                      args {
                        int_value: 5
                      }
                    }
                  }
                }
              }
              args {
                string_value: "nord"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Random (int)"
                      args {
                        int_value: 1
                      }
                      args {
                        int_value: 5
                      }
                    }
                  }
                }
              }
              args {
                string_value: "sud"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Point)"
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "53e1367338646168110040af"
              }
            }
          }
        }
      }
      args {
        float_value: -1
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "58e3ca3a30373667665408f9"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "58e388ad303736ac57b35a82"
  }
  index: 14
  text: "whatevs"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Random (int)"
                      args {
                        int_value: 1
                      }
                      args {
                        int_value: 5
                      }
                    }
                  }
                }
              }
              args {
                string_value: "nord"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Append (string)"
              args {
                call_value {
                  functionName: "Convert (int) to (string)"
                  args {
                    call_value {
                      functionName: "Random (int)"
                      args {
                        int_value: 1
                      }
                      args {
                        int_value: 5
                      }
                    }
                  }
                }
              }
              args {
                string_value: "sud"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Point)"
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "53e1367338646168110040af"
              }
            }
          }
        }
      }
      args {
        float_value: -1
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "58e3ca3a30373667665408f9"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
}
roots {
  nextNodeIndex: 0
}
