triggers {
  name: "Ladder"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d1e94b5396639d021007042"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add Item to Team"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Ladder"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d1e94c5396639d021007043"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Ladder-Climb"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d1e9a23396639d021007046"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Ladder"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d1eb58a396639d021007052"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Remove Item from Team"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Ladder"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d1e9acb396639d021007048"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Ladder-Climb2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d1eb58a396639d021007052"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d1e9a23396639d021007046"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Ladder"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5d1eb7d0396639d021007054"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Tree"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d1f0b25396639d02100716f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Tree"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5d1e9ad2396639d021007049"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Tree2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d212596396639a818005d06"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Skill"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorSkills"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Detain Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DetainMethod"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Wait for Rounds"
      args {
        int_value: 3
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Detain Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DetainMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Tree"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d1f0b25396639d02100716f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d212596396639a818005d06"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d1f0c34396639d021007173"
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Target Point"
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d21271d396639a818005d09"
  }
  elseActions {
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d212596396639a818005d06"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Maybe it needs a stronger shaman. Maybe one that can ask their totem for help."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "Tree-Climb"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d1f0c34396639d021007173"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d2221de396639a818005d10"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d221e00396639a818005d0d"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Tree-Back"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d221e97396639a818005d0f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d1f0c34396639d021007173"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Team"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Rope"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d24ee7b396639f02c001c5e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Tree-Rope"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d222622396639a818005d34"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Rock"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d2231a7396639a818005d68"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Rocks"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5d225a47396639a818005d6f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Rock2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d22595d396639a818005d6b"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Skill"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorSkills"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 3
      }
    }
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Evaluate If Actor Has Item"
          args {
            call_value {
              functionName: "Specific Actor"
              args {
                call_value {
                  functionName: "Triggering Actor"
                }
              }
              args {
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "HasOrHasNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (Item)"
              args {
                string_value: "SSC Spell Armor 2"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "OR"
          args {
            call_value {
              functionName: "Evaluate If Actor Has Item"
              args {
                call_value {
                  functionName: "Specific Actor"
                  args {
                    call_value {
                      functionName: "Triggering Actor"
                    }
                  }
                  args {
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "HasOrHasNot"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (Item)"
                  args {
                    string_value: "SSC Spell Armor 1"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "OR"
              args {
                call_value {
                  functionName: "Evaluate If Actor Has Item"
                  args {
                    call_value {
                      functionName: "Specific Actor"
                      args {
                        call_value {
                          functionName: "Triggering Actor"
                        }
                      }
                      args {
                      }
                    }
                  }
                  args {
                    call_value {
                      functionName: "Get Preset Value (int)"
                      args {
                        string_value: "HasOrHasNot"
                      }
                      args {
                        int_value: 1
                      }
                    }
                  }
                  args {
                    call_value {
                      functionName: "Get Map Item (Item)"
                      args {
                        string_value: "SSC Spell Armor 3"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "OR"
                  args {
                    call_value {
                      functionName: "Evaluate If Actor Has Item"
                      args {
                        call_value {
                          functionName: "Specific Actor"
                          args {
                            call_value {
                              functionName: "Triggering Actor"
                            }
                          }
                          args {
                          }
                        }
                      }
                      args {
                        call_value {
                          functionName: "Get Preset Value (int)"
                          args {
                            string_value: "HasOrHasNot"
                          }
                          args {
                            int_value: 1
                          }
                        }
                      }
                      args {
                        call_value {
                          functionName: "Get Map Item (Item)"
                          args {
                            string_value: "SSC Spell Glue"
                          }
                        }
                      }
                    }
                  }
                  args {
                    call_value {
                      functionName: "OR"
                      args {
                        call_value {
                          functionName: "Get Preset Value (int)"
                          args {
                            string_value: "bool"
                          }
                          args {
                            int_value: 0
                          }
                        }
                      }
                      args {
                        call_value {
                          functionName: "Get Preset Value (int)"
                          args {
                            string_value: "bool"
                          }
                          args {
                            int_value: 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Detain Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DetainMethod"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Wait for Rounds"
      args {
        int_value: 3
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Detain Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DetainMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Rocks"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d22629e396639a818005d71"
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (3D)"
          args {
            float_value: -80.5
          }
          args {
            float_value: 1
          }
          args {
            float_value: 7.5
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d2259f9396639a818005d6e"
          }
        }
      }
      args {
        call_value {
          functionName: "Specified Point (3D)"
          args {
            float_value: -80
          }
          args {
            float_value: 2
          }
          args {
            float_value: 7
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d225b3d396639a818005d70"
  }
  elseActions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "You have the skill, but nothing to base it on. Maybe Armor or a similar spell would work."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Rock-Climb"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d22629e396639a818005d71"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d226908396639a818005d7a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d2271f1396639a818005da2"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Rock-Rope"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d2274ff396639a818005db9"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d24ee7b396639f02c001c5e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Nothing Selected"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d22595d396639a818005d6b"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Rock-rope"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Team"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Rope"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d227693396639a818005dc8"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Jump"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d22785d396639a818005dcb"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Jump"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5d227ad5396639a818005dd1"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JumpWall"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d2279bd396639a818005dcf"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d227e36396639a818005dd3"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d227eeb396639a818005dd6"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "JumpWall2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d227e36396639a818005dd3"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d2279bd396639a818005dcf"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d22a17b396639a818005dd7"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "SideGate"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d24ebe8396639f02c001c54"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Gate-Open"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d24ed26396639f02c001c5c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Evidence"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d24ed18396639f02c001c5a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "NoEvidence"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Evidence-Spotted"
          }
        }
      }
      args {
        int_value: 9
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Gate-Open"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d24ec46396639f02c001c58"
  }
  elseActions {
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d24ed26396639f02c001c5c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d24ed18396639f02c001c5a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d24ee7b396639f02c001c5e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Gate-Open"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Evidence-Spotted"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Variable (int)"
              args {
                string_value: "Evidence-Spotted"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "EvidenceOff"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "NoEvidence"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Evidence"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Evidence-Spotted"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "NoEvidence"
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5d24ee7b396639f02c001c5e"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "NoEvidence"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Variable (int)"
              args {
                string_value: "NoEvidence"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Frontdoor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d280faf3966395822000c1e"
          }
        }
      }
    }
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d50a2e0396639002e007707"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Inside"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d280faf3966395822000c1e"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Inside"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5d30fc883966392816006400"
  }
  elseActions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d50a2e0396639002e007707"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Inside"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Camera Jump"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5d3136553966392816006468"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "WindowGoIn"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d22c5c7396639a818005ee6"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "WindowBypass"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d30e56639663928160063d7"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Inside"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d35579339663928160065ce"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d5c67c83966399c250023d2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "WindowGoOut"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e56639663928160063d7"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "WindowBypass"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d22c5c7396639a818005ee6"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Inside"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d355dfa396639281600660b"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d5c67c83966399c250023d2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Hackrig"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d3648de396639281600661d"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Prop"
      args {
        call_value {
          functionName: "Triggering Prop"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "You don\'t have the password, and anyway it looks to be a personal use rig (records keeping, gaming, things like that). Even if you could use it you doubt it would be good on the matrix."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5d3648e7396639281600661e"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Noise"
  events {
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Actor Consciousness"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Consciousness"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Hit"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Noise"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "creatures"
          }
          args {
            string_value: "Hellhound_Hurt"
          }
        }
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d3a59f73966393c1f00265e"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Noise2"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Hit"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Actor Consciousness"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Consciousness"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Noise"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Variable (int)"
              args {
                string_value: "Noise"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4d15093966393c1f002754"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Noise Hounds"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Noise"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 10
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Coller"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Hound1"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d3f60be3966393c1f00265f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Noise Guards"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Noise"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 20
      }
    }
  }
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "guardsIn"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "locationSeen"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Alarm"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d3a59f73966393c1f00265e"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d4d15093966393c1f002754"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d3f62853966393c1f002660"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Go In"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d46815f3966393c1f002743"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d30e59c39663928160063d8"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "In"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d3f63d13966393c1f002661"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Go In 2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d22c5c7396639a818005ee6"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d30e56639663928160063d7"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "In"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4683b83966393c1f002744"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Go In 3"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d50a2e0396639002e007707"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Compare Actor Team"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Compare Actor Team"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d280faf3966395822000c1e"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "In"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d46846e3966393c1f002745"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Go Out"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e59c39663928160063d8"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Compare Actor Team"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Compare Actor Team"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d46815f3966393c1f002743"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4685a13966393c1f002746"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Go Out 2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e56639663928160063d7"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Compare Actor Team"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Compare Actor Team"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d22c5c7396639a818005ee6"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4685e03966393c1f002747"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Go Out 3"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d280faf3966395822000c1e"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Compare Actor Team"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Compare Actor Team"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 4
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d50a2e0396639002e007707"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4685e93966393c1f002748"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "No Fire"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "onFire"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4686a73966393c1f002749"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "GuardsIn"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "guardsIn"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "WindowBypass"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cee053966393c1f00274b"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d46815f3966393c1f002743"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4ceed63966393c1f00274c"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d50a2e0396639002e007707"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cef4c3966393c1f00274d"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d22c5c7396639a818005ee6"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4cea463966393c1f00274a"
  }
  elseActions {
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cee053966393c1f00274b"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d46815f3966393c1f002743"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4ceed63966393c1f00274c"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d50a2e0396639002e007707"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cef4c3966393c1f00274d"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d50a2e0396639002e007707"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "GuardsOut"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "guardsOut"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "WindowBypass"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cff1e3966393c1f002750"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e59c39663928160063d8"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cf9c03966393c1f00274f"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d280faf3966395822000c1e"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cf8e63966393c1f00274e"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e56639663928160063d7"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4cff653966393c1f002751"
  }
  elseActions {
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cff1e3966393c1f002750"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e59c39663928160063d8"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4ceed63966393c1f00274c"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d280faf3966395822000c1e"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cef4c3966393c1f00274d"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d280faf3966395822000c1e"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Morning Run"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Insertion_Time"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Set Ambient Light Color"
      args {
        float_value: 0.45
      }
      args {
        float_value: 0.55
      }
      args {
        float_value: 0.6
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d800271396639e80f004c92"
          }
        }
      }
    }
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 0.75
      }
      args {
        float_value: 0.9
      }
      args {
        float_value: 0.9
      }
      args {
        float_value: 0
      }
      args {
        float_value: -0.6
      }
      args {
        float_value: -1.1
      }
      args {
        float_value: -0.8
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d800271396639e80f004c92"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnsOfBackup"
          }
        }
      }
      args {
        int_value: 45
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnsToLoneStar"
          }
        }
      }
      args {
        int_value: 60
      }
    }
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "Seattle_Set8"
          }
          args {
            string_value: "Seattle-Set8-Legwork"
          }
        }
      }
      args {
        float_value: 2
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4d022c3966393c1f002752"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spotted"
  events {
    ops {
      functionName: "On Actor Awareness of Another Actor"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Alarm_Already_Active"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Maintenance"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Alarm"
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Hostile spotted."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d5c5ade3966399c250023d1"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "GuardsMove"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4d07a03966393c1f002753"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "AngryGuards"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4e14f93966393c1f002755"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "AngryHounds"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4e158c3966393c1f002756"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "GuardsSeeEnterWindow"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d22c5c7396639a818005ee6"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5d50a021396639002e007701"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "locationSeen"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "guardsIn"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d4f5e913966393c1f002757"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "GuardsSeeEnterSideDoor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d46815f3966393c1f002743"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5d50a0a8396639002e007702"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "locationSeen"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "guardsIn"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d50a0ee396639002e007703"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "GuardsSeeEnterMainDoor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d50a2e0396639002e007707"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5d50a1ad396639002e007704"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "locationSeen"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "guardsIn"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d50a2ff396639002e007708"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Universal-Test"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Test"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "TestRangeLow"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "TestDifficulty"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Current_Run_Resistance"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                int_value: 4
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "TestRangeHigh"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "TestDifficulty"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "TestRangeLow"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Skill_Test_Modifier"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "TestRangeHigh"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Skill_Test_Modifier"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52464108336331f02100572c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "GuardsSeeExitWindow"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e56639663928160063d7"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5d50ab3f396639002e007757"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "locationSeen"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "guardsOut"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d50aba0396639002e007758"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "GuardsSeeExitMainDoor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d280faf3966395822000c1e"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5d50ac4b396639002e00775b"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "locationSeen"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "guardsOut"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d50ac32396639002e007759"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "HoundsJackColler"
  events {
    ops {
      functionName: "On Actor Awareness of Another Actor"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d513373396639002e00775d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5d3a2b4d396639e81f006de9"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d51d4d6396639002e0078fa"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "HoundsOut"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "HoundsOut"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "WindowBypass"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cff1e3966393c1f002750"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 4
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e59c39663928160063d8"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cf9c03966393c1f00274f"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 4
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d280faf3966395822000c1e"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cf8e63966393c1f00274e"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 4
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e56639663928160063d7"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d51d893396639002e007973"
  }
  elseActions {
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cff1e3966393c1f002750"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 4
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e59c39663928160063d8"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4ceed63966393c1f00274c"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 4
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d280faf3966395822000c1e"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Interact with Object"
      args {
        call_value {
          functionName: "All Actors Which Overlap"
          args {
            call_value {
              functionName: "All Actors Within Area"
              args {
                call_value {
                  functionName: "Area: Region"
                  args {
                    call_value {
                      functionName: "Get Map Item (Region)"
                      args {
                        string_value: "5d4cef4c3966393c1f00274d"
                      }
                    }
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "All Actors on Team"
              args {
                call_value {
                  functionName: "Get Preset Value (string)"
                  args {
                    string_value: "FactionList"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Map Item (SceneDimension)"
                  args {
                    string_value: "Default"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d280faf3966395822000c1e"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "HoundsAttckLonestar"
  events {
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d51d94a396639002e007992"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "GuardsSeeExitSideDoor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e59c39663928160063d8"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5d9527fc396639842000650a"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "locationSeen"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "guardsOut"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d50ac37396639002e00775a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "SideDoorGoIn"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d46815f3966393c1f002743"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "SideDoorBypass"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d30e59c39663928160063d8"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Inside"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d52268a396639002e007993"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d5c5ad63966399c250023d0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "SideDoorGoOut"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d30e59c39663928160063d8"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "SideDoorBypass"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Teleport Actor"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d46815f3966393c1f002743"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Inside"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d522691396639002e007994"
  }
  elseActions {
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d5c5ad63966399c250023d0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Alarm"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Alarm"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Alarm_Already_Active"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Alarm_Already_Active"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Remove Item from Team"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Maintenance"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d5c4da53966399c2500228d"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "GuardsMove"
          }
        }
      }
    }
    ops {
      functionName: "Stop Music"
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d93d32439663984200064f8"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d9528b5396639842000650b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d9badc5396639d41b004b45"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d5c498b3966399c2500228b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Alarm-Backup"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "BackupCounter"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 4
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnCounter"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnsOfBackup"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "BackupCounter"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Back Up"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnCounter"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Back Up"
              }
            }
          }
          args {
            call_value {
              functionName: "Nothing Selected"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "GuardsMove"
          }
        }
      }
    }
    ops {
      functionName: "Remove Tag from Actor"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Back Up"
          }
        }
      }
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5d5c4da53966399c2500228d"
  }
  elseActions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "BackupCounter"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnCounter"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "GuardsMove"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "GuardsMove"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "locationSeen"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "guardsOut"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d5c49a43966399c2500228c"
  }
  elseActions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "guardsIn"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "SideDoorMainPC"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d522730396639002e0079ac"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d5c5ad63966399c250023d0"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "WindowMainPC"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d3557ed39663928160065d0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d5c67c83966399c250023d2"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "SetLocation"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "SetLocation"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5d1a635e396639a43200563f"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "locationSeen"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5d5c5ade3966399c250023d1"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "locationSeen"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "DisguiseEnter"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Disguised-Run"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d5dae8f3966392c0b00367b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Team"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Maintenance"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Prop"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Visible"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d5d8cd33966392c0b0035df"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Point"
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d24ed26396639f02c001c5c"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Point)"
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d24ed26396639f02c001c5c"
              }
            }
          }
        }
      }
      args {
        float_value: 10000
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d5d8e263966392c0b0035e0"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5df3e20a396639742b000750"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d5c6c853966399c250023d3"
  }
  elseActions {
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d5d8cd33966392c0b0035df"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d5dadab3966392c0b003679"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5dc096fc396639ec2c006c6a"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5d9525f03966398420006500"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Teleport Actor near Point"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        int_value: 0
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "5d5dae8f3966392c0b00367b"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeleportMethod"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "Distraction"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d5f3b173966392c0b003a4f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "DstractionE"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d5f3a323966392c0b003a4d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DistractionSetExplosives"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d5f11f63966392c0b003a47"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Remove Item from Team"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Distraction Explosives"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d5f40f93966392c0b003a54"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "DistractionDrone"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d5f3bad3966392c0b003a51"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d657f8c3966392c0b003b03"
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d6576273966392c0b003b02"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "SetOffExplosives"
  events {
    ops {
      functionName: "On Actor Clicked"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d5f42ff3966392c0b003a55"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d5f4c053966392c0b003a96"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Soundtest"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Stop Music"
    }
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "Seattle_Set8"
          }
          args {
            string_value: "Seattle-Set8-Combat"
          }
        }
      }
      args {
        float_value: 2
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5d60533b3966392c0b003ae1"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "OnFire"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "OnFire"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Alarm_Already_Active"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "onFire"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "locationSeen"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Stop Music"
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "spellcasting"
          }
          args {
            string_value: "FireboltExplosion"
          }
        }
      }
      args {
        float_value: 8
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Alarm"
          }
        }
      }
    }
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "Berlin_Glory"
          }
          args {
            string_value: "Berlin-Glory-Fight"
          }
        }
      }
      args {
        float_value: 1.5
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "FireStarted"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d6572fa3966392c0b003ae3"
  }
  elseActions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "onFire"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Stop Music"
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "spellcasting"
          }
          args {
            string_value: "FireboltExplosion"
          }
        }
      }
      args {
        float_value: 8
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "Berlin_Glory"
          }
          args {
            string_value: "Berlin-Glory-Fight"
          }
        }
      }
      args {
        float_value: 1.5
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "FireStarted"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "Fire1"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d6043d33966392c0b003ab6"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d659d9a396639542e002646"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FireID"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5d659d00396639542e002645"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fire2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d6043e73966392c0b003ab7"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FireID"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d659d9a396639542e002646"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d65a9c4396639542e002734"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fire3"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d6044333966392c0b003ab9"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FireID"
          }
        }
      }
      args {
        int_value: 3
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d659d9a396639542e002646"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d65a9cb396639542e002735"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fire4"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d6044df3966392c0b003abb"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FireID"
          }
        }
      }
      args {
        int_value: 4
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d659d9a396639542e002646"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d65a9d0396639542e002736"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fire5"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d6045213966392c0b003abd"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FireID"
          }
        }
      }
      args {
        int_value: 5
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d659d9a396639542e002646"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d65a9d6396639542e002737"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fire6"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d6045593966392c0b003abf"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FireID"
          }
        }
      }
      args {
        int_value: 6
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d659d9a396639542e002646"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d65a9da396639542e002738"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fire7"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d60459c3966392c0b003ac1"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FireID"
          }
        }
      }
      args {
        int_value: 7
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d659d9a396639542e002646"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d65a9e2396639542e002739"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fire8"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d6045da3966392c0b003ac3"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FireID"
          }
        }
      }
      args {
        int_value: 8
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d659d9a396639542e002646"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d65a9ef396639542e00273a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fire9"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d6046293966392c0b003ac5"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FireID"
          }
        }
      }
      args {
        int_value: 9
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d659d9a396639542e002646"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d65a9f7396639542e00273b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fire10"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d6046623966392c0b003ac7"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FireID"
          }
        }
      }
      args {
        int_value: 10
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d659d9a396639542e002646"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d65b1e2396639542e00273c"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Check Next Objective (B)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Check Next Objective"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Step"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Objective"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "Objective_B"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run_Description"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "Current_Run_Info_B"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Location"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
          }
          args {
            string_value: "Objective_Location_B"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "542b2ab736373548a0000e3d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d77fe703966390c1d00122e"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Check Next Objective (C)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Check Next Objective"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Step"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Objective"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Objective_C"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run_Description"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run_Info_C"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Location"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Objective_Location_C"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "542b2ab736373548a0000e3d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d7806783966390c1d001230"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Check Next Objective (D)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Check Next Objective"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Step"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Objective"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Objective_D"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run_Description"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run_Info_D"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Location"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Objective_Location_D"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "542b2ab736373548a0000e3d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d7806813966390c1d001231"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Check Next Objective (Complete)"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Objective"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Complete"
      }
    }
  }
  actions {
    ops {
      functionName: "Remove Screen Label"
      args {
        string_value: "Journal"
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-TempSuccess"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Information"
          }
        }
      }
      args {
        string_value: "Now I just need to get out of here in one piece and get paid."
      }
    }
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Journal"
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "text"
          }
          args {
            string_value: "Information"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "542b2ab736373548a0000e3d"
  }
  elseActions {
    ops {
      functionName: "Remove Screen Label"
      args {
        string_value: "Journal"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Information"
          }
        }
      }
      args {
        string_value: "$(story.Current_Run_Description)"
      }
    }
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Journal"
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "text"
          }
          args {
            string_value: "Information"
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "Afternoon Lighting"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Insertion_Time"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Ambient Light Color"
      args {
        float_value: 0.85
      }
      args {
        float_value: 0.95
      }
      args {
        float_value: 0.75
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d800271396639e80f004c92"
          }
        }
      }
    }
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 0.8
      }
      args {
        float_value: 0.8
      }
      args {
        float_value: 0.75
      }
      args {
        float_value: 0
      }
      args {
        float_value: -0.15
      }
      args {
        float_value: -1
      }
      args {
        float_value: 0.15
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d1a635e396639a43200563f"
          }
        }
      }
    }
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 0.3
      }
      args {
        float_value: 0.3
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0
      }
      args {
        float_value: -0.15
      }
      args {
        float_value: -1
      }
      args {
        float_value: 0.15
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d27d1b83966395822000c02"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d7c1d98396639e80f004c8f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Afternoon Run"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Insertion_Time"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Ambient Light Color"
      args {
        float_value: 0.85
      }
      args {
        float_value: 0.95
      }
      args {
        float_value: 0.75
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d800271396639e80f004c92"
          }
        }
      }
    }
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 0.8
      }
      args {
        float_value: 0.8
      }
      args {
        float_value: 0.75
      }
      args {
        float_value: 0
      }
      args {
        float_value: -0.15
      }
      args {
        float_value: -1
      }
      args {
        float_value: 0.15
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d1a635e396639a43200563f"
          }
        }
      }
    }
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 0.8
      }
      args {
        float_value: 0.8
      }
      args {
        float_value: 0.75
      }
      args {
        float_value: 0
      }
      args {
        float_value: -0.15
      }
      args {
        float_value: -1
      }
      args {
        float_value: 0.15
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d27d1b83966395822000c02"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnsOfBackup"
          }
        }
      }
      args {
        int_value: 40
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnsToLoneStar"
          }
        }
      }
      args {
        int_value: 60
      }
    }
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "Seattle_Set8"
          }
          args {
            string_value: "Seattle-Set8-Legwork"
          }
        }
      }
      args {
        float_value: 3
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d7c2d25396639e80f004c90"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Evening Run"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Insertion_Time"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Set Ambient Light Color"
      args {
        float_value: 0.05
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0.05
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d800271396639e80f004c92"
          }
        }
      }
    }
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 0.2
      }
      args {
        float_value: 0.15
      }
      args {
        float_value: 0.15
      }
      args {
        float_value: 0
      }
      args {
        float_value: -0.85
      }
      args {
        float_value: -1
      }
      args {
        float_value: -0.4
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d800271396639e80f004c92"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnsOfBackup"
          }
        }
      }
      args {
        int_value: 35
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnsToLoneStar"
          }
        }
      }
      args {
        int_value: 70
      }
    }
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "Seattle_Set8"
          }
          args {
            string_value: "Seattle-Set8-Stealth"
          }
        }
      }
      args {
        float_value: 2
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d7c2d2b396639e80f004c91"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Evening Lighting"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Insertion_Time"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Set Ambient Light Color"
      args {
        float_value: 0.05
      }
      args {
        float_value: 0.1
      }
      args {
        float_value: 0.05
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d800271396639e80f004c92"
          }
        }
      }
    }
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 0.2
      }
      args {
        float_value: 0.15
      }
      args {
        float_value: 0.15
      }
      args {
        float_value: 0
      }
      args {
        float_value: -0.85
      }
      args {
        float_value: -1
      }
      args {
        float_value: -0.4
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d800271396639e80f004c92"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d815ced396639f42b0025b4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Morning Lighting"
  events {
    ops {
      functionName: "On Actor Teleport"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Insertion_Time"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Ambient Light Color"
      args {
        float_value: 0.45
      }
      args {
        float_value: 0.55
      }
      args {
        float_value: 0.6
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d800271396639e80f004c92"
          }
        }
      }
    }
    ops {
      functionName: "Set Directional Light Color"
      args {
        float_value: 0.75
      }
      args {
        float_value: 0.9
      }
      args {
        float_value: 0.9
      }
      args {
        float_value: 0
      }
      args {
        float_value: -0.6
      }
      args {
        float_value: -1.1
      }
      args {
        float_value: -0.8
      }
      args {
        float_value: 0
      }
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "5d800271396639e80f004c92"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d93cf6639663984200064f7"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Music"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "FireStarted"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "Seattle_Set8"
          }
          args {
            string_value: "Seattle-Set8-Combat"
          }
        }
      }
      args {
        float_value: 2
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d93d32439663984200064f8"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "MarsAlarm"
  events {
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Maintenance"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d95264f3966398420006501"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5d9525f03966398420006500"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Visible"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Not Visible"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5d9528b5396639842000650b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "MapLoad"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Intervention"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d9bad5d396639d41b004b44"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "LonestarIntervension"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Nothing Selected"
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnsToLoneStar"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnCounter"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnCounter"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d9baea0396639d41b004b46"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Intervention"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Intervention2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "This is the police. Come out with your hands up ang be fired upon."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 6
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d24ed26396639f02c001c5c"
          }
        }
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5d24ed18396639f02c001c5a"
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Visible"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Prop Visible by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Not Visible"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DoesOrDoesNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "5d9badc5396639d41b004b45"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "LonestarBackup"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnsToLoneStar"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 10
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TurnsToLoneStar"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Variable (int)"
              args {
                string_value: "TurnsToLoneStar"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            int_value: 10
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d9baea0396639d41b004b46"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Camera Jump 2"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5d3136553966392816006468"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5dc09e8f396639ec2c006c84"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "summon water"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d38d0d6396639e81f006de5"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Genera_Use"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5b379bf9343032001500ac9e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d38d0d6396639e81f006de5"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5dfa820e3966392c13000bdc"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "summon abomination"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d38d0b5396639e81f006de3"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Genera_Use"
          }
        }
      }
      args {
        int_value: 7
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5b379bf9343032001500ac9e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d38d0b5396639e81f006de3"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5dfa8e343966392c13000bde"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Theft_Counter"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Screen Label Progress Bar (int)"
      args {
        string_value: "Items stolen"
      }
      args {
        string_value: "Items Stolen"
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TheftsCommitted"
          }
        }
      }
      args {
        int_value: 8
      }
    }
  }
  isActive: true
  idRef {
    id: "5e02ab083966394c11000ed0"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Theft1"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d681793396639c41c000a25"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d7010953966390c1d0010be"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TheftID"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "5e030fe23966392816005f24"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Theft2"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d70016e3966390c1d001074"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d7010953966390c1d0010be"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TheftID"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  isActive: true
  idRef {
    id: "5e0310693966392816005f25"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Theft3"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d7001b93966390c1d001077"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d7010953966390c1d0010be"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TheftID"
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  isActive: true
  idRef {
    id: "5e03106d3966392816005f26"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Theft4"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d7001f93966390c1d001079"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d7010953966390c1d0010be"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TheftID"
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  isActive: true
  idRef {
    id: "5e0310733966392816005f27"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Theft5"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d70023f3966390c1d00107b"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d7010953966390c1d0010be"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TheftID"
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  isActive: true
  idRef {
    id: "5e0311183966392816005f28"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Theft6"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d7002823966390c1d00107d"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d7010953966390c1d0010be"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TheftID"
          }
        }
      }
      args {
        int_value: 6
      }
    }
  }
  isActive: true
  idRef {
    id: "5e03111c3966392816005f29"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Theft7"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d7002cf3966390c1d00107f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d7010953966390c1d0010be"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TheftID"
          }
        }
      }
      args {
        int_value: 7
      }
    }
  }
  isActive: true
  idRef {
    id: "5e0311263966392816005f2a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Theft8"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d7003133966390c1d001081"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d7010953966390c1d0010be"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TheftID"
          }
        }
      }
      args {
        int_value: 8
      }
    }
  }
  isActive: true
  idRef {
    id: "5e03112b3966392816005f2b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Fire_Counter"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Screen Label Progress Bar (int)"
      args {
        string_value: "Fire"
      }
      args {
        string_value: "Fires Started"
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "FireChargesPlanted"
          }
        }
      }
      args {
        int_value: 10
      }
    }
  }
  isActive: true
  idRef {
    id: "5e052aee396639bc3700138a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Mars_On_Site"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d5d8cd33966392c0b0035df"
          }
        }
      }
    }
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d5dadab3966392c0b003679"
          }
        }
      }
    }
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5d5dae8f3966392c0b00367b"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52c18f003363311c0500807f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5d9525f03966398420006500"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5e07adea396639a03a001e2e"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "Outside"
  position {
    x: -114
    y: 16
    width: 76
    height: -108
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "5d1a635e396639a43200563f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: false
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Inside F1"
  position {
    x: -235
    y: -81
    width: 58
    height: 50
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "5d27d1b83966395822000c02"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "outsideDoorOne"
  position {
    x: -120
    y: -25
    width: 63
    height: 31
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d4cee053966393c1f00274b"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "outsideDoor2"
  position {
    x: -94
    y: -55
    width: 44
    height: 28
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d4ceed63966393c1f00274c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "outsideWindow"
  position {
    x: -114
    y: -92
    width: 68
    height: 40
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d4cef4c3966393c1f00274d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "insideWindows"
  position {
    x: -237
    y: -83
    width: 60
    height: 18
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d4cf8e63966393c1f00274e"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "insideDoor2"
  position {
    x: -235
    y: -65
    width: 59
    height: 19
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d4cf9c03966393c1f00274f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "insideDoor1"
  position {
    x: -228
    y: -47
    width: 34
    height: 16
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d4cff1e3966393c1f002750"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SeeWindowOutside"
  position {
    x: -90
    y: -71
    width: 23
    height: 38
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d50a021396639002e007701"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SeeSideDoorOutside"
  position {
    x: -106
    y: -23
    width: 20
    height: 22
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d50a0a8396639002e007702"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SeeMainDoorOutside"
  position {
    x: -88
    y: -60
    width: 21
    height: 35
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d50a1ad396639002e007704"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SeeWindowInside"
  position {
    x: -192
    y: -81
    width: 15
    height: 16
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d50ab3f396639002e007757"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SeeMainDoorInside"
  position {
    x: -197
    y: -65
    width: 20
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d50ac4b396639002e00775b"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Distracted Guards"
  position {
    x: -114
    y: -1
    width: 10
    height: 6
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d5f1be43966392c0b003a4c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Camera Bind"
  position {
    x: -302
    y: -182
    width: 294
    height: 235
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "5d800271396639e80f004c92"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SeeSideDoorInside"
  position {
    x: -210
    y: -47
    width: 15
    height: 16
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5d9527fc396639842000650a"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -182
    y: 0
    z: -75
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2b4d396639e81f006de9"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -190
    y: 0
    z: -78
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2d68396639e81f006df1"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -212
    y: 0
    z: -71
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2d82396639e81f006df2"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -205
    y: 0
    z: -78
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2d82396639e81f006df3"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -229
    y: 0
    z: -62
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2d9d396639e81f006df4"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -228
    y: 0
    z: -70
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2d9e396639e81f006df5"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -227
    y: 0
    z: -77
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2d9f396639e81f006df6"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -187
    y: 0
    z: -60
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2dda396639e81f006df9"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -189
    y: 0
    z: -50
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2dda396639e81f006dfa"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -199
    y: 0
    z: -64
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2e24396639e81f006dfb"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -186
    y: 0
    z: -64
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2e25396639e81f006dfc"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -200
    y: 0
    z: -53
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2f0e3966393c1f00260e"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -216
    y: 0
    z: -60
  }
  orientation: ORIENTATION_S
  GeneralTags: "Hound1"
  displayName: "Hell Hound"
  idRef {
    id: "5d3a2f3e3966393c1f002611"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Creature/CreatureHellhound"
    character_sheet_id: "Creature_Lv4_Hellhound"
    equipment_sheet_id: "Hellhound_Lv4_Powers"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: -1
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      attackRandom: AttackStyle_AllEqual
      vulnerabilities {
      }
    }
    team_id: "Hounds"
    char_name: "Hellhound"
    GeneralTags: "Hound1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 133
    hiring_cost_override: 1000
    scale_character_sheet: true
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -60
    y: 0
    z: -53
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a51f73966393c1f002642"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Human_Mage"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 68
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -60
    y: 0
    z: -35
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a52913966393c1f002643"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv5_Captain"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 98
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -57
    y: 0
    z: -85
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a52a13966393c1f002644"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Ork_Shotgun"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 62
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -57
    y: 0
    z: -31
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a52a23966393c1f002645"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Ork_Shotgun"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 62
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -57
    y: 0
    z: -21
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a531d3966393c1f002646"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Heavy_SMG"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 71
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -57
    y: 0
    z: -11
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a53333966393c1f002647"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Human_Mage"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 68
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -57
    y: 0
    z: -1
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a53353966393c1f002648"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Human_Pistol"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 63
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -57
    y: 0
    z: -65
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a544d3966393c1f002649"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Human_Pistol"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 63
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -57
    y: 0
    z: -75
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a544f3966393c1f00264a"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Human_Pistol"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 63
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -57
    y: 0
    z: -55
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a548a3966393c1f00264b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Captain"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 78
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -101
    y: 0
    z: -22
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a54b43966393c1f00264c"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Heavy_SMG"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 71
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -106
    y: 0
    z: -14
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a54b53966393c1f00264d"
  }
  lod: 0
  character_instance {
    prefab_name: "Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 4
        hp: 0
        armor: 2
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 5
        dodge: 4
      }
      specializations {
        pistol: 4
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 84
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -108
    y: 0
    z: -5
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a54c23966393c1f00264e"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Human_Pistol"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 63
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -72
    y: 0
    z: -23
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a54d73966393c1f00264f"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Heavy_SMG"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 71
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -73
    y: 0
    z: -30
  }
  orientation: ORIENTATION_S
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a54d83966393c1f002650"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Human_Pistol"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 63
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -114
    y: 0
    z: -4
  }
  orientation: ORIENTATION_S
  GeneralTags: "Back Up"
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a563f3966393c1f002659"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv5_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 2
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Berlin_AR 2 HK G12A3z"
    }
    equipment {
      prefab_name: "SSC Grenade 1 (Flash)"
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Back Up"
    GeneralTags: "Guard"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 80
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -114
    y: 0
    z: 0
  }
  orientation: ORIENTATION_S
  GeneralTags: "Back Up"
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a58d33966393c1f00265a"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv5_Heavy_SMG"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Back Up"
    GeneralTags: "Guard"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 92
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -114
    y: 0
    z: -1
  }
  orientation: ORIENTATION_S
  GeneralTags: "Back Up"
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a58d33966393c1f00265b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv5_Human_Mage"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Back Up"
    GeneralTags: "Guard"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 89
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -114
    y: 0
    z: -2
  }
  orientation: ORIENTATION_S
  GeneralTags: "Back Up"
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a58d43966393c1f00265c"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv5_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: -2
        rifle: 2
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "Berlin_AR 2 HK G12A3z"
    }
    equipment {
      prefab_name: "SSC Grenade 1 (Flash)"
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Back Up"
    GeneralTags: "Guard"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 77
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -114
    y: 0
    z: -3
  }
  orientation: ORIENTATION_S
  GeneralTags: "Back Up"
  GeneralTags: "Guard"
  displayName: "Guard"
  idRef {
    id: "5d3a58d53966393c1f00265d"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/OrkLonestarGuard"
    character_sheet_id: "Lonestar_Lv5_Heavy_SMG"
    equipment_sheet_id: "Lonestar_Pistol_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    GeneralTags: "Back Up"
    GeneralTags: "Guard"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    karma: 92
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -273
    y: 0
    z: -51
  }
  orientation: ORIENTATION_S
  GeneralTags: "Mars"
  displayName: "Mars"
  idRef {
    id: "5d9525f03966398420006500"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/TrollMale"
    character_sheet_id: "Lvl6_Troll_Samurai"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 3 Colt M23"
    }
    equipment {
      prefab_name: "Grenade (Phosphorus)"
    }
    equipment {
      prefab_name: "Sh 3 Defiance T-250"
    }
    equipment {
      prefab_name: "Grenade 3 (Frag)"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "Grenade 3 (Frag)"
    }
    equipment {
      prefab_name: "Pi 3 Colt Manhunter"
    }
    equipment {
      prefab_name: "HealthPack_med"
    }
    team_id: "Civilians"
    char_name: "Mars"
    GeneralTags: "Mars"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_eyes: "Vision Magnification Eyes 2"
    cyberware_left_leg: "Obvious Cyberleg"
    portrait {
      filename: "backer_trollmale_tomwithuhn"
    }
    karma: 6
    hiring_cost_override: 3000
    hiring_tag: "Samurai"
    id: "Mars"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -99
    y: 0
    z: -7
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5d9bab55396639d41b004b42"
  }
  lod: 0
  character_instance {
    prefab_name: "Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Captain"
    character_mod {
      stats {
        body: 1
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 2
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: -1
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 67
    hiring_cost_override: 1000
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -274
    y: 0
    z: -51
  }
  orientation: ORIENTATION_S
  displayName: "playerSpawner 0"
  idRef {
    id: "5dc0799c396639ec2c006b8a"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -275
    y: 0
    z: -52
  }
  orientation: ORIENTATION_S
  displayName: "playerSpawner 1"
  idRef {
    id: "5dc079a1396639ec2c006b8b"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 1
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -275
    y: 0
    z: -51
  }
  orientation: ORIENTATION_S
  displayName: "playerSpawner 2"
  idRef {
    id: "5dc079a8396639ec2c006b8c"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 2
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -275
    y: 0
    z: -50
  }
  orientation: ORIENTATION_S
  displayName: "playerSpawner 3"
  idRef {
    id: "5dc079b6396639ec2c006b8d"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 3
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -274
    y: 0
    z: -48
  }
  orientation: ORIENTATION_S
  displayName: "Gate Guard"
  idRef {
    id: "5df3e20a396639742b000750"
  }
  lod: 0
  character_instance {
    prefab_name: "Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 3
        hp: 0
        armor: 3
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 3
        dodge: 2
      }
      specializations {
      }
    }
    equipment {
      prefab_name: "pi SSC browningultra-power"
    }
    team_id: "LoneStar"
    char_name: "Lonestar Guard"
    patrolRoute: "New Patrol Route"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    cyberware_jack: "Datajack"
    portrait {
      filename: ""
    }
    karma: 51
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -274
    y: 0
    z: -56
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_1_1"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfaa0853966392c13000bdf"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritWater"
    character_sheet_id: "Spirit Water"
    equipment_sheet_id: "Spirit Water F1 Gear"
    character_mod {
      stats {
        body: -4
        quickness: -5
        strength: -3
        charisma: -3
        intelligence: -3
        willpower: -3
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: -3
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: -3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: -3
        decking: 0
        conjuring: -2
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: -2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: -2
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Water Spirit"
    GeneralTags: "summonFail_1_1"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Water"
    }
    karma: 86
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -274
    y: 0
    z: -57
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_1_2"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfaabf63966392c13000be0"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritWater"
    character_sheet_id: "Spirit Water"
    equipment_sheet_id: "Spirit Water F2 Gear"
    character_mod {
      stats {
        body: -4
        quickness: -5
        strength: -3
        charisma: -3
        intelligence: -3
        willpower: -3
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: -3
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: -3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: -3
        decking: 0
        conjuring: -2
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: -2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: -2
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Water Spirit"
    GeneralTags: "summonFail_1_2"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Water"
    }
    karma: 86
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -274
    y: 0
    z: -58
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_1_3"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfaac603966392c13000be1"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritWater"
    character_sheet_id: "Spirit Water"
    equipment_sheet_id: "Spirit Water F3 Gear"
    character_mod {
      stats {
        body: -4
        quickness: -5
        strength: -3
        charisma: -3
        intelligence: -3
        willpower: -3
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: -3
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: -3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: -3
        decking: 0
        conjuring: -2
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: -2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: -2
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Water Spirit"
    GeneralTags: "summonFail_1_3"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Water"
    }
    karma: 86
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -275
    y: 0
    z: -56
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_1_4"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfaacbe3966392c13000be2"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritWater"
    character_sheet_id: "Spirit Water"
    character_mod {
      stats {
        body: -4
        quickness: -5
        strength: -3
        charisma: -3
        intelligence: -3
        willpower: -3
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: -3
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: -3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: -3
        decking: 0
        conjuring: -2
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: -2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: -2
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Water Spirit"
    GeneralTags: "summonFail_1_4"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Water"
    }
    karma: 86
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -275
    y: 0
    z: -57
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_1_5"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfaad1e3966392c13000be3"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritWater"
    character_sheet_id: "Spirit Water"
    character_mod {
      stats {
        body: -4
        quickness: -5
        strength: -3
        charisma: -3
        intelligence: -3
        willpower: -3
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: -3
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: -3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: -3
        decking: 0
        conjuring: -2
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: -2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: -2
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Water Spirit"
    GeneralTags: "summonFail_1_5"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Water"
    }
    karma: 86
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -275
    y: 0
    z: -58
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_1_6"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfaad653966392c13000be4"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritWater"
    character_sheet_id: "Spirit Water"
    equipment_sheet_id: "Spirit Water F6 Gear"
    character_mod {
      stats {
        body: -4
        quickness: -5
        strength: -3
        charisma: -3
        intelligence: -3
        willpower: -3
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: -3
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: -3
        close_combat: 0
        throwing_weapons: 0
        spellcasting: -3
        decking: 0
        conjuring: -2
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: -2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: -2
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Water Spirit"
    GeneralTags: "summonFail_1_6"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Water"
    }
    karma: 86
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -272
    y: 0
    z: -56
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_7_1"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfaaf4d3966392c13000be5"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritAbomination"
    character_sheet_id: "Spirit Abomination"
    equipment_sheet_id: "Spirit Abomination F1 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Abomination Spirit"
    GeneralTags: "summonFail_7_1"
    pc_spawn_number: -1
    ai_ignores: false
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Abomination"
    }
    karma: 261
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -272
    y: 0
    z: -57
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_7_2"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfab0fc3966392c13000be6"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritAbomination"
    character_sheet_id: "Spirit Abomination"
    equipment_sheet_id: "Spirit Abomination F2 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Abomination Spirit"
    GeneralTags: "summonFail_7_2"
    pc_spawn_number: -1
    ai_ignores: false
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Abomination"
    }
    karma: 261
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -272
    y: 0
    z: -58
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_7_3"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfab17c3966392c13000be7"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritAbomination"
    character_sheet_id: "Spirit Abomination"
    equipment_sheet_id: "Spirit Abomination F3 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Abomination Spirit"
    GeneralTags: "summonFail_7_3"
    pc_spawn_number: -1
    ai_ignores: false
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Abomination"
    }
    karma: 261
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -273
    y: 0
    z: -56
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_7_4"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfabfd83966392c13000be8"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritAbomination"
    character_sheet_id: "Spirit Abomination"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Abomination Spirit"
    GeneralTags: "summonFail_7_4"
    pc_spawn_number: -1
    ai_ignores: false
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Abomination"
    }
    karma: 261
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -273
    y: 0
    z: -57
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_7_5"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfac0473966392c13000be9"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritAbomination"
    character_sheet_id: "Spirit Abomination"
    equipment_sheet_id: "Spirit Abomination F5 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Abomination Spirit"
    GeneralTags: "summonFail_7_5"
    pc_spawn_number: -1
    ai_ignores: false
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Abomination"
    }
    karma: 261
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -273
    y: 0
    z: -58
  }
  orientation: ORIENTATION_S
  GeneralTags: "summonFail_7_6"
  displayName: "Actor Spawner"
  idRef {
    id: "5dfac0bb3966392c13000bea"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Spirit/SpiritAbomination"
    character_sheet_id: "Spirit Abomination"
    equipment_sheet_id: "Spirit Abomination F6 Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Gangers"
    char_name: "Abomination Spirit"
    GeneralTags: "summonFail_7_6"
    pc_spawn_number: -1
    ai_ignores: false
    hiring_type: HiringType_None
    portrait {
      filename: "Generic_Spirit_Abomination"
    }
    karma: 261
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -87
    y: 0
    z: -16
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0121363966393c10007ad8"
  }
  lod: 0
  character_instance {
    prefab_name: "Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Captain"
    character_mod {
      stats {
        body: 1
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 2
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: -1
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 67
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: -31
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0121483966393c10007ad9"
  }
  lod: 0
  character_instance {
    prefab_name: "Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Captain"
    character_mod {
      stats {
        body: 1
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 2
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: -1
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 67
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -70
    y: 0
    z: -43
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01215f3966393c10007ada"
  }
  lod: 0
  character_instance {
    prefab_name: "Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Captain"
    character_mod {
      stats {
        body: 1
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 2
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: -1
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 67
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -78
    y: 0
    z: -43
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01217a3966393c10007adb"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Captain"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 78
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -99
    y: 0
    z: -13
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0121c33966393c10007adc"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv4_Captain"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 78
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -77
    y: 0
    z: -43
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0123923966393c10007add"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Human_Mage"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 61
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -69
    y: 0
    z: -43
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0123e63966393c10007ade"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Human_Mage"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 61
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -86
    y: 0
    z: -16
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0124123966393c10007adf"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Human_Mage"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 61
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: -32
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0124213966393c10007ae0"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Human_Mage"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 61
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -99
    y: 0
    z: -8
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01244f3966393c10007ae1"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Human_Mage"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 61
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -99
    y: 0
    z: 0
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01245b3966393c10007ae2"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Human_Mage"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 61
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -91
    y: 0
    z: -16
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0124673966393c10007ae3"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Human_Mage"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 61
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -102
    y: 0
    z: -13
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0124783966393c10007ae4"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 52
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -99
    y: 0
    z: -12
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0124993966393c10007ae5"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 41
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -102
    y: 0
    z: -12
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0124e13966393c10007ae6"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 52
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -84
    y: 0
    z: -40
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01251f3966393c10007ae7"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 52
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -84
    y: 0
    z: -41
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01251f3966393c10007ae8"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 52
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: -39
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0125203966393c10007ae9"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 52
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: -40
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0125213966393c10007aea"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv3_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 52
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -78
    y: 0
    z: -46
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01254b3966393c10007aeb"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 41
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -77
    y: 0
    z: -46
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01258f3966393c10007aec"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 41
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: -48
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01259f3966393c10007aed"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 41
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: -49
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0125a03966393c10007aee"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 41
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: -50
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0125a03966393c10007aef"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 41
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: -51
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0125a13966393c10007af0"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 41
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -74
    y: 0
    z: -46
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0125d33966393c10007af1"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 41
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -95
    y: 0
    z: -19
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0125fe3966393c10007af2"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 41
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -95
    y: 0
    z: -16
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0126003966393c10007af3"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv2_Ork_Shotgun"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 41
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -94
    y: 0
    z: -16
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01261b3966393c10007af4"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -91
    y: 0
    z: -19
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01264c3966393c10007af5"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -87
    y: 0
    z: -19
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01265a3966393c10007af6"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -86
    y: 0
    z: -19
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01265b3966393c10007af7"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -74
    y: 0
    z: -43
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01268b3966393c10007af9"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -70
    y: 0
    z: -46
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01269d3966393c10007afa"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -62
    y: 0
    z: -46
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0126ab3966393c10007afb"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -61
    y: 0
    z: -43
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0126ad3966393c10007afc"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -62
    y: 0
    z: -43
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0126af3966393c10007afd"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -66
    y: 0
    z: -46
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0126b03966393c10007afe"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -66
    y: 0
    z: -43
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0126b13966393c10007aff"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: -36
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0126ef3966393c10007b00"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -84
    y: 0
    z: -31
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0127133966393c10007b01"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -84
    y: 0
    z: -32
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0127143966393c10007b02"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -102
    y: 0
    z: -7
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01275b3966393c10007b03"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -102
    y: 0
    z: -4
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0127683966393c10007b04"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -99
    y: 0
    z: -4
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0127683966393c10007b05"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -102
    y: 0
    z: 1
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0127813966393c10007b06"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -99
    y: 0
    z: 1
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0127813966393c10007b07"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 30
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -102
    y: 0
    z: 0
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0127933966393c10007b08"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Heavy_SMG"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 39
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -102
    y: 0
    z: -8
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0128003966393c10007b09"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Heavy_SMG"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 39
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -84
    y: 0
    z: -37
  }
  orientation: ORIENTATION_W
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0128333966393c10007b0a"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Heavy_SMG"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 39
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -69
    y: 0
    z: -46
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01285b3966393c10007b0b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Heavy_SMG"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 39
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -61
    y: 0
    z: -46
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e0128823966393c10007b0c"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Heavy_SMG"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 39
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -94
    y: 0
    z: -19
  }
  orientation: ORIENTATION_N
  GeneralTags: "Intervention2"
  idRef {
    id: "5e01289d3966393c10007b0d"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Lonestar/HumanMaleLonestarGuard"
    character_sheet_id: "Lonestar_Lv1_Heavy_SMG"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
        vision_peripheral_distance: 0
        vision_cone_distance: 0
        vision_cone_angle: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AR 1 Semopal vz88v"
    }
    team_id: "LoneStar"
    char_name: "Lonestar"
    GeneralTags: "Intervention2"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "generic_humanmale_lonestarguard01"
    }
    karma: 39
    hiring_cost_override: 1000
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Ladder"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Tree"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Tree-Rope"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Evidence"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Rocks"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Rock-rope"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Jump"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Evidence-Spotted"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Gate-Open"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "NoEvidence"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Inside"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "WindowBypass"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "seenOutside"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Noise"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Coller"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "locationSeen"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Fire"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "InSight"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "MainDoorOpen"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "SideDoorBypass"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "BackupCounter"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TurnCounter"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TurnsOfBackup"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TurnsToLoneStar"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "VanPosition"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "DstractionE"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireLocationID1"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireLocationID2"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireLocationID3"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireLocationID4"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireLocationID5"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireLocationID6"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireLocationID7"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireLocationID8"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireLocationID9"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireLocationID10"
    typeName: "bool"
  }
}
variables {
  int_value: 1
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireChargesPlanted"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireID"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TheftID"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TheftLocation1"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TheftLocation2"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TheftLocation3"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TheftLocation4"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TheftLocation5"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TheftLocation6"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TheftLocation7"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TheftLocation8"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TheftsCommitted"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "FireStarted"
    typeName: "bool"
  }
}
mapEvents: "Alarm"
mapEvents: "Test"
mapEvents: "Go In"
mapEvents: "guardsIn"
mapEvents: "guardsOut"
mapEvents: "Fire"
mapEvents: "HoundsOut"
mapEvents: "GuardsMove"
mapEvents: "SetLocation"
mapEvents: "OnFire"
mapEvents: "Check Next Objective"
mapEvents: "AtStart"
mapEvents: "New Event"
mapEvents: "New Event"
mapEvents: "New Event"
senseTags: "In"
senseTags: "Hit"
senseTags: "Visible"
senseTags: "Intervention2"
senseTags: "Not Visible"
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "run location-Mansion 3"
parentStory: ""
scene_title: "Mansion"
scene_subtitle: ""
scene_synopsis: "This close to Seattle the (relatively) clean air practically reeks of wealth. You left Lonestar patrols behind you in less affluent neighborhoods. At first, this is surprising, but you realize it makes sense as they have private security. Still, Lonestar will come running like a dog on a leash if called."
scene_image: "loadingimage_a1_intro_s1"
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 1
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Hounds"
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: true
hiring_average_cost: 750
override_hiring_average_cost: true
show_equip_screen_on_scene_load: true
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: false
can_use_team_advancement: false
