triggers {
  name: "DoorShutdown(Matrix)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "MatrixDoorCascade"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "RemoteDoorDisable"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Hack Status On Matrix Node Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HackIndicatorStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9e19e336331242700134d"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9e19e336331242700134d"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "524639523363317c1e006541"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "CameraShutdown(Matrix)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "MatrixCameraShutdown"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "RemoteCameraDisable"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Hack Status On Matrix Node Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HackIndicatorStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9e19e336331242700134d"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9e19e336331242700134d"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52463452336331e42200617b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "ForceJackDefeat"
  events {
    ops {
      functionName: "On Actor Downed"
    }
  }
  conditions {
    ops {
      functionName: "Actor is a Persona"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "JackOut"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Located_File"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52464112336331cc13003bab"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JackOut1"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "JackOut"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f169b733633124330018bf"
          }
          args {
            string_value: "Travel"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 101
      }
    }
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "Low-Lifestyle_Apt"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52463f81336331cc13003ba8"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JackOut2"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "JackOut"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f169b733633124330018bf"
          }
          args {
            string_value: "Travel"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 102
      }
    }
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "the barrens"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "524637b9336331cc13003bac"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JackOut3"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "JackOut"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f169b733633124330018bf"
          }
          args {
            string_value: "Travel"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 103
      }
    }
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "puyullup barrens"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "524637d1336331cc13003bae"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JackOut4"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "JackOut"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f169b733633124330018bf"
          }
          args {
            string_value: "Travel"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 106
      }
    }
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "penumbra district"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "524637ed336331cc13003bb0"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JackOut5"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "JackOut"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f169b733633124330018bf"
          }
          args {
            string_value: "Travel"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 105
      }
    }
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "northcity"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52463805336331cc13003bb2"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JackOut6"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "JackOut"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f169b733633124330018bf"
          }
          args {
            string_value: "Travel"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 110
      }
    }
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "Small House"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52463829336331cc13003bb4"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JackOut7"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "JackOut"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f169b733633124330018bf"
          }
          args {
            string_value: "Travel"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 111
      }
    }
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "Warehouse Safehouse Pre-SetUp"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52463841336331cc13003bb7"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JackOut8"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "JackOut"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f169b733633124330018bf"
          }
          args {
            string_value: "Travel"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 104
      }
    }
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Open Scene"
      args {
        call_value {
          functionName: "Get Map Item (Scene)"
          args {
            string_value: "the puyullup barrens"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52a10a26336331301f00440f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "on(ActorHit) PC0 die?"
  events {
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5d239278393563d42b000823"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5d238e9d39356360410054d8"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Unkillable Player"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Actor Unkillable"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "532af58c336331c4230018ba"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Journal"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Screen Label"
      args {
        string_value: "Journal"
      }
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "text"
          }
          args {
            string_value: "Information"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52640949336331d018000bdc"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JackOut Health Integrity"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "JackOut"
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Attribute"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "BaseOrCurrent"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  actions {
    ops {
      functionName: "Set Actor Base Attribute"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 5
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorAttributes"
          }
          args {
            int_value: 8
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52794fa3336331d829002225"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Jack-In Delay"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Suspend Team\'s Turn"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52995d073363312011001577"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "JackOut-Conversation"
  events {
    ops {
      functionName: "On Host Jacked Out"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52a0fa73336331f018004baf"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Located_File"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52464041336331cc13003baa"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "JackOut-System Integrity"
  events {
    ops {
      functionName: "On Host Jacked Out"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Employed"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Employee_SkeletonCrew"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "RemoteCameraDisable"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "RemoteDoorDisable"
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "52463c4c336331a01f001ab9"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Jack-In"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Jack-In"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Force-Use Interactable Object (with Actor)"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51f7cc52336331a81e001921"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52a622733363312c0c0028b7"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Slave-Door Disable Test"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "MatrixDoorTest"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Actor Skill"
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "BaseOrCurrent"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "ActorSkills"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "DeckerTraining"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_EXPLOIT"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_GenericStart"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You successfully disable the MagLocks on the security doors linked to this system."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "MatrixDoorCascade"
          }
        }
      }
    }
    ops {
      functionName: "End Current Actor Turn"
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "520d1ecd336331e82b00169d"
  }
  elseActions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Masking Test"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Slave-Camera Disable Test"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "MatrixCameraTest"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Actor Skill"
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "BaseOrCurrent"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "ActorSkills"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "DeckerTraining"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_EXPLOIT"
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Program_Rating_EXPLOIT"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_GenericStart"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You successfully disable the security cameras linked to this system."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "MatrixCameraShutdown"
          }
        }
      }
    }
    ops {
      functionName: "End Current Actor Turn"
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "52463a5b336331382d00450f"
  }
  elseActions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Masking Test"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Slave-MagLocks"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9e64b336331242700133d"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "Mag"
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "MatrixDoorTest"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0adc6336331b828000247"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Slave-Camera"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9e19e336331242700134d"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "Cam"
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "MatrixCameraTest"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0ae34336331b828000248"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Slave-Special"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e0ac12336331b82800023e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "Spec"
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "MatrixDoorTest"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0ae4b336331b828000249"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Slave-Special Disable Test"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Special Disable Test"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Actor Skill"
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "BaseOrCurrent"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "ActorSkills"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "DeckerTraining"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_EXPLOIT"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_GenericStart"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You successfully disable this Slave Module. Score one for the downtrodden hacker!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "End Current Actor Turn"
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e0ac12336331b82800023e"
          }
        }
      }
    }
    ops {
      functionName: "Set Hack Status On Matrix Node Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HackIndicatorStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e0ac12336331b82800023e"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0ae74336331b82800024a"
  }
  elseActions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Masking Test"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Test"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Test"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "TestRangeLow"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Skill_Test_Modifier"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "TestRangeHigh"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Skill_Test_Modifier"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52464108336331f02100572c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Access Node-Spoof_Pass (A)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "SpoofTest"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Actor Skill"
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "BaseOrCurrent"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "ActorSkills"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "DeckerTraining"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_SPOOF"
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "X"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Barrier"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_BuffHit"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Spoof_Check"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You spoof the system and disable the Access IC without alerting the security systems."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 2
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Node Hacked"
          }
        }
      }
    }
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Barrier"
          }
        }
      }
      args {
        float_value: 10
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Nearest Tagged Prop to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "Peaceful"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Last Created Persona"
                }
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52463a5b336331382d004511"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Access Node-Spoof_Fail"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "SpoofTest"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Actor Skill"
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "BaseOrCurrent"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "ActorSkills"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "DeckerTraining"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_SPOOF"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Spoof_Check"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Masking Test"
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "End Current Actor Turn"
    }
  }
  isActive: true
  idRef {
    id: "52463a5b336331382d004512"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "CPU Disable Test"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "CPU Disable"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Actor Skill"
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "BaseOrCurrent"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "ActorSkills"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "DeckerTraining"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_EXPLOIT"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_GenericStart"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You manage to subvert control of the CPU and gain a significant advantage within the system."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
    ops {
      functionName: "Modify Dimension Heat"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
      args {
        float_value: -10
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "CPU_Exploited"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "End Current Actor Turn"
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "SecurityTally"
          }
        }
      }
      args {
        int_value: -10
      }
    }
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "FIREWALL"
          }
        }
      }
      args {
        float_value: -1
      }
      args {
        call_value {
          functionName: "Everywhere"
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e7db336331f02200420f"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e2bb3363314c21000ce4"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e3593363314c21000cf0"
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e3cb3363314c21000cfc"
          }
        }
      }
    }
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Killswitch"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "TestDifficulty"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Difficulty_Baseline"
          }
        }
      }
    }
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            string_value: "Barrier"
          }
        }
      }
      args {
        float_value: 15
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52463c8b336331cc13005837"
  }
  elseActions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Masking Test"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "MatrixDataTest (Employee)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Skeleton Crew"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Actor Skill"
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "BaseOrCurrent"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "ActorSkills"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "DeckerTraining"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_EDIT"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_GenericStart"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You successfully change the employee schedules."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "End Current Actor Turn"
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52d4461833633174040046e3"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52d9de173363312427001323"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Employee_SkeletonCrew"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "52464219336331cc13005925"
  }
  elseActions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Masking Test"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Masking Test"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Masking Test"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Actor Skill"
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "BaseOrCurrent"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "ActorSkills"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "DeckerTraining"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_MASKING"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You accidentally trip a security measure but Mask your presence. Security resets itself after a few moments."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 2
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d4417633633174040046e2"
  }
  elseActions {
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Modify Dimension Heat"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
      args {
        float_value: 5
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "IC Trip"
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You fail to operate the node successfully and Mask your presence completely, drawing the attention of Intrusion Countermeasures."
      }
      args {
        float_value: 2
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "End Current Actor Turn"
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "System Data A-PayData"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9eae5336331242700127d"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "MatrixRunComplete"
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (string)"
          args {
            call_value {
              functionName: "Get Story Variable (string)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Current_Run-Objective"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            string_value: "Download"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "DS 1"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "59036de9323234c006006778"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5263ff8e3363311c210066c7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d4461833633174040046e3"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "System Data B-PayData"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9eb1633633124270012bb"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "DS 2"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "59036de9323234c006006778"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5263ff8e3363311c210066c7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9df6f3363312427001320"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "System Data C-PayData"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9eb1f33633124270012de"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "MatrixRunComplete"
          }
        }
      }
      args {
        call_value {
          functionName: "AND"
          args {
            call_value {
              functionName: "Comparison (string)"
              args {
                call_value {
                  functionName: "Get Story Variable (string)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Current_Run-Objective"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "IsOrIsNot"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                string_value: "Edit"
              }
            }
          }
          args {
            call_value {
              functionName: "Comparison (string)"
              args {
                call_value {
                  functionName: "Get Story Variable (string)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Current_Run-Objective"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "IsOrIsNot"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                string_value: "Delete"
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "DS 3"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "59036de9323234c006006778"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5263ff8e3363311c210066c7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9df7a3363312427001321"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "System Data D-PayData"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9eb213363312427001301"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "DS 4"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "59036de9323234c006006778"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5263ff8e3363311c210066c7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9df813363312427001322"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "System Data-Employee"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9eae5336331242700127d"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Employee_SkeletonCrew"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Run_Type"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Skeleton Crew"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "DS 1"
      }
    }
    ops {
      functionName: "End Current Actor Turn"
    }
  }
  isActive: false
  idRef {
    id: "52d9de173363312427001323"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "System Data-Download"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9eae5336331242700127d"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Objective"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Download"
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "MatrixRunComplete"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "DS 1"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5ca63a10333535c045001b11"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5263ff8e3363311c210066c7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d4477033633174040046da"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "System Data-Edit"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9eb1f33633124270012de"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Objective"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Edit"
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "MatrixRunComplete"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "DS 1"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5ca63a10333535c045001b11"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5263ff8e3363311c210066c7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d43b803363317404005079"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "System Data-Delete"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9eb1f33633124270012de"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (string)"
      args {
        call_value {
          functionName: "Get Story Variable (string)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Current_Run-Objective"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Delete"
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "MatrixRunComplete"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "DS 1"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5ca63a10333535c045001b11"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5263ff8e3363311c210066c7"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d43c19336331740400507d"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "System Data Integrity (Employee)"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Employed"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Run_Type"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52d4461833633174040046e3"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "52d9dff93363312427001324"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "System Initializing"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Manual Turn Mode"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "TestDifficulty"
          }
        }
      }
      args {
        int_value: 5
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "TestRangeLow"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "TestDifficulty"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            int_value: 4
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "TestRangeHigh"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "TestDifficulty"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f169b733633124330018bf"
          }
          args {
            string_value: "Universal_Random"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 10
          }
        }
      }
    }
    ops {
      functionName: "Play Music"
      args {
        call_value {
          functionName: "Get Map Item (Music)"
          args {
            string_value: "Seattle_Set8"
          }
          args {
            string_value: "Seattle-Set8-MatrixLoop"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Jack-In"
          }
        }
      }
    }
    ops {
      functionName: "Set Screen Label Progress Bar (int)"
      args {
        string_value: "Storage Capacity"
      }
      args {
        string_value: "Storage Capacity"
      }
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Storage_Used"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Storage"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Difficulty_Baseline"
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  isActive: true
  idRef {
    id: "52d43f2f336331201c0034d5"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Heat Build-Up (Attacking)"
  events {
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Modify Dimension Heat"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
      args {
        float_value: 2
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "SecurityTally"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e6e6336331c421000a62"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Security Tally (Round)"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "SecurityTally"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e02e336331c421000a6e"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "ESP Heat Fix"
  events {
    ops {
      functionName: "On Actor Alive"
    }
  }
  conditions {
    ops {
      functionName: "Actor is Jacked in to Matrix Dimension"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
    }
    ops {
      functionName: "Actor is Player Controlled"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Modify Dimension Heat"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
      args {
        float_value: -4
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e0b4336331c421000a70"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Trace & Dump IC"
  events {
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Tracer"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Trace_In_Progross"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TraceIC"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Trace_Rating"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "TestDifficulty"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 3
              }
            }
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Get Variable (string)"
              args {
                string_value: "TracerIC"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Tracer"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You have triggered Tracer IC. Crash the barrier before the trace completes!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Trace_In_Progross"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e913336331f802000388"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Trace Progress (Tracking)"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TraceIC"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TraceProgress"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Variable (int)"
              args {
                string_value: "Trace_Rating"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Skill_Test_Modifier"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Screen Label Progress Bar (int)"
      args {
        string_value: "Trace"
      }
      args {
        string_value: "Trace Progress"
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TraceProgress"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_MASKING"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                int_value: 5
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 10
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e2c0336331c421000a71"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Trace Progress (Dump)"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TraceProgress"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            int_value: 10
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_MASKING"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                int_value: 5
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TraceIC"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_DumpShock"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "JackOut"
          }
        }
      }
      args {
        float_value: 4
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "The Trace is complete, and you are being booted from the system."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e3a7336331c421000a72"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Stop Trace"
  events {
    ops {
      functionName: "On Actor Downed"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                call_value {
                  functionName: "Get Variable (string)"
                  args {
                    string_value: "TracerIC"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TraceIC"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TraceProgress"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Screen Label Progress Bar (int)"
      args {
        string_value: "Trace"
      }
      args {
        string_value: "Trace Progress"
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TraceProgress"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Program_Rating_MASKING"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Trace_In_Progross"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9ea68336331f802000389"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Active Alert"
  events {
    ops {
      functionName: "On Dimension Heat Threshold"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "MatrixAlarm"
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "TestDifficulty"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "The system is now on ACTIVE alert."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "IC"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Alert_Level"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9ea14336331c421000a6c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Passive Alert"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "SecurityTally"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 36
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Alert_Level"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "TestDifficulty"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "The system is now on PASSIVE alert."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "props"
          }
          args {
            string_value: "Alarm3"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Passive Alert"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Alert_Level"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9dffb336331f80200038a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Passive Alert Reset"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "SecurityTally"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        int_value: 36
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Alert_Level"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "TestDifficulty"
          }
        }
      }
      args {
        int_value: -2
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "The system is no longer on PASSIVE alert."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Alert_Level"
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e6353363312427001496"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Access IC (SPU 1)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9e1763363314c21000a50"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessIC"
          }
        }
      }
      args {
        string_value: "SPU 1"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Access_Node"
          }
        }
      }
      args {
        string_value: "SPU 1"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "SPU 1"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessNodeName"
          }
        }
      }
      args {
        string_value: "DATA ROUTING\nSUB PROCESSING UNIT\n\nThis node is sealed with ACCESS IC"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9e4983363314c21000990"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52d9e36a3363314c21000a79"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e5d03363314c210009a0"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Access IC (SAN)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9eb733363314c21000b90"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessIC"
          }
        }
      }
      args {
        string_value: "SAN"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Access_Node"
          }
        }
      }
      args {
        string_value: "SAN"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "SAN"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessNodeName"
          }
        }
      }
      args {
        string_value: "SYSTEM ACCESS NODE\n\nACCESS IC is barring your entry into the system."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9e4983363314c21000990"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Active Actor"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9de8f3363314c21000bc1"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Access IC (CPU)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9eb4b336331242700144f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "CPU"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9eba33363312427001450"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9eb40336331242700144c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Access IC (SPU 3)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e0a1e7336331640d006e88"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessIC"
          }
        }
      }
      args {
        string_value: "SPU 3"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Access_Node"
          }
        }
      }
      args {
        string_value: "SPU 3"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "SPU 3"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessNodeName"
          }
        }
      }
      args {
        string_value: "DATA ROUTING\nSUB PROCESSING UNIT\n\nThis node is sealed with ACCESS IC"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9e4983363314c21000990"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52e0a225336331640d006e99"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0a225336331640d006e98"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Access IC (SPU 2)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9ea973363312427000fa1"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessIC"
          }
        }
      }
      args {
        string_value: "SPU 2"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Access_Node"
          }
        }
      }
      args {
        string_value: "SPU 2"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "SPU 2"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessNodeName"
          }
        }
      }
      args {
        string_value: "SUB PROCESSING UNIT\n\nThis node is sealed with ACCESS IC"
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9e4983363314c21000990"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52d9de5e3363314c21000b46"
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9de5e3363314c21000b45"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "SPU 1 Hacked"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Node Hacked"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9e1763363314c21000a50"
          }
        }
      }
    }
    ops {
      functionName: "Set Hack Status On Matrix Node Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HackIndicatorStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9e1763363314c21000a50"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52d9e36a3363314c21000a79"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "52d9e36a3363314c21000a79"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "SPU 2 Hacked"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Node Hacked"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9ea973363312427000fa1"
          }
        }
      }
    }
    ops {
      functionName: "Set Hack Status On Matrix Node Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HackIndicatorStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9ea973363312427000fa1"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52d9de5e3363314c21000b46"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "52d9de5e3363314c21000b46"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "SPU 3 Hacked"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Node Hacked"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e0a1e7336331640d006e88"
          }
        }
      }
    }
    ops {
      functionName: "Set Hack Status On Matrix Node Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HackIndicatorStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e0a1e7336331640d006e88"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52e0a225336331640d006e99"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "52e0a225336331640d006e99"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "IC Trip"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "IC Trip"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Get Variable (string)"
              args {
                string_value: "IC_Location"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "IC Trip Node Disable"
          }
        }
      }
    }
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Peaceful"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e7f53363314c210009bd"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "SPU 1 Disable (IC Trip)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "IC Trip Node Disable"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Peaceful"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "SPU 1"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52d9e36a3363314c21000a79"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Node Hacked"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e6a53363314c21000a96"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "SPU 2 Disable (IC Trip)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "IC Trip Node Disable"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Peaceful"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "SPU 2"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52d9de5e3363314c21000b46"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Node Hacked"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9de5e3363314c21000b47"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "SAN Disable (IC Trip)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "IC Trip Node Disable"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Peaceful"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "SAN"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Peaceful"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e9363363314c21000c73"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "SPU 3 Disable (IC Trip)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "IC Trip Node Disable"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Peaceful"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "SPU 2"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Enable/Disable Trigger"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "52d9de5e3363314c21000b46"
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Node Hacked"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0a225336331640d006e9a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Node Level (SPU 1)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e9563363314c21000949"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "BLUE"
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e3bc3363314c21000c4f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (SPU 2)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9ea973363312427000f96"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "BLUE"
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9ea493363314c21000c75"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (IOP)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e9563363312427001265"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "BLUE"
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e3bd3363312427001294"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (DS A)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9ebc63363312427001282"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "GREEN"
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e3cb3363312427001295"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (DS B)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9eb1633633124270012b8"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "BLUE"
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: -1
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e8a133633124270012b4"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (DS C)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9eb1f33633124270012db"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "YELLOW"
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e8a333633124270012b5"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (DS D)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9eb2133633124270012fe"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "BLUE"
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e8a633633124270012b6"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (MagLock)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e6e73363312427001349"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "BLUE"
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e2d9336331242700137b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (Camera)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e6643363312427001340"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "BLUE"
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e2f6336331242700137c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (SAN)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9eae33363314c21000b7a"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "BLUE"
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0a69033633184040025cd"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (Special)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52e0abef336331b82800020b"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "BLUE"
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0aca4336331b828000246"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (CPU)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e56a33633124270013bf"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "YELLOW"
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e58533633124270013c0"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Node Level (SPU 3)"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52e0a1e6336331640d006e62"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Get Persona\'s Host"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Skill_Test_Modifier"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Node_Level"
          }
        }
      }
      args {
        string_value: "GREEN"
      }
    }
  }
  isActive: true
  idRef {
    id: "52e2cea4336331a81a003a7b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Firewall Spawn 1"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Passive Alert"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e7db336331f02200420f"
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "52d9e12b3363314c21000cd6"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "52d9e790336331a826000f46"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "52d9e2823363314c21000ce1"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "52d9e7083363312427000f40"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "52d9e27f3363314c21000cde"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "52d9e8bf3363312427000f6c"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "52d9e2833363314c21000ce2"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "52d9e70d3363312427000f41"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "52d9e2803363314c21000cdf"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "52d9e70e3363312427000f42"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "52d9e2843363314c21000ce3"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "52d9e7103363312427000f43"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "52d9e2813363314c21000ce0"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "52d9e7133363312427000f44"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Move Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "52d9e8613363314c21000c89"
          }
        }
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "52d9e97b3363312427000f77"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9e7593363314c21000c7c"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Firewall 1 Damage"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e7db336331f02200420f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Cause Damage"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "TestDifficulty"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            int_value: 25
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "FIREWALL"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9ebd13363314c21000cc7"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Firewall 1 Test"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Firewall Test"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Actor Skill"
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "BaseOrCurrent"
                  }
                  args {
                    int_value: 1
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "ActorSkills"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "DeckerTraining"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_MASKING"
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Firewall"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You successfully circumvent the Firewall using your Exploit Program."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "FIREWALL"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Region Enabled"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52d9e7db336331f02200420f"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9ebd13363314c21000cc8"
  }
  elseActions {
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You fail to circumvent the Firewall using your Exploit Program."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Modify Dimension Heat"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
      args {
        float_value: 2
      }
    }
    ops {
      functionName: "Delete Prop"
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "52d9e8613363314c21000c89"
          }
        }
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "SecurityTally"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "Firewall 1 Control"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52d9e8613363314c21000c89"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Firewall"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9de623363314c21000ccc"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52d9de3f3363314c21000ccb"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Calculate Deck Storage 1"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "SSC CyberdeckSony"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Storage"
          }
        }
      }
      args {
        int_value: 100
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Total_Storage"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Deck_Storage"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Deck_Storage_Upgrade"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0a136336331640d0076e1"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Calculate Deck Storage 2"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "SSC CyberdeckKraftwerk1"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Storage"
          }
        }
      }
      args {
        int_value: 250
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Total_Storage"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Deck_Storage"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Deck_Storage_Upgrade"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0a136336331640d0076e2"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Calculate Deck Storage 3"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "SSC CyberdeckVirtuaX"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Storage"
          }
        }
      }
      args {
        int_value: 500
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Total_Storage"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Deck_Storage"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Deck_Storage_Upgrade"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0a136336331640d0076e3"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Calculate Deck Storage 4"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "SSC CyberdeckExcalibur"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Storage"
          }
        }
      }
      args {
        int_value: 1000
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Total_Storage"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Deck_Storage"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Deck_Storage_Upgrade"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0a136336331640d0076e4"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Calculate Deck Storage 1A"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor Has Item"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "CyberdeckSony"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Storage"
          }
        }
      }
      args {
        int_value: 100
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Deck_Total_Storage"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Deck_Storage"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Deck_Storage_Upgrade"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e0a1f0336331640d0076e5"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Trace & Burn IC"
  events {
    ops {
      functionName: "On Actor Damage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HPOrAP"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Burner"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Burn_In_Progress"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "BurnerIC"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "Trace_Rating"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "TestDifficulty"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 3
              }
            }
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Add Tag to Actor"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            call_value {
              functionName: "Get Variable (string)"
              args {
                string_value: "TracerIC"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Burner"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You have triggered Trace & Burn IC. Crash the barrier before the trace completes or it could be lethal!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Burn_In_Progress"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e2ca75336331001a00445e"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Trace Progress (Burn/Tracking)"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "BurnerIC"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TraceProgress"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Variable (int)"
              args {
                string_value: "Trace_Rating"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Skill_Test_Modifier"
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Screen Label Progress Bar (int)"
      args {
        string_value: "Trace"
      }
      args {
        string_value: "Trace Progress"
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TraceProgress"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_MASKING"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                int_value: 5
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            int_value: 10
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e2ca75336331001a00445f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Trace Progress (Burn)"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "New Dimension 1"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "BurnerIC"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TraceProgress"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            int_value: 10
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_MASKING"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                int_value: 5
              }
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_Avatar-Death"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "The trace is complete, and near-lethal levels of bio-feedback are sent crashing through your datajack."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "End Story With Epilogue"
      args {
        string_value: "earlydeath"
      }
    }
  }
  isActive: true
  idRef {
    id: "52e2ca75336331001a004460"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Stop Trace (Burn)"
  events {
    ops {
      functionName: "On Actor Downed"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Nearest Tagged Actor to Actor"
          args {
            call_value {
              functionName: "Tag From String"
              args {
                call_value {
                  functionName: "Get Variable (string)"
                  args {
                    string_value: "TracerIC"
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "BurnerIC"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TraceProgress"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Screen Label Progress Bar (int)"
      args {
        string_value: "Trace"
      }
      args {
        string_value: "Trace Progress"
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "TraceProgress"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "Program_Rating_MASKING"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            int_value: 5
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Burn_In_Progress"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e2ca75336331001a004461"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Access IC (AC1)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e2e86a336331a81a003aa2"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessIC"
          }
        }
      }
      args {
        string_value: "AC1"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Access_Node"
          }
        }
      }
      args {
        string_value: "AC1"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "AC1"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessNodeName"
          }
        }
      }
      args {
        string_value: "CENTRAL PROCESSING UNIT\n\nACCESS IC is barring your entry into the node."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9e4983363314c21000990"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Active Actor"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e2c837336331a81a003a51"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "AC1 Disable (IC Trip)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "IC Trip Node Disable"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Peaceful"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "AC1"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Peaceful"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e2c89c336331a81a003a52"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Access IC (AC2)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e2ccc2336331a81a003a72"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessIC"
          }
        }
      }
      args {
        string_value: "AC2"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Access_Node"
          }
        }
      }
      args {
        string_value: "AC2"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "AC2"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessNodeName"
          }
        }
      }
      args {
        string_value: "OUTDATED FILES\n\nACCESS IC is barring your entry into the node."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9e4983363314c21000990"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Active Actor"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e2cc39336331a81a003a69"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "AC2 Disable (AC2)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "IC Trip Node Disable"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Peaceful"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "AC2"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Peaceful"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e2cc39336331a81a003a6a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Access IC (AC3)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e397f0336331141700453f"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessIC"
          }
        }
      }
      args {
        string_value: "AC3"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Access_Node"
          }
        }
      }
      args {
        string_value: "AC3"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "AC3"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessNodeName"
          }
        }
      }
      args {
        string_value: "CASE FILES\n\nACCESS IC is barring your entry into the node."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9e4983363314c21000990"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Active Actor"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e2e9b4336331a81a003a8f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "AC Disable (AC3)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "IC Trip Node Disable"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Peaceful"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "AC3"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Peaceful"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e2e9b4336331a81a003a90"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Access Node-Spoof_Pass (B)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "SpoofTest"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "SkillTest"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Get Actor Skill"
              args {
                call_value {
                  functionName: "Active Actor"
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "BaseOrCurrent"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "ActorSkills"
                  }
                  args {
                    int_value: 5
                  }
                }
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "DeckerTraining"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Story Variable (int)"
                  args {
                    string_value: "51f15c62336331d02c00440e"
                  }
                  args {
                    string_value: "Program_Rating_SPOOF"
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "X"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "BarrierB"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "decker"
          }
          args {
            string_value: "Matrix_BuffHit"
          }
        }
      }
      args {
        float_value: 1
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Spoof_Check"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        string_value: "You rolled a"
      }
      args {
        float_value: 0.25
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Convert (int) to (string)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "51f15c62336331d02c00440e"
              }
              args {
                string_value: "SkillTest"
              }
            }
          }
        }
      }
      args {
        float_value: 0.29
      }
      args {
        float_value: 0.17
      }
      args {
        float_value: 0
      }
      args {
        float_value: 1
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 4
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You spoof the login protocols and disable the Access IC without alerting the security systems."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 2
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Node Hacked"
          }
        }
      }
    }
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "BarrierB"
          }
        }
      }
      args {
        float_value: 10
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Nearest Tagged Prop to Actor"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "Peaceful"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Last Created Persona"
                }
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e3961b336331801a001924"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Barrier A Defeat"
  events {
    ops {
      functionName: "On Actor Downed"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Barrier"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            string_value: "Barrier"
          }
        }
      }
      args {
        float_value: 15
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e394ba336331801a001a7a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Barrier B Defeat"
  events {
    ops {
      functionName: "On Actor Downed"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "BarrierB"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Tag From String"
          args {
            string_value: "BarrierB"
          }
        }
      }
      args {
        float_value: 15
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e394ba336331801a001a7b"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Access IC (AC4)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e39802336331801a002919"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessIC"
          }
        }
      }
      args {
        string_value: "AC4"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Access_Node"
          }
        }
      }
      args {
        string_value: "AC4"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "AC4"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessNodeName"
          }
        }
      }
      args {
        string_value: "CENTRAL PROCESSING UNIT\n\nACCESS IC is barring your entry into the node."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9e4983363314c21000990"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Active Actor"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e3982a336331801a002920"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "AC Disable (AC4)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "IC Trip Node Disable"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Peaceful"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "AC4"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Peaceful"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e3982a336331801a002921"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Access IC (AC5)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e398c4336331801a002927"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessIC"
          }
        }
      }
      args {
        string_value: "AC5"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Access_Node"
          }
        }
      }
      args {
        string_value: "AC5"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "AC5"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessNodeName"
          }
        }
      }
      args {
        string_value: "CENTRAL PROCESSING UNIT\n\nACCESS IC is barring your entry into the node."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9e4983363314c21000990"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Active Actor"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e398ec336331801a002938"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "AC Disable (AC5)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "IC Trip Node Disable"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Peaceful"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "AC5"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Peaceful"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e398ec336331801a002939"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Access IC (AC6)"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52e398de336331801a002932"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessIC"
          }
        }
      }
      args {
        string_value: "AC6"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "Access_Node"
          }
        }
      }
      args {
        string_value: "AC6"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "IC_Location"
          }
        }
      }
      args {
        string_value: "AC6"
      }
    }
    ops {
      functionName: "Set Variable (string)"
      args {
        call_value {
          functionName: "Get Variable (string)"
          args {
            string_value: "AccessNodeName"
          }
        }
      }
      args {
        string_value: "CENTRAL PROCESSING UNIT\n\nACCESS IC is barring your entry into the node."
      }
    }
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52d9e4983363314c21000990"
          }
        }
      }
      args {
        call_value {
          functionName: "Last Created Persona"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Teleport Camera To Actor"
      args {
        call_value {
          functionName: "Active Actor"
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Test"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e398ee336331801a00293a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "AC Disable (AC6)"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "IC Trip Node Disable"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Tag for Prop"
      args {
        call_value {
          functionName: "Nearest Tagged Prop to Actor"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "Peaceful"
              }
            }
          }
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "AC6"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Delete Props by Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "Peaceful"
          }
        }
      }
      args {
        float_value: 5
      }
      args {
        call_value {
          functionName: "Current Location of Actor"
          args {
            call_value {
              functionName: "Last Created Persona"
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e398ee336331801a00293b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Barrier IC Spawn 1"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52e39b41336331a404001e89"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Actor is a Persona"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "52e3939b336331801a0029cc"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e398d1336331a404001e3d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Barrier IC Spawn 2"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52e398be336331a404001e3a"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Actor is a Persona"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "52e200af3363319416000266"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e39931336331a404001e3e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Barrier IC Spawn 3"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52e398c1336331a404001e3b"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Actor is a Persona"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "52e39862336331a404001e38"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e39967336331a404001e3f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Barrier IC Spawn 4"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "52e398c3336331a404001e3c"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Actor is a Persona"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "52e39849336331a404001e37"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52e3998c336331a404001e40"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "exit(entry)"
  events {
    ops {
      functionName: "On Region Exit"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5914a7b0653737cc07002490"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Actor is a Persona"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Actor is Player Controlled"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Actor Run Speed"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "RunSpeedMethod"
          }
          args {
            int_value: 4
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Matrix-LogOffGraceful"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5914a2da653737a016006e5f"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "graceful logout"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51f91fd2336331a847005da6"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Matrix-LogOffGraceful"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "59ff64646537375421004f0d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "on(CurtainUp) stock paydata 1 3 6 7 6 3 1"
  events {
    ops {
      functionName: "On Curtains Up"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Matrix-Paydata1"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Random (int)"
              args {
                int_value: 0
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Random (int)"
                  args {
                    int_value: 0
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Random (int)"
                  args {
                    int_value: 0
                  }
                  args {
                    int_value: 2
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Matrix-Paydata2"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Random (int)"
              args {
                int_value: 0
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Random (int)"
                  args {
                    int_value: 0
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Random (int)"
                  args {
                    int_value: 0
                  }
                  args {
                    int_value: 2
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Matrix-Paydata3"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Random (int)"
              args {
                int_value: 0
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Random (int)"
                  args {
                    int_value: 0
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Random (int)"
                  args {
                    int_value: 0
                  }
                  args {
                    int_value: 2
                  }
                }
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f15c62336331d02c00440e"
          }
          args {
            string_value: "Matrix-Paydata4"
          }
        }
      }
      args {
        call_value {
          functionName: "Arithmetic (int)"
          args {
            call_value {
              functionName: "Random (int)"
              args {
                int_value: 0
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Arithmetic Ops"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Arithmetic (int)"
              args {
                call_value {
                  functionName: "Random (int)"
                  args {
                    int_value: 0
                  }
                  args {
                    int_value: 2
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "Arithmetic Ops"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
              args {
                call_value {
                  functionName: "Random (int)"
                  args {
                    int_value: 0
                  }
                  args {
                    int_value: 2
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5aa4506a3430323441006d2f"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "Hub Camera"
  position {
    x: 169.98
    y: -94
    width: 3
    height: 3
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "51f78842336331a81e0018c7"
  }
  highlight_color {
    r: 1
    g: 0.66666669
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0
    g: 0
    b: 0
    a: 0
  }
  ambient_light_color {
    r: 0
    g: 0
    b: 0
    a: 0
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SPU 1"
  position {
    x: 278
    y: -61
    width: 20
    height: 20
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52d9e9563363314c21000949"
  }
  highlight_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0
    g: 0.33333334
    b: 1
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SAN"
  position {
    x: 282
    y: -97
    width: 12
    height: 12
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52d9eae33363314c21000b7a"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0
    g: 0.33333334
    b: 1
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "IOP"
  position {
    x: 310
    y: -41
    width: 12
    height: 12
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52d9e9563363312427001265"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "DS A"
  position {
    x: 238
    y: -93
    width: 20
    height: 20
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52d9ebc63363312427001282"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.33333334
    g: 0.66666669
    b: 0
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "DS B"
  position {
    x: 206
    y: -61
    width: 20
    height: 20
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52d9eb1633633124270012b8"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0
    g: 0.33333334
    b: 1
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "DS C"
  position {
    x: 202
    y: -25
    width: 20
    height: 20
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52d9eb1f33633124270012db"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 1
    g: 1
    b: 0
    a: 1
  }
  ambient_light_color {
    r: 1
    g: 1
    b: 0
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "CPU"
  position {
    x: 234
    y: -29
    width: 28
    height: 28
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52d9e56a33633124270013bf"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 1
    g: 1
    b: 0
    a: 1
  }
  ambient_light_color {
    r: 1
    g: 1
    b: 0
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "SPU 3"
  position {
    x: 238
    y: -61
    width: 20
    height: 20
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52e0a1e6336331640d006e62"
  }
  highlight_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.33333334
    g: 0.66666669
    b: 0
    a: 1
  }
  ambient_light_color {
    r: 0.33333334
    g: 0.66666669
    b: 0
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "New Region"
  position {
    x: 202
    y: -100
    width: 121
    height: 97
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "52e396b9336331801a0029e4"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "Barrier IC Spawner 1"
  position {
    x: 246
    y: -77
    width: 4
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52e39b41336331a404001e89"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
regions {
  name: "entry"
  position {
    x: 286
    y: -97
    width: 4
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5914a7b0653737cc07002490"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_closet: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
  no_fow_in_region: false
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 171
    y: 0
    z: -94
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5263ff8e3363311c210066c7"
  }
  lod: 0
  character_instance {
    prefab_name: "Objects/InvisibleActor"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
    }
    team_id: "Civilians"
    char_name: "Invisible Runner"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    hiring_type: HiringType_None
    karma: 6
    hiring_cost_override: 3000
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 171
    y: 0
    z: -92
  }
  orientation: ORIENTATION_W
  idRef {
    id: "58d2a5223037368247af1000"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
    spawn_type: SpawnType_Matrix
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 247.5
    y: 0
    z: -26
  }
  orientation: ORIENTATION_W
  GeneralTags: "BarrierB"
  GeneralTags: "AC1"
  displayName: "Access/Barrier IC 1"
  idRef {
    id: "52e2e86a336331a81a003aa0"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/SpiritESPShield"
    character_sheet_id: "IC_Lv1_White_Melee"
    character_mod {
      stats {
        body: -1
        quickness: 0
        strength: -1
        charisma: -3
        intelligence: -1
        willpower: -2
        essence: 0
        magic: 0
        hp: 240
        ap: -2
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Barrier IC (BLUE)"
    GeneralTags: "BarrierB"
    GeneralTags: "AC1"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    dimension_name: "New Dimension 1"
    karma: 15
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 226
    y: 0
    z: -15
  }
  orientation: ORIENTATION_N
  GeneralTags: "IC"
  GeneralTags: "Killswitch"
  GeneralTags: "AC3"
  displayName: "White IC A"
  idRef {
    id: "52e38f8b336331801a0029be"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_range"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv3 Gear"
    character_mod {
      stats {
        body: 2
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        decking: 3
        dodge: 2
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White IC (YELLOW)"
    GeneralTags: "IC"
    GeneralTags: "Killswitch"
    GeneralTags: "AC3"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 50
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 217
    y: 0
    z: -21
  }
  orientation: ORIENTATION_N
  GeneralTags: "IC"
  GeneralTags: "Killswitch"
  GeneralTags: "Tracer"
  GeneralTags: "DS 3"
  displayName: "White IC A"
  idRef {
    id: "52e38ff3336331801a0029bf"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_range"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv3 Gear"
    character_mod {
      stats {
        body: 2
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        decking: 3
        dodge: 2
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White IC (YELLOW)"
    GeneralTags: "IC"
    GeneralTags: "Killswitch"
    GeneralTags: "Tracer"
    GeneralTags: "DS 3"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 50
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 250
    y: 0
    z: -10
  }
  orientation: ORIENTATION_W
  GeneralTags: "IC"
  GeneralTags: "Killswitch"
  GeneralTags: "Tracer"
  GeneralTags: "CPU"
  GeneralTags: "Barrier"
  displayName: "White IC A"
  idRef {
    id: "52e3908e336331801a0029c0"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_range"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv3 Gear"
    character_mod {
      stats {
        body: 2
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        decking: 3
        dodge: 2
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White IC (YELLOW)"
    GeneralTags: "IC"
    GeneralTags: "Killswitch"
    GeneralTags: "Tracer"
    GeneralTags: "CPU"
    GeneralTags: "Barrier"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 50
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 223.5
    y: 0
    z: -51
  }
  orientation: ORIENTATION_S
  GeneralTags: "BarrierB"
  GeneralTags: "AC2"
  displayName: "Access/Barrier IC 1"
  idRef {
    id: "52e39378336331801a0029cb"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/SpiritESPShield"
    character_sheet_id: "IC_Lv1_White_Melee"
    character_mod {
      stats {
        body: -1
        quickness: 0
        strength: -1
        charisma: -3
        intelligence: -1
        willpower: -2
        essence: 0
        magic: 0
        hp: 240
        ap: -2
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Barrier IC (BLUE)"
    GeneralTags: "BarrierB"
    GeneralTags: "AC2"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    dimension_name: "New Dimension 1"
    karma: 15
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 247.5
    y: 0
    z: -77
  }
  orientation: ORIENTATION_E
  GeneralTags: "Barrier"
  GeneralTags: "Tracer"
  displayName: "Access/Barrier IC 1 (DSA)"
  idRef {
    id: "52e3939b336331801a0029cc"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/SpiritESPShield"
    character_sheet_id: "IC_Lv1_White_Melee"
    character_mod {
      stats {
        body: -1
        quickness: 0
        strength: -1
        charisma: -3
        intelligence: -1
        willpower: -2
        essence: 0
        magic: 0
        hp: 340
        ap: -2
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Barrier IC (GREEN)"
    GeneralTags: "Barrier"
    GeneralTags: "Tracer"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    dimension_name: "New Dimension 1"
    karma: 18
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 283.5
    y: 0
    z: -51
  }
  orientation: ORIENTATION_S
  GeneralTags: "Barrier"
  GeneralTags: "SPU 1"
  displayName: "Access/Barrier IC 1"
  idRef {
    id: "52e393d5336331801a0029cd"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/SpiritESPShield"
    character_sheet_id: "IC_Lv1_White_Melee"
    character_mod {
      stats {
        body: -1
        quickness: 0
        strength: -1
        charisma: -3
        intelligence: -1
        willpower: -2
        essence: 0
        magic: 0
        hp: 240
        ap: -2
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Barrier IC (BLUE)"
    GeneralTags: "Barrier"
    GeneralTags: "SPU 1"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    dimension_name: "New Dimension 1"
    karma: 15
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 211
    y: 0
    z: -48
  }
  orientation: ORIENTATION_S
  GeneralTags: "IC"
  GeneralTags: "Killswitch"
  GeneralTags: "DS 2"
  displayName: "White IC A"
  idRef {
    id: "52e39558336331801a0029d7"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_range"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        body: 1
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        decking: 1
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White IC (BLUE)"
    GeneralTags: "IC"
    GeneralTags: "Killswitch"
    GeneralTags: "DS 2"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 34
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 211
    y: 0
    z: -55
  }
  orientation: ORIENTATION_S
  GeneralTags: "IC"
  GeneralTags: "Killswitch"
  GeneralTags: "DS 2"
  displayName: "White IC A"
  idRef {
    id: "52e3958a336331801a0029d8"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_range"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        body: 1
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        decking: 1
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White IC (BLUE)"
    GeneralTags: "IC"
    GeneralTags: "Killswitch"
    GeneralTags: "DS 2"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 34
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 244
    y: 0
    z: -88
  }
  orientation: ORIENTATION_E
  GeneralTags: "IC"
  GeneralTags: "Killswitch"
  GeneralTags: "DS 1"
  displayName: "White IC A"
  idRef {
    id: "52e39598336331801a0029d9"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_range"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        body: 2
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        decking: 2
        dodge: 1
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White IC (GREEN)"
    GeneralTags: "IC"
    GeneralTags: "Killswitch"
    GeneralTags: "DS 1"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 43
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 251
    y: 0
    z: -88
  }
  orientation: ORIENTATION_E
  GeneralTags: "IC"
  GeneralTags: "Killswitch"
  GeneralTags: "DS 1"
  displayName: "White IC A"
  idRef {
    id: "52e395b8336331801a0029da"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_range"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv1 Gear"
    character_mod {
      stats {
        body: 2
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        decking: 2
        dodge: 1
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White IC (GREEN)"
    GeneralTags: "IC"
    GeneralTags: "Killswitch"
    GeneralTags: "DS 1"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 43
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 243.5
    y: 0
    z: -52
  }
  orientation: ORIENTATION_S
  GeneralTags: "Barrier"
  GeneralTags: "Tracer"
  GeneralTags: "SPU 3"
  displayName: "Access/Barrier IC 1"
  idRef {
    id: "52e395f0336331801a0029dc"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/SpiritESPShield"
    character_sheet_id: "IC_Lv1_White_Melee"
    character_mod {
      stats {
        body: -1
        quickness: 0
        strength: -1
        charisma: -3
        intelligence: -1
        willpower: -2
        essence: 0
        magic: 0
        hp: 340
        ap: -2
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 2
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Barrier IC (GREEN)"
    GeneralTags: "Barrier"
    GeneralTags: "Tracer"
    GeneralTags: "SPU 3"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    dimension_name: "New Dimension 1"
    karma: 18
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 287.5
    y: 0
    z: -90
  }
  orientation: ORIENTATION_W
  GeneralTags: "SAN"
  GeneralTags: "Peaceful"
  GeneralTags: "BarrierB"
  GeneralTags: "X"
  displayName: "Access/Barrier IC 1"
  idRef {
    id: "52e390e3336331141700450a"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/SpiritESPShield"
    character_sheet_id: "IC_Lv1_White_Melee"
    character_mod {
      stats {
        body: -1
        quickness: 0
        strength: -1
        charisma: -3
        intelligence: -1
        willpower: -2
        essence: 0
        magic: 0
        hp: 240
        ap: -2
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Barrier IC (BLUE)"
    GeneralTags: "SAN"
    GeneralTags: "Peaceful"
    GeneralTags: "BarrierB"
    GeneralTags: "X"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    dimension_name: "New Dimension 1"
    karma: 15
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 245
    y: 0
    z: -10
  }
  orientation: ORIENTATION_W
  GeneralTags: "IC"
  GeneralTags: "Killswitch"
  GeneralTags: "Tracer"
  GeneralTags: "CPU"
  GeneralTags: "Barrier"
  displayName: "White IC A"
  idRef {
    id: "52e396243363311417004528"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_range"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv3 Gear"
    character_mod {
      stats {
        body: 2
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        decking: 3
        dodge: 2
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White IC (YELLOW)"
    GeneralTags: "IC"
    GeneralTags: "Killswitch"
    GeneralTags: "Tracer"
    GeneralTags: "CPU"
    GeneralTags: "Barrier"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 50
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 217
    y: 0
    z: -10
  }
  orientation: ORIENTATION_N
  GeneralTags: "IC"
  GeneralTags: "Killswitch"
  GeneralTags: "Tracer"
  GeneralTags: "DS 3"
  displayName: "White IC A"
  idRef {
    id: "52e3962c3363311417004529"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/MatrixICE_white_range"
    character_sheet_id: "IC_Lv1_White_Ranged"
    equipment_sheet_id: "IC White Ranged Lv3 Gear"
    character_mod {
      stats {
        body: 2
        hp: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        decking: 3
        dodge: 2
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "White IC (YELLOW)"
    GeneralTags: "IC"
    GeneralTags: "Killswitch"
    GeneralTags: "Tracer"
    GeneralTags: "DS 3"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "matrix"
    karma: 50
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 219.5
    y: 0
    z: -15
  }
  orientation: ORIENTATION_S
  GeneralTags: "BarrierB"
  GeneralTags: "AC3"
  displayName: "Access/Barrier IC 1"
  idRef {
    id: "52e397f0336331141700453b"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Matrix/SpiritESPShield"
    character_sheet_id: "IC_Lv1_White_Melee"
    character_mod {
      stats {
        body: -1
        quickness: 0
        strength: -1
        charisma: -3
        intelligence: -1
        willpower: -2
        essence: 0
        magic: 0
        hp: 240
        ap: -2
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Barrier IC (BLUE)"
    GeneralTags: "BarrierB"
    GeneralTags: "AC3"
    enabled_at_start: false
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    dimension_name: "New Dimension 1"
    karma: 15
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 171
    y: 0
    z: -92
  }
  orientation: ORIENTATION_S
  idRef {
    id: "58d2a5223037368247af1001"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 1
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 171
    y: 0
    z: -92
  }
  orientation: ORIENTATION_S
  idRef {
    id: "58d2a5223037368247af1002"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 2
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 171
    y: 0
    z: -92
  }
  orientation: ORIENTATION_S
  idRef {
    id: "58d2a5223037368247af1003"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 3
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "PayData"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Data1"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Data2"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Data3"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "MatrixRun"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "NodeCheck"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "CPU_Hacked"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "SecurityTally"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TraceProgress"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TraceIC"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Trace_Rating"
    typeName: "int"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "TracerIC"
    typeName: "string"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Access_Node"
    typeName: "string"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "AccessIC"
    typeName: "string"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "IC_Location"
    typeName: "string"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Trace_In_Progross"
    typeName: "bool"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "ControlNode"
    typeName: "string"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "AccessNodeName"
    typeName: "string"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Located_File"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Firewall"
    typeName: "int"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Alert_Level"
    typeName: "int"
  }
}
variables {
  string_value: ""
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Node_Level"
    typeName: "string"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "CPU_Exploited"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Crashed_CPU"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Difficulty_Baseline"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "BurnerIC"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "Burn_In_Progress"
    typeName: "bool"
  }
}
mapEvents: "SunRising"
mapEvents: "NightFall"
mapEvents: "MatrixAlarm"
mapEvents: "NodeLoad"
mapEvents: "SpoofTest"
mapEvents: "MatrixCameraTest"
mapEvents: "MatrixCameraShutdown"
mapEvents: "MatrixDoorTest"
mapEvents: "MatrixDoorCascade"
mapEvents: "RandomSystem"
mapEvents: "TargetSystem"
mapEvents: "JackOut"
mapEvents: "Test"
mapEvents: "MatrixRunData"
mapEvents: "CPU Disable"
mapEvents: "CPU Hacked"
mapEvents: "Skeleton Crew"
mapEvents: "Skeleton Crew Success"
mapEvents: "Revive 1"
mapEvents: "Personas"
mapEvents: "Jack-In"
mapEvents: "Matrix Browse-Edit"
mapEvents: "Matrix-Edit"
mapEvents: "Matrix Browse-Delete"
mapEvents: "Matrix-Delete"
mapEvents: "Masking Test"
mapEvents: "System Permutation"
mapEvents: "Difficulty Check"
mapEvents: "IC Trip"
mapEvents: "Node Hacked"
mapEvents: "IC Trip Node Disable"
mapEvents: "Firewall Test"
mapEvents: "Passive Alert"
mapEvents: "Special Disable Test"
senseTags: "Hacked"
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "Matrix_System-Legal Firm"
parentStory: ""
scene_title: "sl SYSTEM ID: STACH & KELLER LLP"
scene_subtitle: ""
scene_synopsis: "A quick analysis shows this system is associated with a local legal firm named Stach & Keller."
scene_image: "cyberspace"
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
  initial_alarm_state: 0
}
scene_dimensions {
  dimension_name: "New Dimension 1"
  initial_alarm_state: -200
  turns_per_round: 1
}
scene_dimensions {
  dimension_name: "New Dimension 2"
  initial_alarm_state: 0
  turns_per_round: 1
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: true
hiring_average_cost: 750
override_hiring_average_cost: true
show_equip_screen_on_scene_load: false
is_persistant: false
is_persistant_has_value: false
can_move_outside_camera_regions: false
can_start_before_triggers: false
can_use_team_advancement: false
